



InitOp
======

.. py:class:: InitOp(expression)
   :canonical: ansys.scade.apitools.expr.access.InitOp



Bases: :py:obj:`CallExpression`


   Provides for the initialization of flows.

   The format is ``<init>, ..., <init> -> <flow>, ..., <flow>``.

   See the :ref:`init_op <ex__init_op>` example.

   :Parameters:

       **expression**
           Call expression to wrap.









   .. rubric:: Notes

   The design differs slightly from the meta-model. Because the inputs
   must be groups of flows, the :class:`~InitOp` class does not inherit
   from the :class:`~FlowOp` class. It exposes directly the lists of flows and initial
   values instead of having flows that are instances of the :class:`~ListExpression`
   class.





   ..
       !! processed by numpydoc !!












Overview
--------
.. py:currentmodule:: InitOp
.. tab-set::




    .. tab-item:: Properties

        .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~flows`
            - Flows after the first cycle.
          * - :py:attr:`~inits`
            - Initial values of the flows.






Import detail
-------------

.. code-block:: python

    from ansys.scade.apitools.expr.access import InitOp


Property detail
---------------
.. py:property:: flows
   :canonical: ansys.scade.apitools.expr.access.InitOp.flows
   :type: list[Expression]


   
   Flows after the first cycle.
















   ..
       !! processed by numpydoc !!

.. py:property:: inits
   :canonical: ansys.scade.apitools.expr.access.InitOp.inits
   :type: list[Expression]


   
   Initial values of the flows.
















   ..
       !! processed by numpydoc !!





