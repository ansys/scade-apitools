[
    {
        "objectID": "api/ansys/scade/apitools/create/type/TypeTree",
        "href": "api/ansys/scade/apitools/create/type/TypeTree.html#typetree",
        "title": "TypeTree",
        "section": "TypeTree",
        "text": "Bases: abc.ABC\nProvides the top-level abstract class for type trees.\nTypeTree\nTypeTree\nabc.ABC"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/type/TypeTree",
        "href": "api/ansys/scade/apitools/create/type/TypeTree.html#ansys.scade.apitools.create.type.TypeTree",
        "title": "TypeTree > TypeTree > TypeTree",
        "section": "TypeTree > TypeTree",
        "text": "class ansys.scade.apitools.create.type.TypeTree\n\nBases: abc.ABC\n\nProvides the top-level abstract class for type trees."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/type/TypeTree",
        "href": "api/ansys/scade/apitools/create/type/TypeTree.html#import-detail",
        "title": "TypeTree > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/project/create_prop",
        "href": "api/ansys/scade/apitools/create/project/create_prop.html#ansysscadeapitoolscreateprojectcreate_prop",
        "title": "ansys.scade.apitools.create.project.create_prop",
        "section": "ansys.scade.apitools.create.project.create_prop",
        "text": "Create a property.\nProperties are attached to a project, folder, or file reference.\nThey have a name and a list of values. They can be associated with a configuration.\nansys.scade.apitools.create.project.create_prop"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/project/create_prop",
        "href": "api/ansys/scade/apitools/create/project/create_prop.html#ansys.scade.apitools.create.project.create_prop",
        "title": "ansys.scade.apitools.create.project.create_prop > ansys.scade.apitools.create.project.create_prop > create_prop",
        "section": "ansys.scade.apitools.create.project.create_prop > create_prop",
        "text": "ansys.scade.apitools.create.project.create_prop(owner: scade.model.project.stdproject.Annotable, configuration: scade.model.project.stdproject.Configuration | None, name: str, values: List[str]) -> scade.model.project.stdproject.Prop\n\nCreate a property.\n\nProperties are attached to a project, folder, or file reference.\n\nThey have a name and a list of values. They can be associated with a configuration."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/project/create_prop",
        "href": "api/ansys/scade/apitools/create/project/create_prop.html#parameters",
        "title": "ansys.scade.apitools.create.project.create_prop > Parameters",
        "section": "Parameters",
        "text": "Element to attach the property to.\nConfiguration to associate with the property or None.\nName of the property.\nValues of the property as a list of strings.\nParameters\nNone"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/project/create_prop",
        "href": "api/ansys/scade/apitools/create/project/create_prop.html#returns",
        "title": "ansys.scade.apitools.create.project.create_prop > Returns",
        "section": "Returns",
        "text": "std.Prop\nReturns"
    },
    {
        "objectID": "examples/create_when_block",
        "href": "examples/create_when_block.html#when_block",
        "title": "Examples > when_block",
        "section": "when_block",
        "text": "when_block"
    },
    {
        "objectID": "examples/create_when_block",
        "href": "examples/create_when_block.html#overview",
        "title": "Examples > when_block > Overview",
        "section": "Overview",
        "text": "This small example creates the following when block and demonstrates the use of the branch trees.\nOverview"
    },
    {
        "objectID": "examples/create_when_block",
        "href": "examples/create_when_block.html#source",
        "title": "Examples > when_block > Source",
        "section": "Source",
        "text": "Source"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_init",
        "href": "api/ansys/scade/apitools/create/expression/create_init.html#ansysscadeapitoolscreateexpressioncreate_init",
        "title": "ansys.scade.apitools.create.expression.create_init",
        "section": "ansys.scade.apitools.create.expression.create_init",
        "text": "Return the expression tree for the init operator.\nansys.scade.apitools.create.expression.create_init"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_init",
        "href": "api/ansys/scade/apitools/create/expression/create_init.html#ansys.scade.apitools.create.expression.create_init",
        "title": "ansys.scade.apitools.create.expression.create_init > ansys.scade.apitools.create.expression.create_init > create_init",
        "section": "ansys.scade.apitools.create.expression.create_init > create_init",
        "text": "ansys.scade.apitools.create.expression.create_init(flows: LX, inits: LX) -> ET\n\nReturn the expression tree for the init operator."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_init",
        "href": "api/ansys/scade/apitools/create/expression/create_init.html#notes",
        "title": "ansys.scade.apitools.create.expression.create_init > Notes",
        "section": "Notes",
        "text": "This is an interface change with respect to the SCADE Creation Library.\nThe flows and their initial values are now specified in two separate lists.\nNotes"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_init",
        "href": "api/ansys/scade/apitools/create/expression/create_init.html#parameters",
        "title": "ansys.scade.apitools.create.expression.create_init > Parameters",
        "section": "Parameters",
        "text": "Input flows.\nInitial values.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_init",
        "href": "api/ansys/scade/apitools/create/expression/create_init.html#returns",
        "title": "ansys.scade.apitools.create.expression.create_init > Returns",
        "section": "Returns",
        "text": "ET\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/PrjDynOp",
        "href": "api/ansys/scade/apitools/expr/access/PrjDynOp.html#prjdynop",
        "title": "PrjDynOp",
        "section": "PrjDynOp",
        "text": "Bases: ArrayOp\nProvides the dynamic projection of an array.\nSee the prj_dyn_op example.\nPrjDynOp\nPrjDynOp\nArrayOp"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/PrjDynOp",
        "href": "api/ansys/scade/apitools/expr/access/PrjDynOp.html#ansys.scade.apitools.expr.access.PrjDynOp",
        "title": "PrjDynOp > PrjDynOp > PrjDynOp",
        "section": "PrjDynOp > PrjDynOp",
        "text": "class ansys.scade.apitools.expr.access.PrjDynOp(expression: scade.model.suite.ExprCall)\n\nBases: ArrayOp\n\nProvides the dynamic projection of an array.\n\nSee the prj_dyn_op example."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/PrjDynOp",
        "href": "api/ansys/scade/apitools/expr/access/PrjDynOp.html#parameters",
        "title": "PrjDynOp > Parameters",
        "section": "Parameters",
        "text": "Call expression to wrap.\nInitialize the instance from the Scade expression.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/PrjDynOp",
        "href": "api/ansys/scade/apitools/expr/access/PrjDynOp.html#overview",
        "title": "PrjDynOp > Overview",
        "section": "Overview",
        "text": "default\nDefault value of the projection.\nindexes\nPath of the projection.\nOverview\ndefault\nindexes"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/PrjDynOp",
        "href": "api/ansys/scade/apitools/expr/access/PrjDynOp.html#import-detail",
        "title": "PrjDynOp > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/PrjDynOp",
        "href": "api/ansys/scade/apitools/expr/access/PrjDynOp.html#property-detail",
        "title": "PrjDynOp > Property detail",
        "section": "Property detail",
        "text": "Default value of the projection.\nPath of the projection.\nProperty detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/PrjDynOp",
        "href": "api/ansys/scade/apitools/expr/access/PrjDynOp.html#PrjDynOp.default",
        "title": "PrjDynOp > Property detail > default",
        "section": "Property detail > default",
        "text": "property PrjDynOp.default: Expression\n\nDefault value of the projection."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/PrjDynOp",
        "href": "api/ansys/scade/apitools/expr/access/PrjDynOp.html#PrjDynOp.indexes",
        "title": "PrjDynOp > Property detail > indexes",
        "section": "Property detail > indexes",
        "text": "property PrjDynOp.indexes: list[Expression]\n\nPath of the projection."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_data_def_equation",
        "href": "api/ansys/scade/apitools/create/data_def/add_data_def_equation.html#ansysscadeapitoolscreatedata_defadd_data_def_equation",
        "title": "ansys.scade.apitools.create.data_def.add_data_def_equation",
        "section": "ansys.scade.apitools.create.data_def.add_data_def_equation",
        "text": "Create an equation in a scope.\nansys.scade.apitools.create.data_def.add_data_def_equation"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_data_def_equation",
        "href": "api/ansys/scade/apitools/create/data_def/add_data_def_equation.html#ansys.scade.apitools.create.data_def.add_data_def_equation",
        "title": "ansys.scade.apitools.create.data_def.add_data_def_equation > ansys.scade.apitools.create.data_def.add_data_def_equation > add_data_def_equation",
        "section": "ansys.scade.apitools.create.data_def.add_data_def_equation > add_data_def_equation",
        "text": "ansys.scade.apitools.create.data_def.add_data_def_equation(data_def: scade.model.suite.DataDef, diagram: scade.model.suite.Diagram | None, lefts: Sequence[scade.model.suite.LocalVariable | ansys.scade.apitools.create.type.TX], right: ansys.scade.apitools.create.expression.EX | None, position: Tuple[float, float] = (0, 0), size: Tuple[float, float] = (0, 0), symmetrical: bool = False, rotation: int = 0, textual: bool = False) -> scade.model.suite.Equation\n\nCreate an equation in a scope."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_data_def_equation",
        "href": "api/ansys/scade/apitools/create/data_def/add_data_def_equation.html#parameters",
        "title": "ansys.scade.apitools.create.data_def.add_data_def_equation > Parameters",
        "section": "Parameters",
        "text": "Input scope, which is an operator, state, or action.\nDiagram containing the equation. The diagram specified can be either graphical\nor textual, or it can be None. However, it cannot be None if the scope\ncontains at least one diagram.\nList of variables defined by the equation. The elements can be either an\nexisting local variable or a type tree to create an internal\nvariable on the fly when the diagram is a graphical diagram.\nExpression of the equation.\nPosition of the equation, expressed in 1/100th of mm.\nThis value is ignored if the diagram is not a graphical diagram.\nOtherwise, it must be specified.\nSize of the equation, expressed in 1/100th of mm.\nThis value is ignored if the diagram is not a graphical diagram.\nOtherwise, it must be specified.\nWhether the graphical representation is symmetrical.\nRotation angle of the equation, expressed in degrees.\nOptions are 0, 90, 180, and 270.\nWhether the equation is a textual. If False, the equation is\na graphical representation.\nParameters\nNone\nNone\n0\n90\n180\n270\nFalse"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_data_def_equation",
        "href": "api/ansys/scade/apitools/create/data_def/add_data_def_equation.html#returns",
        "title": "ansys.scade.apitools.create.data_def.add_data_def_equation > Returns",
        "section": "Returns",
        "text": "suite.Equation\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ConstValue",
        "href": "api/ansys/scade/apitools/expr/access/ConstValue.html#constvalue",
        "title": "ConstValue",
        "section": "ConstValue",
        "text": "Bases: Expression\nProvides the literal value.\nThe format is <value>.\nSee the const_value example.\nConstValue\nConstValue\nExpression\n<value>"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ConstValue",
        "href": "api/ansys/scade/apitools/expr/access/ConstValue.html#ansys.scade.apitools.expr.access.ConstValue",
        "title": "ConstValue > ConstValue > ConstValue",
        "section": "ConstValue > ConstValue",
        "text": "class ansys.scade.apitools.expr.access.ConstValue(expression: scade.model.suite.ConstValue)\n\nBases: Expression\n\nProvides the literal value.\n\nThe format is <value>.\n\nSee the const_value example."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ConstValue",
        "href": "api/ansys/scade/apitools/expr/access/ConstValue.html#parameters",
        "title": "ConstValue > Parameters",
        "section": "Parameters",
        "text": "Literal to wrap.\nInitialize the instance from the Scade expression.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ConstValue",
        "href": "api/ansys/scade/apitools/expr/access/ConstValue.html#overview",
        "title": "ConstValue > Overview",
        "section": "Overview",
        "text": "value\nLiteral value.\nOverview\nvalue"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ConstValue",
        "href": "api/ansys/scade/apitools/expr/access/ConstValue.html#import-detail",
        "title": "ConstValue > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ConstValue",
        "href": "api/ansys/scade/apitools/expr/access/ConstValue.html#property-detail",
        "title": "ConstValue > Property detail",
        "section": "Property detail",
        "text": "Literal value.\nProperty detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ConstValue",
        "href": "api/ansys/scade/apitools/expr/access/ConstValue.html#ConstValue.value",
        "title": "ConstValue > Property detail > value",
        "section": "Property detail > value",
        "text": "property ConstValue.value: str\n\nLiteral value."
    },
    {
        "objectID": "api/ansys/scade/apitools/info/install/get_scade_properties",
        "href": "api/ansys/scade/apitools/info/install/get_scade_properties.html#ansysscadeapitoolsinfoinstallget_scade_properties",
        "title": "ansys.scade.apitools.info.install.get_scade_properties",
        "section": "ansys.scade.apitools.info.install.get_scade_properties",
        "text": "Get the content of the properties in <home>/common/scade.properties as a dictionary.\nansys.scade.apitools.info.install.get_scade_properties\n<home>/common/scade.properties"
    },
    {
        "objectID": "api/ansys/scade/apitools/info/install/get_scade_properties",
        "href": "api/ansys/scade/apitools/info/install/get_scade_properties.html#ansys.scade.apitools.info.install.get_scade_properties",
        "title": "ansys.scade.apitools.info.install.get_scade_properties > ansys.scade.apitools.info.install.get_scade_properties > get_scade_properties",
        "section": "ansys.scade.apitools.info.install.get_scade_properties > get_scade_properties",
        "text": "ansys.scade.apitools.info.install.get_scade_properties() -> Dict[str, str]\n\nGet the content of the properties in <home>/common/scade.properties as a dictionary."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/index",
        "href": "api/ansys/scade/apitools/create/index.html#the-create-package",
        "title": "The create package",
        "section": "The create package",
        "text": "The create package\ncreate"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/index",
        "href": "api/ansys/scade/apitools/create/index.html#summary",
        "title": "The create package > Summary",
        "section": "Summary",
        "text": "data_def\nProvides create functions for Scade operator definitions.\ndeclaration\nProvides create functions for Scade model declarations.\nexpression\nProvides helpers for creating expression trees.\nproject\nProvides functions for adding elements to a SCADE project (ETP file).\nscade\nProvides helpers for SCADE model creation functions.\ntype\nProvide helpers for creating type trees.\nSummary\ndata_def\ndeclaration\nexpression\nproject\nscade\ntype"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/index",
        "href": "api/ansys/scade/apitools/create/index.html#description",
        "title": "The create package > Description",
        "section": "Description",
        "text": "Provides a collection of functions for creating or updating Scade models.\nDescription"
    },
    {
        "objectID": "api/ansys/scade/apitools/info/runtime/index",
        "href": "api/ansys/scade/apitools/info/runtime/index.html#the-runtimepy-module",
        "title": "The runtime.py module",
        "section": "The runtime.py module",
        "text": "The runtime.py module\nruntime.py"
    },
    {
        "objectID": "api/ansys/scade/apitools/info/runtime/index",
        "href": "api/ansys/scade/apitools/info/runtime/index.html#summary",
        "title": "The runtime.py module > Summary",
        "section": "Summary",
        "text": "ide_print\nPrint based on scade.output.\nide\nWhether the script runs with the SCADE Studio environment.\nprint\nEmulation of print for SCADE Studio environment.\nSummary\nide_print\nide\nprint"
    },
    {
        "objectID": "api/ansys/scade/apitools/info/runtime/index",
        "href": "api/ansys/scade/apitools/info/runtime/index.html#description",
        "title": "The runtime.py module > Description",
        "section": "Description",
        "text": "Provides access to SCADE runtime information.\nDescription"
    },
    {
        "objectID": "api/ansys/scade/apitools/info/runtime/index",
        "href": "api/ansys/scade/apitools/info/runtime/index.html#module-detail",
        "title": "The runtime.py module > Module detail",
        "section": "Module detail",
        "text": "Whether the script runs with the SCADE Studio environment.\nEmulation of print for SCADE Studio environment.\nModule detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/info/runtime/index",
        "href": "api/ansys/scade/apitools/info/runtime/index.html#runtime.ide",
        "title": "The runtime.py module > Module detail > ide",
        "section": "Module detail > ide",
        "text": "runtime.ide\n\nWhether the script runs with the SCADE Studio environment."
    },
    {
        "objectID": "api/ansys/scade/apitools/info/runtime/index",
        "href": "api/ansys/scade/apitools/info/runtime/index.html#runtime.print",
        "title": "The runtime.py module > Module detail > print",
        "section": "Module detail > print",
        "text": "runtime.print\n\nEmulation of print for SCADE Studio environment."
    },
    {
        "objectID": "_examples/prop_pragma",
        "href": "_examples/prop_pragma.html#prop_pragma",
        "title": "prop_pragma",
        "section": "prop_pragma",
        "text": "project: PropPragma.etp\nOutput:\nOutput:\nOutput:\nprop_pragma"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_mapwi",
        "href": "api/ansys/scade/apitools/create/expression/create_mapwi.html#ansysscadeapitoolscreateexpressioncreate_mapwi",
        "title": "ansys.scade.apitools.create.expression.create_mapwi",
        "section": "ansys.scade.apitools.create.expression.create_mapwi",
        "text": "Return the expression tree for the higher-order construct for mapdwi creation.\nansys.scade.apitools.create.expression.create_mapwi"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_mapwi",
        "href": "api/ansys/scade/apitools/create/expression/create_mapwi.html#ansys.scade.apitools.create.expression.create_mapwi",
        "title": "ansys.scade.apitools.create.expression.create_mapwi > ansys.scade.apitools.create.expression.create_mapwi > create_mapwi",
        "section": "ansys.scade.apitools.create.expression.create_mapwi > create_mapwi",
        "text": "ansys.scade.apitools.create.expression.create_mapwi(size: EX, condition: EX, default: EX) -> ET\n\nReturn the expression tree for the higher-order construct for mapdwi creation."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_mapwi",
        "href": "api/ansys/scade/apitools/create/expression/create_mapwi.html#parameters",
        "title": "ansys.scade.apitools.create.expression.create_mapwi > Parameters",
        "section": "Parameters",
        "text": "Number of iterations.\nInitial value of the iteration condition.\nDefault value of the iteration.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_mapwi",
        "href": "api/ansys/scade/apitools/create/expression/create_mapwi.html#returns",
        "title": "ansys.scade.apitools.create.expression.create_mapwi > Returns",
        "section": "Returns",
        "text": "ET\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/prop/pragma/set_pragma_tool_text",
        "href": "api/ansys/scade/apitools/prop/pragma/set_pragma_tool_text.html#ansysscadeapitoolsproppragmaset_pragma_tool_text",
        "title": "ansys.scade.apitools.prop.pragma.set_pragma_tool_text",
        "section": "ansys.scade.apitools.prop.pragma.set_pragma_tool_text",
        "text": "Update the pragma ID which text starts with key of object_ with text.\nCreate a pragma when no pragma ID if no pragma with the given key exists.\nReturn whether the model is modified.\nSee the pragma_tool example.\nansys.scade.apitools.prop.pragma.set_pragma_tool_text\nkey\nobject_\ntext"
    },
    {
        "objectID": "api/ansys/scade/apitools/prop/pragma/set_pragma_tool_text",
        "href": "api/ansys/scade/apitools/prop/pragma/set_pragma_tool_text.html#ansys.scade.apitools.prop.pragma.set_pragma_tool_text",
        "title": "ansys.scade.apitools.prop.pragma.set_pragma_tool_text > ansys.scade.apitools.prop.pragma.set_pragma_tool_text > set_pragma_tool_text",
        "section": "ansys.scade.apitools.prop.pragma.set_pragma_tool_text > set_pragma_tool_text",
        "text": "ansys.scade.apitools.prop.pragma.set_pragma_tool_text(object_: scade.model.suite.Object, id: str, key: str, text: str) -> bool\n\nUpdate the pragma ID which text starts with key of object_ with text.\n\nCreate a pragma when no pragma ID if no pragma with the given key exists.\n\nReturn whether the model is modified.\n\nSee the pragma_tool example."
    },
    {
        "objectID": "api/ansys/scade/apitools/prop/pragma/set_pragma_tool_text",
        "href": "api/ansys/scade/apitools/prop/pragma/set_pragma_tool_text.html#parameters",
        "title": "ansys.scade.apitools.prop.pragma.set_pragma_tool_text > Parameters",
        "section": "Parameters",
        "text": "Element to search for the pragma.\nID of the pragma.\nNew value of the pragma.\nFirst token of the pragma.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/prop/pragma/set_pragma_tool_text",
        "href": "api/ansys/scade/apitools/prop/pragma/set_pragma_tool_text.html#returns",
        "title": "ansys.scade.apitools.prop.pragma.set_pragma_tool_text > Returns",
        "section": "Returns",
        "text": "True if the model is modified, False otherwise.\nReturns\nTrue\nFalse"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/project/create_configuration",
        "href": "api/ansys/scade/apitools/create/project/create_configuration.html#ansysscadeapitoolscreateprojectcreate_configuration",
        "title": "ansys.scade.apitools.create.project.create_configuration",
        "section": "ansys.scade.apitools.create.project.create_configuration",
        "text": "Create a configuration.\nA configuration has a name and belongs to a project.\nansys.scade.apitools.create.project.create_configuration"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/project/create_configuration",
        "href": "api/ansys/scade/apitools/create/project/create_configuration.html#ansys.scade.apitools.create.project.create_configuration",
        "title": "ansys.scade.apitools.create.project.create_configuration > ansys.scade.apitools.create.project.create_configuration > create_configuration",
        "section": "ansys.scade.apitools.create.project.create_configuration > create_configuration",
        "text": "ansys.scade.apitools.create.project.create_configuration(owner: scade.model.project.stdproject.Project, name: str) -> scade.model.project.stdproject.Configuration\n\nCreate a configuration.\n\nA configuration has a name and belongs to a project."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/project/create_configuration",
        "href": "api/ansys/scade/apitools/create/project/create_configuration.html#parameters",
        "title": "ansys.scade.apitools.create.project.create_configuration > Parameters",
        "section": "Parameters",
        "text": "Project.\nName of the configuration.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/project/create_configuration",
        "href": "api/ansys/scade/apitools/create/project/create_configuration.html#returns",
        "title": "ansys.scade.apitools.create.project.create_configuration > Returns",
        "section": "Returns",
        "text": "std.Configuration\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_prj",
        "href": "api/ansys/scade/apitools/create/expression/create_prj.html#ansysscadeapitoolscreateexpressioncreate_prj",
        "title": "ansys.scade.apitools.create.expression.create_prj",
        "section": "ansys.scade.apitools.create.expression.create_prj",
        "text": "Return the expression tree for the projection operator.\nansys.scade.apitools.create.expression.create_prj"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_prj",
        "href": "api/ansys/scade/apitools/create/expression/create_prj.html#ansys.scade.apitools.create.expression.create_prj",
        "title": "ansys.scade.apitools.create.expression.create_prj > ansys.scade.apitools.create.expression.create_prj > create_prj",
        "section": "ansys.scade.apitools.create.expression.create_prj > create_prj",
        "text": "ansys.scade.apitools.create.expression.create_prj(flow: EX, path: LX) -> ET\n\nReturn the expression tree for the projection operator."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_prj",
        "href": "api/ansys/scade/apitools/create/expression/create_prj.html#parameters",
        "title": "ansys.scade.apitools.create.expression.create_prj > Parameters",
        "section": "Parameters",
        "text": "Input flow of the projection.\nElements of the path, which is either the label or index.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_prj",
        "href": "api/ansys/scade/apitools/create/expression/create_prj.html#returns",
        "title": "ansys.scade.apitools.create.expression.create_prj > Returns",
        "section": "Returns",
        "text": "ET\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_call",
        "href": "api/ansys/scade/apitools/create/expression/create_call.html#ansysscadeapitoolscreateexpressioncreate_call",
        "title": "ansys.scade.apitools.create.expression.create_call",
        "section": "ansys.scade.apitools.create.expression.create_call",
        "text": "Return the expression tree for a call to an operator.\nansys.scade.apitools.create.expression.create_call"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_call",
        "href": "api/ansys/scade/apitools/create/expression/create_call.html#ansys.scade.apitools.create.expression.create_call",
        "title": "ansys.scade.apitools.create.expression.create_call > ansys.scade.apitools.create.expression.create_call > create_call",
        "section": "ansys.scade.apitools.create.expression.create_call > create_call",
        "text": "ansys.scade.apitools.create.expression.create_call(operator: scade.model.suite.Operator, args: LX, inst_args: LX | None = None) -> ET\n\nReturn the expression tree for a call to an operator."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_call",
        "href": "api/ansys/scade/apitools/create/expression/create_call.html#parameters",
        "title": "ansys.scade.apitools.create.expression.create_call > Parameters",
        "section": "Parameters",
        "text": "Operator to call.\nParameters: expression trees.\nInstance parameters: expression trees.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_call",
        "href": "api/ansys/scade/apitools/create/expression/create_call.html#returns",
        "title": "ansys.scade.apitools.create.expression.create_call > Returns",
        "section": "Returns",
        "text": "ET\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/ExpressionTree",
        "href": "api/ansys/scade/apitools/create/expression/ExpressionTree.html#expressiontree",
        "title": "ExpressionTree",
        "section": "ExpressionTree",
        "text": "Bases: abc.ABC\nProvides the top-level abstract class for expression trees.\nAny expression can have a label.\nExpressionTree\nExpressionTree\nabc.ABC"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/ExpressionTree",
        "href": "api/ansys/scade/apitools/create/expression/ExpressionTree.html#ansys.scade.apitools.create.expression.ExpressionTree",
        "title": "ExpressionTree > ExpressionTree > ExpressionTree",
        "section": "ExpressionTree > ExpressionTree",
        "text": "class ansys.scade.apitools.create.expression.ExpressionTree(label: str = '')\n\nBases: abc.ABC\n\nProvides the top-level abstract class for expression trees.\n\nAny expression can have a label."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/ExpressionTree",
        "href": "api/ansys/scade/apitools/create/expression/ExpressionTree.html#overview",
        "title": "ExpressionTree > Overview",
        "section": "Overview",
        "text": "label\nOverview\nlabel"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/ExpressionTree",
        "href": "api/ansys/scade/apitools/create/expression/ExpressionTree.html#import-detail",
        "title": "ExpressionTree > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/ExpressionTree",
        "href": "api/ansys/scade/apitools/create/expression/ExpressionTree.html#attribute-detail",
        "title": "ExpressionTree > Attribute detail",
        "section": "Attribute detail",
        "text": "Attribute detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/ExpressionTree",
        "href": "api/ansys/scade/apitools/create/expression/ExpressionTree.html#ExpressionTree.label",
        "title": "ExpressionTree > Attribute detail > label",
        "section": "Attribute detail > label",
        "text": "ExpressionTree.label = ''\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_transition_equation",
        "href": "api/ansys/scade/apitools/create/data_def/add_transition_equation.html#ansysscadeapitoolscreatedata_defadd_transition_equation",
        "title": "ansys.scade.apitools.create.data_def.add_transition_equation",
        "section": "ansys.scade.apitools.create.data_def.add_transition_equation",
        "text": "Create an equation in a transition.\nansys.scade.apitools.create.data_def.add_transition_equation"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_transition_equation",
        "href": "api/ansys/scade/apitools/create/data_def/add_transition_equation.html#ansys.scade.apitools.create.data_def.add_transition_equation",
        "title": "ansys.scade.apitools.create.data_def.add_transition_equation > ansys.scade.apitools.create.data_def.add_transition_equation > add_transition_equation",
        "section": "ansys.scade.apitools.create.data_def.add_transition_equation > add_transition_equation",
        "text": "ansys.scade.apitools.create.data_def.add_transition_equation(transition: scade.model.suite.Transition, lefts: List[scade.model.suite.LocalVariable | ansys.scade.apitools.create.type.TX], right: ansys.scade.apitools.create.expression.EX | None) -> scade.model.suite.Equation\n\nCreate an equation in a transition."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_transition_equation",
        "href": "api/ansys/scade/apitools/create/data_def/add_transition_equation.html#notes",
        "title": "ansys.scade.apitools.create.data_def.add_transition_equation > Notes",
        "section": "Notes",
        "text": "This function ensures the availability of a scope before creating the\nequation. Indeed, the transitions do not have a scope, suite.DataDef, by default.\nNotes"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_transition_equation",
        "href": "api/ansys/scade/apitools/create/data_def/add_transition_equation.html#parameters",
        "title": "ansys.scade.apitools.create.data_def.add_transition_equation > Parameters",
        "section": "Parameters",
        "text": "Input transition.\nList of variables defined by the equation.\nExpression of the equation.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_transition_equation",
        "href": "api/ansys/scade/apitools/create/data_def/add_transition_equation.html#returns",
        "title": "ansys.scade.apitools.create.data_def.add_transition_equation > Returns",
        "section": "Returns",
        "text": "suite.Equation\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/create_constant",
        "href": "api/ansys/scade/apitools/create/declaration/create_constant.html#ansysscadeapitoolscreatedeclarationcreate_constant",
        "title": "ansys.scade.apitools.create.declaration.create_constant",
        "section": "ansys.scade.apitools.create.declaration.create_constant",
        "text": "Create a constant.\nA constant has a name, type, and value.\nansys.scade.apitools.create.declaration.create_constant"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/create_constant",
        "href": "api/ansys/scade/apitools/create/declaration/create_constant.html#ansys.scade.apitools.create.declaration.create_constant",
        "title": "ansys.scade.apitools.create.declaration.create_constant > ansys.scade.apitools.create.declaration.create_constant > create_constant",
        "section": "ansys.scade.apitools.create.declaration.create_constant > create_constant",
        "text": "ansys.scade.apitools.create.declaration.create_constant(owner: scade.model.suite.Package, name: str, type_: ansys.scade.apitools.create.type.TX, value: ansys.scade.apitools.create.expression.EX, path: pathlib.Path | None = None, visibility: VK = VK.PUBLIC) -> scade.model.suite.Constant\n\nCreate a constant.\n\nA constant has a name, type, and value."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/create_constant",
        "href": "api/ansys/scade/apitools/create/declaration/create_constant.html#parameters",
        "title": "ansys.scade.apitools.create.declaration.create_constant > Parameters",
        "section": "Parameters",
        "text": "Owner of the constant, which is either the model itself or a package.\nName of the constant.\nDefinition of the type expressed as a type tree.\nExpression tree defining the value.\nPath of the file for storing the constant. This parameter is ignored if\nthe owner is a package. When the path is None and owner is the model,\ntheconstant is stored in the model’s default file.\nAccessibility of the constant.\nParameters\nNone"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/create_constant",
        "href": "api/ansys/scade/apitools/create/declaration/create_constant.html#returns",
        "title": "ansys.scade.apitools.create.declaration.create_constant > Returns",
        "section": "Returns",
        "text": "suite.Constant\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_fold",
        "href": "api/ansys/scade/apitools/create/expression/create_fold.html#ansysscadeapitoolscreateexpressioncreate_fold",
        "title": "ansys.scade.apitools.create.expression.create_fold",
        "section": "ansys.scade.apitools.create.expression.create_fold",
        "text": "Return the expression tree for the higher-order construct for fold creation.\nansys.scade.apitools.create.expression.create_fold"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_fold",
        "href": "api/ansys/scade/apitools/create/expression/create_fold.html#ansys.scade.apitools.create.expression.create_fold",
        "title": "ansys.scade.apitools.create.expression.create_fold > ansys.scade.apitools.create.expression.create_fold > create_fold",
        "section": "ansys.scade.apitools.create.expression.create_fold > create_fold",
        "text": "ansys.scade.apitools.create.expression.create_fold(size: EX) -> ET\n\nReturn the expression tree for the higher-order construct for fold creation."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_fold",
        "href": "api/ansys/scade/apitools/create/expression/create_fold.html#parameters",
        "title": "ansys.scade.apitools.create.expression.create_fold > Parameters",
        "section": "Parameters",
        "text": "Number of iterations.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_fold",
        "href": "api/ansys/scade/apitools/create/expression/create_fold.html#returns",
        "title": "ansys.scade.apitools.create.expression.create_fold > Returns",
        "section": "Returns",
        "text": "ET\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_map",
        "href": "api/ansys/scade/apitools/create/expression/create_map.html#ansysscadeapitoolscreateexpressioncreate_map",
        "title": "ansys.scade.apitools.create.expression.create_map",
        "section": "ansys.scade.apitools.create.expression.create_map",
        "text": "Return the expression tree for the higher-order construct for map creation.\nansys.scade.apitools.create.expression.create_map"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_map",
        "href": "api/ansys/scade/apitools/create/expression/create_map.html#ansys.scade.apitools.create.expression.create_map",
        "title": "ansys.scade.apitools.create.expression.create_map > ansys.scade.apitools.create.expression.create_map > create_map",
        "section": "ansys.scade.apitools.create.expression.create_map > create_map",
        "text": "ansys.scade.apitools.create.expression.create_map(size: EX) -> ET\n\nReturn the expression tree for the higher-order construct for map creation."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_map",
        "href": "api/ansys/scade/apitools/create/expression/create_map.html#parameters",
        "title": "ansys.scade.apitools.create.expression.create_map > Parameters",
        "section": "Parameters",
        "text": "Number of iterations.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_map",
        "href": "api/ansys/scade/apitools/create/expression/create_map.html#returns",
        "title": "ansys.scade.apitools.create.expression.create_map > Returns",
        "section": "Returns",
        "text": "ET\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_if",
        "href": "api/ansys/scade/apitools/create/expression/create_if.html#ansysscadeapitoolscreateexpressioncreate_if",
        "title": "ansys.scade.apitools.create.expression.create_if",
        "section": "ansys.scade.apitools.create.expression.create_if",
        "text": "Return the expression tree for the if-then-else operator.\nansys.scade.apitools.create.expression.create_if"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_if",
        "href": "api/ansys/scade/apitools/create/expression/create_if.html#ansys.scade.apitools.create.expression.create_if",
        "title": "ansys.scade.apitools.create.expression.create_if > ansys.scade.apitools.create.expression.create_if > create_if",
        "section": "ansys.scade.apitools.create.expression.create_if > create_if",
        "text": "ansys.scade.apitools.create.expression.create_if(condition: EX, then: LX, else_: LX) -> ET\n\nReturn the expression tree for the if-then-else operator."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_if",
        "href": "api/ansys/scade/apitools/create/expression/create_if.html#notes",
        "title": "ansys.scade.apitools.create.expression.create_if > Notes",
        "section": "Notes",
        "text": "This is an interface change with respect to the SCADE Creation Library.\nThe then flows and else flows are now specified in two separate lists.\nNotes\nthen\nelse"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_if",
        "href": "api/ansys/scade/apitools/create/expression/create_if.html#parameters",
        "title": "ansys.scade.apitools.create.expression.create_if > Parameters",
        "section": "Parameters",
        "text": "Expression tree corresponding to the condition of the selector.\nList of expressions trees when the condition is True.\nList of expressions trees when the condition is False.\nParameters\nTrue\nFalse"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_if",
        "href": "api/ansys/scade/apitools/create/expression/create_if.html#returns",
        "title": "ansys.scade.apitools.create.expression.create_if > Returns",
        "section": "Returns",
        "text": "ET\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/OpCall",
        "href": "api/ansys/scade/apitools/expr/access/OpCall.html#opcall",
        "title": "OpCall",
        "section": "OpCall",
        "text": "Bases: CallExpression\nCalls a user-defined operator.\nThe format is <operator><< <instance parameter>, ...>>(<call parameter>, ...).\nOpCall\nOpCall\nCallExpression\n<operator><< <instance parameter>, ...>>(<call parameter>, ...)"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/OpCall",
        "href": "api/ansys/scade/apitools/expr/access/OpCall.html#ansys.scade.apitools.expr.access.OpCall",
        "title": "OpCall > OpCall > OpCall",
        "section": "OpCall > OpCall",
        "text": "class ansys.scade.apitools.expr.access.OpCall(expression: scade.model.suite.ExprCall)\n\nBases: CallExpression\n\nCalls a user-defined operator.\n\nThe format is <operator><< <instance parameter>, ...>>(<call parameter>, ...)."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/OpCall",
        "href": "api/ansys/scade/apitools/expr/access/OpCall.html#notes",
        "title": "OpCall > Notes",
        "section": "Notes",
        "text": "The design differs slightly from the meta-model. The OpCall class\nis no longer aggregated by the CallExpression class but derives from it.\nThis leads to a simpler design.\nNotes\nOpCall\nCallExpression"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/OpCall",
        "href": "api/ansys/scade/apitools/expr/access/OpCall.html#parameters",
        "title": "OpCall > Parameters",
        "section": "Parameters",
        "text": "Expression to wrap.\nInitialize the instance from the Scade expression.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/OpCall",
        "href": "api/ansys/scade/apitools/expr/access/OpCall.html#overview",
        "title": "OpCall > Overview",
        "section": "Overview",
        "text": "call_parameters\nCall parameters.\ninstance_parameters\nInstance call parameters.\noperator\nUser operator.\nOverview\ncall_parameters\ninstance_parameters\noperator"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/OpCall",
        "href": "api/ansys/scade/apitools/expr/access/OpCall.html#import-detail",
        "title": "OpCall > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/OpCall",
        "href": "api/ansys/scade/apitools/expr/access/OpCall.html#property-detail",
        "title": "OpCall > Property detail",
        "section": "Property detail",
        "text": "Call parameters.\nInstance call parameters.\nUser operator.\nProperty detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/OpCall",
        "href": "api/ansys/scade/apitools/expr/access/OpCall.html#OpCall.call_parameters",
        "title": "OpCall > Property detail > call_parameters",
        "section": "Property detail > call_parameters",
        "text": "property OpCall.call_parameters: list[Expression]\n\nCall parameters."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/OpCall",
        "href": "api/ansys/scade/apitools/expr/access/OpCall.html#OpCall.instance_parameters",
        "title": "OpCall > Property detail > instance_parameters",
        "section": "Property detail > instance_parameters",
        "text": "property OpCall.instance_parameters: list[Expression]\n\nInstance call parameters."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/OpCall",
        "href": "api/ansys/scade/apitools/expr/access/OpCall.html#OpCall.operator",
        "title": "OpCall > Property detail > operator",
        "section": "Property detail > operator",
        "text": "property OpCall.operator: scade.model.suite.Operator\n\nUser operator."
    },
    {
        "objectID": "api/ansys/scade/apitools/query/index",
        "href": "api/ansys/scade/apitools/query/index.html#the-query-package",
        "title": "The query package",
        "section": "The query package",
        "text": "The query package\nquery"
    },
    {
        "objectID": "api/ansys/scade/apitools/query/index",
        "href": "api/ansys/scade/apitools/query/index.html#summary",
        "title": "The query package > Summary",
        "section": "Summary",
        "text": "type\nProvides queries for SCADE Suite types.\nSummary\ntype"
    },
    {
        "objectID": "api/ansys/scade/apitools/query/index",
        "href": "api/ansys/scade/apitools/query/index.html#description",
        "title": "The query package > Description",
        "section": "Description",
        "text": "Provides a collection of queries for SCADE Suite models.\nDescription"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_data_def_probes",
        "href": "api/ansys/scade/apitools/create/data_def/add_data_def_probes.html#ansysscadeapitoolscreatedata_defadd_data_def_probes",
        "title": "ansys.scade.apitools.create.data_def.add_data_def_probes",
        "section": "ansys.scade.apitools.create.data_def.add_data_def_probes",
        "text": "Add probes to a scope.\nansys.scade.apitools.create.data_def.add_data_def_probes"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_data_def_probes",
        "href": "api/ansys/scade/apitools/create/data_def/add_data_def_probes.html#ansys.scade.apitools.create.data_def.add_data_def_probes",
        "title": "ansys.scade.apitools.create.data_def.add_data_def_probes > ansys.scade.apitools.create.data_def.add_data_def_probes > add_data_def_probes",
        "section": "ansys.scade.apitools.create.data_def.add_data_def_probes > add_data_def_probes",
        "text": "ansys.scade.apitools.create.data_def.add_data_def_probes(data_def: scade.model.suite.DataDef, vars: List[Tuple[str, ansys.scade.apitools.create.type.TX]]) -> List[scade.model.suite.LocalVariable]\n\nAdd probes to a scope."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_data_def_probes",
        "href": "api/ansys/scade/apitools/create/data_def/add_data_def_probes.html#notes",
        "title": "ansys.scade.apitools.create.data_def.add_data_def_probes > Notes",
        "section": "Notes",
        "text": "This is an interface change with respect to the SCADE Creation Library.\nThe pairs “name”/”type tree” are now embedded in a list of tuples.\nNotes"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_data_def_probes",
        "href": "api/ansys/scade/apitools/create/data_def/add_data_def_probes.html#parameters",
        "title": "ansys.scade.apitools.create.data_def.add_data_def_probes > Parameters",
        "section": "Parameters",
        "text": "Input scope, which is an operator, state, or action.\nName/type expression trees.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_data_def_probes",
        "href": "api/ansys/scade/apitools/create/data_def/add_data_def_probes.html#returns",
        "title": "ansys.scade.apitools.create.data_def.add_data_def_probes > Returns",
        "section": "Returns",
        "text": "List of added probes.\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_mapi",
        "href": "api/ansys/scade/apitools/create/expression/create_mapi.html#ansysscadeapitoolscreateexpressioncreate_mapi",
        "title": "ansys.scade.apitools.create.expression.create_mapi",
        "section": "ansys.scade.apitools.create.expression.create_mapi",
        "text": "Return the expression tree for the higher-order construct for mapi creation.\nansys.scade.apitools.create.expression.create_mapi"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_mapi",
        "href": "api/ansys/scade/apitools/create/expression/create_mapi.html#ansys.scade.apitools.create.expression.create_mapi",
        "title": "ansys.scade.apitools.create.expression.create_mapi > ansys.scade.apitools.create.expression.create_mapi > create_mapi",
        "section": "ansys.scade.apitools.create.expression.create_mapi > create_mapi",
        "text": "ansys.scade.apitools.create.expression.create_mapi(size: EX) -> ET\n\nReturn the expression tree for the higher-order construct for mapi creation."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_mapi",
        "href": "api/ansys/scade/apitools/create/expression/create_mapi.html#parameters",
        "title": "ansys.scade.apitools.create.expression.create_mapi > Parameters",
        "section": "Parameters",
        "text": "Number of iterations.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_mapi",
        "href": "api/ansys/scade/apitools/create/expression/create_mapi.html#returns",
        "title": "ansys.scade.apitools.create.expression.create_mapi > Returns",
        "section": "Returns",
        "text": "ET\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_foldwi",
        "href": "api/ansys/scade/apitools/create/expression/create_foldwi.html#ansysscadeapitoolscreateexpressioncreate_foldwi",
        "title": "ansys.scade.apitools.create.expression.create_foldwi",
        "section": "ansys.scade.apitools.create.expression.create_foldwi",
        "text": "Return the expression tree for the higher-order construct for foldwi creation.\nansys.scade.apitools.create.expression.create_foldwi"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_foldwi",
        "href": "api/ansys/scade/apitools/create/expression/create_foldwi.html#ansys.scade.apitools.create.expression.create_foldwi",
        "title": "ansys.scade.apitools.create.expression.create_foldwi > ansys.scade.apitools.create.expression.create_foldwi > create_foldwi",
        "section": "ansys.scade.apitools.create.expression.create_foldwi > create_foldwi",
        "text": "ansys.scade.apitools.create.expression.create_foldwi(size: EX, condition: EX) -> ET\n\nReturn the expression tree for the higher-order construct for foldwi creation."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_foldwi",
        "href": "api/ansys/scade/apitools/create/expression/create_foldwi.html#parameters",
        "title": "ansys.scade.apitools.create.expression.create_foldwi > Parameters",
        "section": "Parameters",
        "text": "Number of iterations.\nInitial value of the iteration condition.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_foldwi",
        "href": "api/ansys/scade/apitools/create/expression/create_foldwi.html#returns",
        "title": "ansys.scade.apitools.create.expression.create_foldwi > Returns",
        "section": "Returns",
        "text": "ET\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/prop/pragma/get_pragma_tool_text",
        "href": "api/ansys/scade/apitools/prop/pragma/get_pragma_tool_text.html#ansysscadeapitoolsproppragmaget_pragma_tool_text",
        "title": "ansys.scade.apitools.prop.pragma.get_pragma_tool_text",
        "section": "ansys.scade.apitools.prop.pragma.get_pragma_tool_text",
        "text": "Get the text of the pragma for an object.\nReturn None when the pragma does not exist.\nRaise the TypeError exception when the pragma exists\nbut is not textual.\nSee the pragma_tool example.\nansys.scade.apitools.prop.pragma.get_pragma_tool_text\nNone\nTypeError"
    },
    {
        "objectID": "api/ansys/scade/apitools/prop/pragma/get_pragma_tool_text",
        "href": "api/ansys/scade/apitools/prop/pragma/get_pragma_tool_text.html#ansys.scade.apitools.prop.pragma.get_pragma_tool_text",
        "title": "ansys.scade.apitools.prop.pragma.get_pragma_tool_text > ansys.scade.apitools.prop.pragma.get_pragma_tool_text > get_pragma_tool_text",
        "section": "ansys.scade.apitools.prop.pragma.get_pragma_tool_text > get_pragma_tool_text",
        "text": "ansys.scade.apitools.prop.pragma.get_pragma_tool_text(object_: scade.model.suite.Object, id: str, key: str) -> str | None\n\nGet the text of the pragma for an object.\n\nReturn None when the pragma does not exist.\n\nRaise the TypeError exception when the pragma exists\nbut is not textual.\n\nSee the pragma_tool example."
    },
    {
        "objectID": "api/ansys/scade/apitools/prop/pragma/get_pragma_tool_text",
        "href": "api/ansys/scade/apitools/prop/pragma/get_pragma_tool_text.html#parameters",
        "title": "ansys.scade.apitools.prop.pragma.get_pragma_tool_text > Parameters",
        "section": "Parameters",
        "text": "Element to search for the pragma.\nID of the pragma.\nFirst token of the pragma.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/prop/pragma/get_pragma_tool_text",
        "href": "api/ansys/scade/apitools/prop/pragma/get_pragma_tool_text.html#returns",
        "title": "ansys.scade.apitools.prop.pragma.get_pragma_tool_text > Returns",
        "section": "Returns",
        "text": "Text of the found pragma or “”.\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/prop/pragma/remove_pragma_tool",
        "href": "api/ansys/scade/apitools/prop/pragma/remove_pragma_tool.html#ansysscadeapitoolsproppragmaremove_pragma_tool",
        "title": "ansys.scade.apitools.prop.pragma.remove_pragma_tool",
        "section": "ansys.scade.apitools.prop.pragma.remove_pragma_tool",
        "text": "Remove the pragma from an object.\nSee the  pragma_tool example.\nansys.scade.apitools.prop.pragma.remove_pragma_tool"
    },
    {
        "objectID": "api/ansys/scade/apitools/prop/pragma/remove_pragma_tool",
        "href": "api/ansys/scade/apitools/prop/pragma/remove_pragma_tool.html#ansys.scade.apitools.prop.pragma.remove_pragma_tool",
        "title": "ansys.scade.apitools.prop.pragma.remove_pragma_tool > ansys.scade.apitools.prop.pragma.remove_pragma_tool > remove_pragma_tool",
        "section": "ansys.scade.apitools.prop.pragma.remove_pragma_tool > remove_pragma_tool",
        "text": "ansys.scade.apitools.prop.pragma.remove_pragma_tool(object_: scade.model.suite.Object, id: str, key: str) -> bool\n\nRemove the pragma from an object.\n\nSee the  pragma_tool example."
    },
    {
        "objectID": "api/ansys/scade/apitools/prop/pragma/remove_pragma_tool",
        "href": "api/ansys/scade/apitools/prop/pragma/remove_pragma_tool.html#parameters",
        "title": "ansys.scade.apitools.prop.pragma.remove_pragma_tool > Parameters",
        "section": "Parameters",
        "text": "Element to search for the pragma.\nID of the pragma.\nFirst token of the pragma.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/prop/pragma/remove_pragma_tool",
        "href": "api/ansys/scade/apitools/prop/pragma/remove_pragma_tool.html#returns",
        "title": "ansys.scade.apitools.prop.pragma.remove_pragma_tool > Returns",
        "section": "Returns",
        "text": "True if the pragma is found, False otherwise.\nReturns\nTrue\nFalse"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/ExprSyntaxError",
        "href": "api/ansys/scade/apitools/create/expression/ExprSyntaxError.html#exprsyntaxerror",
        "title": "ExprSyntaxError",
        "section": "ExprSyntaxError",
        "text": "Bases: Exception\nProvides the generic exception for syntax errors in expression trees.\nProvide a customized message.\nExprSyntaxError\nExprSyntaxError\nException"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/ExprSyntaxError",
        "href": "api/ansys/scade/apitools/create/expression/ExprSyntaxError.html#ansys.scade.apitools.create.expression.ExprSyntaxError",
        "title": "ExprSyntaxError > ExprSyntaxError > ExprSyntaxError",
        "section": "ExprSyntaxError > ExprSyntaxError",
        "text": "exception ansys.scade.apitools.create.expression.ExprSyntaxError(context, item)\n\nBases: Exception\n\nProvides the generic exception for syntax errors in expression trees.\n\nProvide a customized message."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/ExprSyntaxError",
        "href": "api/ansys/scade/apitools/create/expression/ExprSyntaxError.html#import-detail",
        "title": "ExprSyntaxError > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/create_if_tree",
        "href": "api/ansys/scade/apitools/create/data_def/create_if_tree.html#ansysscadeapitoolscreatedata_defcreate_if_tree",
        "title": "ansys.scade.apitools.create.data_def.create_if_tree",
        "section": "ansys.scade.apitools.create.data_def.create_if_tree",
        "text": "Create a decision in the intermediate structure if it is a tree structure.\nThe graphical properties are expressed 1/100th of mm.\nThey are considered if and only if the owning if block\nhas a graphical representation.\nHint for the graphical properties: The size of a node is 80x80. Consider\nthis offset to have consistent values between if nodes and actions.\nansys.scade.apitools.create.data_def.create_if_tree"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/create_if_tree",
        "href": "api/ansys/scade/apitools/create/data_def/create_if_tree.html#ansys.scade.apitools.create.data_def.create_if_tree",
        "title": "ansys.scade.apitools.create.data_def.create_if_tree > ansys.scade.apitools.create.data_def.create_if_tree > create_if_tree",
        "section": "ansys.scade.apitools.create.data_def.create_if_tree > create_if_tree",
        "text": "ansys.scade.apitools.create.data_def.create_if_tree(expression: ansys.scade.apitools.create.expression.EX, then: IT, else_: IT, position: Tuple[float, float] = (0, 0), label_width: int = 0) -> IT\n\nCreate a decision in the intermediate structure if it is a tree structure.\n\nThe graphical properties are expressed 1/100th of mm.\n\nThey are considered if and only if the owning if block\nhas a graphical representation.\n\nHint for the graphical properties: The size of a node is 80x80. Consider\nthis offset to have consistent values between if nodes and actions."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/create_if_tree",
        "href": "api/ansys/scade/apitools/create/data_def/create_if_tree.html#parameters",
        "title": "ansys.scade.apitools.create.data_def.create_if_tree > Parameters",
        "section": "Parameters",
        "text": "Extended expression tree defining the condition of the decision.\nSub-decision tree to consider when the condition is True.\nSub-decision tree to consider when the condition is False.\nPosition of the decision.\nSize of the label.\nParameters\nTrue\nFalse"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/create_if_tree",
        "href": "api/ansys/scade/apitools/create/data_def/create_if_tree.html#returns",
        "title": "ansys.scade.apitools.create.data_def.create_if_tree > Returns",
        "section": "Returns",
        "text": "IT\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/create_transition_state",
        "href": "api/ansys/scade/apitools/create/data_def/create_transition_state.html#ansysscadeapitoolscreatedata_defcreate_transition_state",
        "title": "ansys.scade.apitools.create.data_def.create_transition_state",
        "section": "ansys.scade.apitools.create.data_def.create_transition_state",
        "text": "Create an intermediate transition structure that targets a state.\nThe graphical properties are expressed 1/100th of mm.\nThey are considered if and only if the owning state machine\nhas a graphical representation.\nansys.scade.apitools.create.data_def.create_transition_state"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/create_transition_state",
        "href": "api/ansys/scade/apitools/create/data_def/create_transition_state.html#ansys.scade.apitools.create.data_def.create_transition_state",
        "title": "ansys.scade.apitools.create.data_def.create_transition_state > ansys.scade.apitools.create.data_def.create_transition_state > create_transition_state",
        "section": "ansys.scade.apitools.create.data_def.create_transition_state > create_transition_state",
        "text": "ansys.scade.apitools.create.data_def.create_transition_state(trigger: ansys.scade.apitools.create.expression.EX | None, state: scade.model.suite.State, reset: bool, priority: int, points: List[Tuple[float, float]] | None = None, label_position: Tuple[float, float] = (0, 0), label_size: Tuple[float, float] = (0, 0), slash_position: Tuple[float, float] = (0, 0), polyline: bool = True) -> TR\n\nCreate an intermediate transition structure that targets a state.\n\nThe graphical properties are expressed 1/100th of mm.\n\nThey are considered if and only if the owning state machine\nhas a graphical representation."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/create_transition_state",
        "href": "api/ansys/scade/apitools/create/data_def/create_transition_state.html#parameters",
        "title": "ansys.scade.apitools.create.data_def.create_transition_state > Parameters",
        "section": "Parameters",
        "text": "Extended expression tree defining the trigger of the transition.\nTarget state of the transition.\nWhether the transition resets the targtet state.\nPriority of the transition.\nPoints of the transition.\nPosition of the label.\nSize of the label.\nPosition of the separator between the trigger and the action\nof the transition.\nWhether the representation is a list of segments. If False,\nthe representation is a Bezier curve.\nParameters\nFalse"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/create_transition_state",
        "href": "api/ansys/scade/apitools/create/data_def/create_transition_state.html#returns",
        "title": "ansys.scade.apitools.create.data_def.create_transition_state > Returns",
        "section": "Returns",
        "text": "TR\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_pre",
        "href": "api/ansys/scade/apitools/create/expression/create_pre.html#ansysscadeapitoolscreateexpressioncreate_pre",
        "title": "ansys.scade.apitools.create.expression.create_pre",
        "section": "ansys.scade.apitools.create.expression.create_pre",
        "text": "Return the expression tree for the pre operator.\nansys.scade.apitools.create.expression.create_pre"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_pre",
        "href": "api/ansys/scade/apitools/create/expression/create_pre.html#ansys.scade.apitools.create.expression.create_pre",
        "title": "ansys.scade.apitools.create.expression.create_pre > ansys.scade.apitools.create.expression.create_pre > create_pre",
        "section": "ansys.scade.apitools.create.expression.create_pre > create_pre",
        "text": "ansys.scade.apitools.create.expression.create_pre(*args: EX) -> ET\n\nReturn the expression tree for the pre operator."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_pre",
        "href": "api/ansys/scade/apitools/create/expression/create_pre.html#parameters",
        "title": "ansys.scade.apitools.create.expression.create_pre > Parameters",
        "section": "Parameters",
        "text": "Input flows.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_pre",
        "href": "api/ansys/scade/apitools/create/expression/create_pre.html#returns",
        "title": "ansys.scade.apitools.create.expression.create_pre > Returns",
        "section": "Returns",
        "text": "ET\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/TextExpression",
        "href": "api/ansys/scade/apitools/expr/access/TextExpression.html#textexpression",
        "title": "TextExpression",
        "section": "TextExpression",
        "text": "Bases: Expression\nProvides an expression with a syntax error.\nThe format is any text which can't compile.\nTextExpression\nTextExpression\nExpression\nany text which can't compile"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/TextExpression",
        "href": "api/ansys/scade/apitools/expr/access/TextExpression.html#ansys.scade.apitools.expr.access.TextExpression",
        "title": "TextExpression > TextExpression > TextExpression",
        "section": "TextExpression > TextExpression",
        "text": "class ansys.scade.apitools.expr.access.TextExpression(expression: scade.model.suite.ExprText)\n\nBases: Expression\n\nProvides an expression with a syntax error.\n\nThe format is any text which can't compile."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/TextExpression",
        "href": "api/ansys/scade/apitools/expr/access/TextExpression.html#parameters",
        "title": "TextExpression > Parameters",
        "section": "Parameters",
        "text": "Erroneous expression to wrap.\nInitialize the instance from the Scade expression.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/TextExpression",
        "href": "api/ansys/scade/apitools/expr/access/TextExpression.html#overview",
        "title": "TextExpression > Overview",
        "section": "Overview",
        "text": "text\nErroneous text.\nOverview\ntext"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/TextExpression",
        "href": "api/ansys/scade/apitools/expr/access/TextExpression.html#import-detail",
        "title": "TextExpression > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/TextExpression",
        "href": "api/ansys/scade/apitools/expr/access/TextExpression.html#property-detail",
        "title": "TextExpression > Property detail",
        "section": "Property detail",
        "text": "Erroneous text.\nProperty detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/TextExpression",
        "href": "api/ansys/scade/apitools/expr/access/TextExpression.html#TextExpression.text",
        "title": "TextExpression > Property detail > text",
        "section": "Property detail > text",
        "text": "property TextExpression.text: str\n\nErroneous text."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_data_struct",
        "href": "api/ansys/scade/apitools/create/expression/create_data_struct.html#ansysscadeapitoolscreateexpressioncreate_data_struct",
        "title": "ansys.scade.apitools.create.expression.create_data_struct",
        "section": "ansys.scade.apitools.create.expression.create_data_struct",
        "text": "Return the expression tree for the data strictire operator.\nansys.scade.apitools.create.expression.create_data_struct"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_data_struct",
        "href": "api/ansys/scade/apitools/create/expression/create_data_struct.html#ansys.scade.apitools.create.expression.create_data_struct",
        "title": "ansys.scade.apitools.create.expression.create_data_struct > ansys.scade.apitools.create.expression.create_data_struct > create_data_struct",
        "section": "ansys.scade.apitools.create.expression.create_data_struct > create_data_struct",
        "text": "ansys.scade.apitools.create.expression.create_data_struct(*args: Tuple[str, EX]) -> ET\n\nReturn the expression tree for the data strictire operator."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_data_struct",
        "href": "api/ansys/scade/apitools/create/expression/create_data_struct.html#notes",
        "title": "ansys.scade.apitools.create.expression.create_data_struct > Notes",
        "section": "Notes",
        "text": "This is an interface change with respect to the SCADE Creation Library.\nThe pairs “name”/”value” are now embedded in a list of tuples.\nNotes"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_data_struct",
        "href": "api/ansys/scade/apitools/create/expression/create_data_struct.html#parameters",
        "title": "ansys.scade.apitools.create.expression.create_data_struct > Parameters",
        "section": "Parameters",
        "text": "Label/values expression trees.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_data_struct",
        "href": "api/ansys/scade/apitools/create/expression/create_data_struct.html#returns",
        "title": "ansys.scade.apitools.create.expression.create_data_struct > Returns",
        "section": "Returns",
        "text": "ET\nReturns"
    },
    {
        "objectID": "examples/create_if_block",
        "href": "examples/create_if_block.html#if_block",
        "title": "Examples > if_block",
        "section": "if_block",
        "text": "if_block"
    },
    {
        "objectID": "examples/create_if_block",
        "href": "examples/create_if_block.html#overview",
        "title": "Examples > if_block > Overview",
        "section": "Overview",
        "text": "This small example creates the following if block and demonstrates the use of the if trees.\nOverview"
    },
    {
        "objectID": "examples/create_if_block",
        "href": "examples/create_if_block.html#source",
        "title": "Examples > if_block > Source",
        "section": "Source",
        "text": "Source"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/scade/add_simulation_file_to_project",
        "href": "api/ansys/scade/apitools/create/scade/add_simulation_file_to_project.html#ansysscadeapitoolscreatescadeadd_simulation_file_to_project",
        "title": "ansys.scade.apitools.create.scade.add_simulation_file_to_project",
        "section": "ansys.scade.apitools.create.scade.add_simulation_file_to_project",
        "text": "Add a file to the project and tag it appropriately for the SCADE simulation.\nThe file is added if and only if it is not already present.\nIf it is present, the parameters folder and default are ignored.\nThe file is added to:\nThe specified folder when not None.\nOr one of the default folders  “External Code” or “External Type Definitions”,\ndepending on the kind of the file.\nOtherwise to the project as a root element.\nansys.scade.apitools.create.scade.add_simulation_file_to_project"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/scade/add_simulation_file_to_project",
        "href": "api/ansys/scade/apitools/create/scade/add_simulation_file_to_project.html#ansys.scade.apitools.create.scade.add_simulation_file_to_project",
        "title": "ansys.scade.apitools.create.scade.add_simulation_file_to_project > ansys.scade.apitools.create.scade.add_simulation_file_to_project > add_simulation_file_to_project",
        "section": "ansys.scade.apitools.create.scade.add_simulation_file_to_project > add_simulation_file_to_project",
        "text": "ansys.scade.apitools.create.scade.add_simulation_file_to_project(project: scade.model.project.stdproject.Project, path: str, kind: Sfk, folder: scade.model.project.stdproject.Folder | None = None, default=True) -> scade.model.project.stdproject.FileRef\n\nAdd a file to the project and tag it appropriately for the SCADE simulation.\n\nThe file is added if and only if it is not already present.\nIf it is present, the parameters folder and default are ignored.\n\nThe file is added to:\n\nThe specified folder when not None.\n\nOr one of the default folders  “External Code” or “External Type Definitions”,\ndepending on the kind of the file.\n\nOtherwise to the project as a root element."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/scade/add_simulation_file_to_project",
        "href": "api/ansys/scade/apitools/create/scade/add_simulation_file_to_project.html#parameters",
        "title": "ansys.scade.apitools.create.scade.add_simulation_file_to_project > Parameters",
        "section": "Parameters",
        "text": "Project to modify.\nPath of the file to be added to the project.\nKind of the added file.\nParent folder of the file to add to the project.\nWhen True, the file is added to the default folder\nfor SCADE Simulation files, according to kind.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/scade/add_simulation_file_to_project",
        "href": "api/ansys/scade/apitools/create/scade/add_simulation_file_to_project.html#returns",
        "title": "ansys.scade.apitools.create.scade.add_simulation_file_to_project > Returns",
        "section": "Returns",
        "text": "std.FileRef\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/prop/pragma/find_pragma",
        "href": "api/ansys/scade/apitools/prop/pragma/find_pragma.html#ansysscadeapitoolsproppragmafind_pragma",
        "title": "ansys.scade.apitools.prop.pragma.find_pragma",
        "section": "ansys.scade.apitools.prop.pragma.find_pragma",
        "text": "Get the pragma ID of an object.\nSee the pragma example.\nansys.scade.apitools.prop.pragma.find_pragma"
    },
    {
        "objectID": "api/ansys/scade/apitools/prop/pragma/find_pragma",
        "href": "api/ansys/scade/apitools/prop/pragma/find_pragma.html#ansys.scade.apitools.prop.pragma.find_pragma",
        "title": "ansys.scade.apitools.prop.pragma.find_pragma > ansys.scade.apitools.prop.pragma.find_pragma > find_pragma",
        "section": "ansys.scade.apitools.prop.pragma.find_pragma > find_pragma",
        "text": "ansys.scade.apitools.prop.pragma.find_pragma(object_: scade.model.suite.Object, id: str) -> scade.model.suite.Pragma\n\nGet the pragma ID of an object.\n\nSee the pragma example."
    },
    {
        "objectID": "api/ansys/scade/apitools/prop/pragma/find_pragma",
        "href": "api/ansys/scade/apitools/prop/pragma/find_pragma.html#parameters",
        "title": "ansys.scade.apitools.prop.pragma.find_pragma > Parameters",
        "section": "Parameters",
        "text": "Element to search for the pragma.\nID of the pragma.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/prop/pragma/find_pragma",
        "href": "api/ansys/scade/apitools/prop/pragma/find_pragma.html#returns",
        "title": "ansys.scade.apitools.prop.pragma.find_pragma > Returns",
        "section": "Returns",
        "text": "ID of the pragma or None if not found.\nReturns\nNone"
    },
    {
        "objectID": "api/ansys/scade/apitools/auto_scade_env/index",
        "href": "api/ansys/scade/apitools/auto_scade_env/index.html#the-auto_scade_envpy-module",
        "title": "The auto_scade_env.py module",
        "section": "The auto_scade_env.py module",
        "text": "The auto_scade_env.py module\nauto_scade_env.py"
    },
    {
        "objectID": "api/ansys/scade/apitools/auto_scade_env/index",
        "href": "api/ansys/scade/apitools/auto_scade_env/index.html#summary",
        "title": "The auto_scade_env.py module > Summary",
        "section": "Summary",
        "text": "declare_project\nSummary\ndeclare_project"
    },
    {
        "objectID": "api/ansys/scade/apitools/auto_scade_env/index",
        "href": "api/ansys/scade/apitools/auto_scade_env/index.html#description",
        "title": "The auto_scade_env.py module > Description",
        "section": "Description",
        "text": "Provides scade_env.load_project, renamed to declare_project.\nSearch for a SCADE installation compatible with the Python version\nand add it to sys.path if not already present.\nPresent means scade_env.pyd is accessible from sys.path.\nDescription\nscade_env.load_project\ndeclare_project\nsys.path\nscade_env.pyd\nsys.path"
    },
    {
        "objectID": "api/ansys/scade/apitools/auto_scade_env/index",
        "href": "api/ansys/scade/apitools/auto_scade_env/index.html#module-detail",
        "title": "The auto_scade_env.py module > Module detail",
        "section": "Module detail",
        "text": "Module detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/auto_scade_env/index",
        "href": "api/ansys/scade/apitools/auto_scade_env/index.html#auto_scade_env.declare_project",
        "title": "The auto_scade_env.py module > Module detail > declare_project",
        "section": "Module detail > declare_project",
        "text": "auto_scade_env.declare_project = None\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/prop/pragma/set_pragma_json",
        "href": "api/ansys/scade/apitools/prop/pragma/set_pragma_json.html#ansysscadeapitoolsproppragmaset_pragma_json",
        "title": "ansys.scade.apitools.prop.pragma.set_pragma_json",
        "section": "ansys.scade.apitools.prop.pragma.set_pragma_json",
        "text": "Serialize a Python object to a JSON document in a textual pragma.\nAn existing pragma with the same ID is updated with the text\nor deleted if the object is None or empty.\nSee the pragma_json example.\nansys.scade.apitools.prop.pragma.set_pragma_json\nNone"
    },
    {
        "objectID": "api/ansys/scade/apitools/prop/pragma/set_pragma_json",
        "href": "api/ansys/scade/apitools/prop/pragma/set_pragma_json.html#ansys.scade.apitools.prop.pragma.set_pragma_json",
        "title": "ansys.scade.apitools.prop.pragma.set_pragma_json > ansys.scade.apitools.prop.pragma.set_pragma_json > set_pragma_json",
        "section": "ansys.scade.apitools.prop.pragma.set_pragma_json > set_pragma_json",
        "text": "ansys.scade.apitools.prop.pragma.set_pragma_json(object_: scade.model.suite.Object, id: str, data: object) -> bool\n\nSerialize a Python object to a JSON document in a textual pragma.\n\nAn existing pragma with the same ID is updated with the text\nor deleted if the object is None or empty.\n\nSee the pragma_json example."
    },
    {
        "objectID": "api/ansys/scade/apitools/prop/pragma/set_pragma_json",
        "href": "api/ansys/scade/apitools/prop/pragma/set_pragma_json.html#parameters",
        "title": "ansys.scade.apitools.prop.pragma.set_pragma_json > Parameters",
        "section": "Parameters",
        "text": "Element to attach the pragma to.\nID of the pragma.\nPython object to serialize to a JSON document.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/prop/pragma/set_pragma_json",
        "href": "api/ansys/scade/apitools/prop/pragma/set_pragma_json.html#returns",
        "title": "ansys.scade.apitools.prop.pragma.set_pragma_json > Returns",
        "section": "Returns",
        "text": "True if the object is modified, False otherwise.\nReturns\nTrue\nFalse"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_slice",
        "href": "api/ansys/scade/apitools/create/expression/create_slice.html#ansysscadeapitoolscreateexpressioncreate_slice",
        "title": "ansys.scade.apitools.create.expression.create_slice",
        "section": "ansys.scade.apitools.create.expression.create_slice",
        "text": "Return the expression tree for the slice operator.\nansys.scade.apitools.create.expression.create_slice"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_slice",
        "href": "api/ansys/scade/apitools/create/expression/create_slice.html#ansys.scade.apitools.create.expression.create_slice",
        "title": "ansys.scade.apitools.create.expression.create_slice > ansys.scade.apitools.create.expression.create_slice > create_slice",
        "section": "ansys.scade.apitools.create.expression.create_slice > create_slice",
        "text": "ansys.scade.apitools.create.expression.create_slice(array: EX, start: EX, end: EX) -> ET\n\nReturn the expression tree for the slice operator."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_slice",
        "href": "api/ansys/scade/apitools/create/expression/create_slice.html#parameters",
        "title": "ansys.scade.apitools.create.expression.create_slice > Parameters",
        "section": "Parameters",
        "text": "Input array.\nStart index of the slice.\nEnd index of the slice.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_slice",
        "href": "api/ansys/scade/apitools/create/expression/create_slice.html#returns",
        "title": "ansys.scade.apitools.create.expression.create_slice > Returns",
        "section": "Returns",
        "text": "ET\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/create_enumeration",
        "href": "api/ansys/scade/apitools/create/declaration/create_enumeration.html#ansysscadeapitoolscreatedeclarationcreate_enumeration",
        "title": "ansys.scade.apitools.create.declaration.create_enumeration",
        "section": "ansys.scade.apitools.create.declaration.create_enumeration",
        "text": "Create a named type defined by an enumeration.\nThe type has a name and a list of values.\nansys.scade.apitools.create.declaration.create_enumeration"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/create_enumeration",
        "href": "api/ansys/scade/apitools/create/declaration/create_enumeration.html#ansys.scade.apitools.create.declaration.create_enumeration",
        "title": "ansys.scade.apitools.create.declaration.create_enumeration > ansys.scade.apitools.create.declaration.create_enumeration > create_enumeration",
        "section": "ansys.scade.apitools.create.declaration.create_enumeration > create_enumeration",
        "text": "ansys.scade.apitools.create.declaration.create_enumeration(owner: scade.model.suite.Package, name: str, values: List[str], path: pathlib.Path | None = None, visibility: VK = VK.PUBLIC) -> scade.model.suite.NamedType\n\nCreate a named type defined by an enumeration.\n\nThe type has a name and a list of values."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/create_enumeration",
        "href": "api/ansys/scade/apitools/create/declaration/create_enumeration.html#parameters",
        "title": "ansys.scade.apitools.create.declaration.create_enumeration > Parameters",
        "section": "Parameters",
        "text": "Owner of the type, which is either the model itself or a package.\nName of the type.\nList of the enumeration values.\nPath of the file for storing the type. This parameter is ignored if\nthe owner is a package. When the path is None and owner is the model,\nthe type is stored in the model’s default file.\nAccessibility of the type.\nParameters\nNone"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/create_enumeration",
        "href": "api/ansys/scade/apitools/create/declaration/create_enumeration.html#returns",
        "title": "ansys.scade.apitools.create.declaration.create_enumeration > Returns",
        "section": "Returns",
        "text": "suite.NamedType\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/info/index",
        "href": "api/ansys/scade/apitools/info/index.html#the-info-package",
        "title": "The info package",
        "section": "The info package",
        "text": "The info package\ninfo"
    },
    {
        "objectID": "api/ansys/scade/apitools/info/index",
        "href": "api/ansys/scade/apitools/info/index.html#summary",
        "title": "The info package > Summary",
        "section": "Summary",
        "text": "install\nProvides access to SCADE installation information.\nruntime\nProvides access to SCADE runtime information.\nSummary\ninstall\nruntime"
    },
    {
        "objectID": "api/ansys/scade/apitools/info/index",
        "href": "api/ansys/scade/apitools/info/index.html#description",
        "title": "The info package > Description",
        "section": "Description",
        "text": "Provides information on the current version of SCADE.\nDescription"
    },
    {
        "objectID": "api/ansys/scade/apitools/query/type/is_scalar",
        "href": "api/ansys/scade/apitools/query/type/is_scalar.html#ansysscadeapitoolsquerytypeis_scalar",
        "title": "ansys.scade.apitools.query.type.is_scalar",
        "section": "ansys.scade.apitools.query.type.is_scalar",
        "text": "Determine if the input type is scalar.\nSee the is_scalar example.\nansys.scade.apitools.query.type.is_scalar"
    },
    {
        "objectID": "api/ansys/scade/apitools/query/type/is_scalar",
        "href": "api/ansys/scade/apitools/query/type/is_scalar.html#ansys.scade.apitools.query.type.is_scalar",
        "title": "ansys.scade.apitools.query.type.is_scalar > ansys.scade.apitools.query.type.is_scalar > is_scalar",
        "section": "ansys.scade.apitools.query.type.is_scalar > is_scalar",
        "text": "ansys.scade.apitools.query.type.is_scalar(type_: scade.model.suite.Type, target: str = 'C') -> bool\n\nDetermine if the input type is scalar.\n\nSee the is_scalar example."
    },
    {
        "objectID": "api/ansys/scade/apitools/query/type/is_scalar",
        "href": "api/ansys/scade/apitools/query/type/is_scalar.html#parameters",
        "title": "ansys.scade.apitools.query.type.is_scalar > Parameters",
        "section": "Parameters",
        "text": "Input type.\nTarget language to consider if the input type is imported.\nOptions are 'C' and 'Ada'.\nParameters\n'C'\n'Ada'"
    },
    {
        "objectID": "api/ansys/scade/apitools/query/type/is_scalar",
        "href": "api/ansys/scade/apitools/query/type/is_scalar.html#returns",
        "title": "ansys.scade.apitools.query.type.is_scalar > Returns",
        "section": "Returns",
        "text": "True when the input type is scalar, False otherwise.\nReturns\nTrue\nFalse"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_concat",
        "href": "api/ansys/scade/apitools/create/expression/create_concat.html#ansysscadeapitoolscreateexpressioncreate_concat",
        "title": "ansys.scade.apitools.create.expression.create_concat",
        "section": "ansys.scade.apitools.create.expression.create_concat",
        "text": "Return the expression tree for the concat operator.\nansys.scade.apitools.create.expression.create_concat"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_concat",
        "href": "api/ansys/scade/apitools/create/expression/create_concat.html#ansys.scade.apitools.create.expression.create_concat",
        "title": "ansys.scade.apitools.create.expression.create_concat > ansys.scade.apitools.create.expression.create_concat > create_concat",
        "section": "ansys.scade.apitools.create.expression.create_concat > create_concat",
        "text": "ansys.scade.apitools.create.expression.create_concat(*args: EX) -> ET\n\nReturn the expression tree for the concat operator."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_concat",
        "href": "api/ansys/scade/apitools/create/expression/create_concat.html#parameters",
        "title": "ansys.scade.apitools.create.expression.create_concat > Parameters",
        "section": "Parameters",
        "text": "Input arrays to concatenate.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_concat",
        "href": "api/ansys/scade/apitools/create/expression/create_concat.html#returns",
        "title": "ansys.scade.apitools.create.expression.create_concat > Returns",
        "section": "Returns",
        "text": "ET\nReturns"
    },
    {
        "objectID": "examples/create",
        "href": "examples/create.html#create",
        "title": "Examples > create",
        "section": "create",
        "text": "These end-to-end examples show how to use create functions.\nThey provide hints about the setup of a test environment and correspond to frequent requests.\nThese examples demonstrate the usage of the intermediate structures introduced to create\ncomplex types and expressions, as well as the creation of control blocks.\nTo get a better understanding of the code, you might want to run the examples step by step with\na debugger.\ncreate"
    },
    {
        "objectID": "examples/create",
        "href": "examples/create.html#test-environment",
        "title": "Examples > create > Test environment",
        "section": "Test environment",
        "text": "The examples modify a project. Each example comes with a wrapper script that runs the example\non a copy of the input model.\nThe wrapper scripts, named debug_<name of the script>.py, are  designed to be used in\na Python IDE, with the following pattern:\nTest environment\ndebug_<name of the script>.py"
    },
    {
        "objectID": "examples/create",
        "href": "examples/create.html#examples",
        "title": "Examples > create > Examples",
        "section": "Examples",
        "text": "Examples"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/DataArrayOp",
        "href": "api/ansys/scade/apitools/expr/access/DataArrayOp.html#dataarrayop",
        "title": "DataArrayOp",
        "section": "DataArrayOp",
        "text": "Bases: CallExpression\nProvides for construction of an array.\nThe format is [ <expression>, ..., <expression> ].\nSee the data_array_op example.\nDataArrayOp\nDataArrayOp\nCallExpression\n[ <expression>, ..., <expression> ]"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/DataArrayOp",
        "href": "api/ansys/scade/apitools/expr/access/DataArrayOp.html#ansys.scade.apitools.expr.access.DataArrayOp",
        "title": "DataArrayOp > DataArrayOp > DataArrayOp",
        "section": "DataArrayOp > DataArrayOp",
        "text": "class ansys.scade.apitools.expr.access.DataArrayOp(expression: scade.model.suite.ExprCall)\n\nBases: CallExpression\n\nProvides for construction of an array.\n\nThe format is [ <expression>, ..., <expression> ].\n\nSee the data_array_op example."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/DataArrayOp",
        "href": "api/ansys/scade/apitools/expr/access/DataArrayOp.html#parameters",
        "title": "DataArrayOp > Parameters",
        "section": "Parameters",
        "text": "Call expression to wrap.\nInitialize the instance from the Scade expression.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/DataArrayOp",
        "href": "api/ansys/scade/apitools/expr/access/DataArrayOp.html#overview",
        "title": "DataArrayOp > Overview",
        "section": "Overview",
        "text": "data\nValues to build the array.\nOverview\ndata"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/DataArrayOp",
        "href": "api/ansys/scade/apitools/expr/access/DataArrayOp.html#import-detail",
        "title": "DataArrayOp > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/DataArrayOp",
        "href": "api/ansys/scade/apitools/expr/access/DataArrayOp.html#property-detail",
        "title": "DataArrayOp > Property detail",
        "section": "Property detail",
        "text": "Values to build the array.\nProperty detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/DataArrayOp",
        "href": "api/ansys/scade/apitools/expr/access/DataArrayOp.html#DataArrayOp.data",
        "title": "DataArrayOp > Property detail > data",
        "section": "Property detail > data",
        "text": "property DataArrayOp.data: list[Expression]\n\nValues to build the array."
    },
    {
        "objectID": "api/ansys/scade/apitools/query/type/get_type_name",
        "href": "api/ansys/scade/apitools/query/type/get_type_name.html#ansysscadeapitoolsquerytypeget_type_name",
        "title": "ansys.scade.apitools.query.type.get_type_name",
        "section": "ansys.scade.apitools.query.type.get_type_name",
        "text": "Get the name of a type or a string representation.\nSee the get_type_name example.\nansys.scade.apitools.query.type.get_type_name"
    },
    {
        "objectID": "api/ansys/scade/apitools/query/type/get_type_name",
        "href": "api/ansys/scade/apitools/query/type/get_type_name.html#ansys.scade.apitools.query.type.get_type_name",
        "title": "ansys.scade.apitools.query.type.get_type_name > ansys.scade.apitools.query.type.get_type_name > get_type_name",
        "section": "ansys.scade.apitools.query.type.get_type_name > get_type_name",
        "text": "ansys.scade.apitools.query.type.get_type_name(type_: scade.model.suite.Type) -> str\n\nGet the name of a type or a string representation.\n\nSee the get_type_name example."
    },
    {
        "objectID": "api/ansys/scade/apitools/query/type/get_type_name",
        "href": "api/ansys/scade/apitools/query/type/get_type_name.html#parameters",
        "title": "ansys.scade.apitools.query.type.get_type_name > Parameters",
        "section": "Parameters",
        "text": "Input type.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/query/type/get_type_name",
        "href": "api/ansys/scade/apitools/query/type/get_type_name.html#returns",
        "title": "ansys.scade.apitools.query.type.get_type_name > Returns",
        "section": "Returns",
        "text": "Name of a type or a string representation.\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/project/save_project",
        "href": "api/ansys/scade/apitools/create/project/save_project.html#ansysscadeapitoolscreateprojectsave_project",
        "title": "ansys.scade.apitools.create.project.save_project",
        "section": "ansys.scade.apitools.create.project.save_project",
        "text": "Save the project.\nThe path of the project is specified in project.pathname.\nansys.scade.apitools.create.project.save_project"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/project/save_project",
        "href": "api/ansys/scade/apitools/create/project/save_project.html#ansys.scade.apitools.create.project.save_project",
        "title": "ansys.scade.apitools.create.project.save_project > ansys.scade.apitools.create.project.save_project > save_project",
        "section": "ansys.scade.apitools.create.project.save_project > save_project",
        "text": "ansys.scade.apitools.create.project.save_project(project: scade.model.project.stdproject.Project)\n\nSave the project.\n\nThe path of the project is specified in project.pathname."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/project/save_project",
        "href": "api/ansys/scade/apitools/create/project/save_project.html#parameters",
        "title": "ansys.scade.apitools.create.project.save_project > Parameters",
        "section": "Parameters",
        "text": "Project to save.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/prop/pragma/find_pragma_tool",
        "href": "api/ansys/scade/apitools/prop/pragma/find_pragma_tool.html#ansysscadeapitoolsproppragmafind_pragma_tool",
        "title": "ansys.scade.apitools.prop.pragma.find_pragma_tool",
        "section": "ansys.scade.apitools.prop.pragma.find_pragma_tool",
        "text": "Get the pragma for an object.\nSee the pragma_tool example.\nansys.scade.apitools.prop.pragma.find_pragma_tool"
    },
    {
        "objectID": "api/ansys/scade/apitools/prop/pragma/find_pragma_tool",
        "href": "api/ansys/scade/apitools/prop/pragma/find_pragma_tool.html#ansys.scade.apitools.prop.pragma.find_pragma_tool",
        "title": "ansys.scade.apitools.prop.pragma.find_pragma_tool > ansys.scade.apitools.prop.pragma.find_pragma_tool > find_pragma_tool",
        "section": "ansys.scade.apitools.prop.pragma.find_pragma_tool > find_pragma_tool",
        "text": "ansys.scade.apitools.prop.pragma.find_pragma_tool(object_: scade.model.suite.Object, id: str, key: str) -> scade.model.suite.TextPragma | None\n\nGet the pragma for an object.\n\nSee the pragma_tool example."
    },
    {
        "objectID": "api/ansys/scade/apitools/prop/pragma/find_pragma_tool",
        "href": "api/ansys/scade/apitools/prop/pragma/find_pragma_tool.html#parameters",
        "title": "ansys.scade.apitools.prop.pragma.find_pragma_tool > Parameters",
        "section": "Parameters",
        "text": "Element to search for the pragma.\nID of the pragma.\nFirst token of the pragma.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/prop/pragma/find_pragma_tool",
        "href": "api/ansys/scade/apitools/prop/pragma/find_pragma_tool.html#returns",
        "title": "ansys.scade.apitools.prop.pragma.find_pragma_tool > Returns",
        "section": "Returns",
        "text": "Found pragma or None if not found.\nReturns\nNone"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/create_imported_constant",
        "href": "api/ansys/scade/apitools/create/declaration/create_imported_constant.html#ansysscadeapitoolscreatedeclarationcreate_imported_constant",
        "title": "ansys.scade.apitools.create.declaration.create_imported_constant",
        "section": "ansys.scade.apitools.create.declaration.create_imported_constant",
        "text": "Create an imported constant.\nThe constant has a name and a type.\nansys.scade.apitools.create.declaration.create_imported_constant"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/create_imported_constant",
        "href": "api/ansys/scade/apitools/create/declaration/create_imported_constant.html#ansys.scade.apitools.create.declaration.create_imported_constant",
        "title": "ansys.scade.apitools.create.declaration.create_imported_constant > ansys.scade.apitools.create.declaration.create_imported_constant > create_imported_constant",
        "section": "ansys.scade.apitools.create.declaration.create_imported_constant > create_imported_constant",
        "text": "ansys.scade.apitools.create.declaration.create_imported_constant(owner: scade.model.suite.Package, name: str, type_: ansys.scade.apitools.create.type.TX, path: pathlib.Path | None = None, visibility: VK = VK.PUBLIC)\n\nCreate an imported constant.\n\nThe constant has a name and a type."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/create_imported_constant",
        "href": "api/ansys/scade/apitools/create/declaration/create_imported_constant.html#parameters",
        "title": "ansys.scade.apitools.create.declaration.create_imported_constant > Parameters",
        "section": "Parameters",
        "text": "Owner of the type, which is either the model itself or a package.\nName of the constant.\nDefinition of the type expressed as a type tree.\nPath of the file for storing the constant. This parameter is ignored if\nthe owner is a package. When the path is None and owner is the model,\nthe constant is stored in the model’s default file.\nAccessibility of the constant.\nParameters\nNone"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/create_imported_constant",
        "href": "api/ansys/scade/apitools/create/declaration/create_imported_constant.html#returns",
        "title": "ansys.scade.apitools.create.declaration.create_imported_constant > Returns",
        "section": "Returns",
        "text": "suite.NamedType\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/add_operator_outputs",
        "href": "api/ansys/scade/apitools/create/declaration/add_operator_outputs.html#ansysscadeapitoolscreatedeclarationadd_operator_outputs",
        "title": "ansys.scade.apitools.create.declaration.add_operator_outputs",
        "section": "ansys.scade.apitools.create.declaration.add_operator_outputs",
        "text": "Add outputs to an operator.\nansys.scade.apitools.create.declaration.add_operator_outputs"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/add_operator_outputs",
        "href": "api/ansys/scade/apitools/create/declaration/add_operator_outputs.html#ansys.scade.apitools.create.declaration.add_operator_outputs",
        "title": "ansys.scade.apitools.create.declaration.add_operator_outputs > ansys.scade.apitools.create.declaration.add_operator_outputs > add_operator_outputs",
        "section": "ansys.scade.apitools.create.declaration.add_operator_outputs > add_operator_outputs",
        "text": "ansys.scade.apitools.create.declaration.add_operator_outputs(operator: scade.model.suite.Operator, vars: List[Tuple[str, ansys.scade.apitools.create.type.TX]], insert_before: scade.model.suite.LocalVariable | None = None) -> List[scade.model.suite.LocalVariable]\n\nAdd outputs to an operator."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/add_operator_outputs",
        "href": "api/ansys/scade/apitools/create/declaration/add_operator_outputs.html#notes",
        "title": "ansys.scade.apitools.create.declaration.add_operator_outputs > Notes",
        "section": "Notes",
        "text": "This is an interface change with respect to the SCADE Creation Library.\nThe pairs “name”/”type” tree are now embedded in a list of tuples.\nNotes"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/add_operator_outputs",
        "href": "api/ansys/scade/apitools/create/declaration/add_operator_outputs.html#parameters",
        "title": "ansys.scade.apitools.create.declaration.add_operator_outputs > Parameters",
        "section": "Parameters",
        "text": "Input operator.\nName/type expression trees.\nInsertion point of the outputs. When this parameter is not None, it is\nan existing output of the operator. The outputs are inserted before this input.\nOtherwise, the outputs are added at the end.\nParameters\nNone"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/add_operator_outputs",
        "href": "api/ansys/scade/apitools/create/declaration/add_operator_outputs.html#returns",
        "title": "ansys.scade.apitools.create.declaration.add_operator_outputs > Returns",
        "section": "Returns",
        "text": "List of the added outputs.\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/create_transition_fork",
        "href": "api/ansys/scade/apitools/create/data_def/create_transition_fork.html#ansysscadeapitoolscreatedata_defcreate_transition_fork",
        "title": "ansys.scade.apitools.create.data_def.create_transition_fork",
        "section": "ansys.scade.apitools.create.data_def.create_transition_fork",
        "text": "Create an intermediate transition structure with forked transitions.\nThe graphical properties are expressed 1/100th of mm.\nThey are considered if and only if the owning state machine\nhas a graphical representation.\nansys.scade.apitools.create.data_def.create_transition_fork"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/create_transition_fork",
        "href": "api/ansys/scade/apitools/create/data_def/create_transition_fork.html#ansys.scade.apitools.create.data_def.create_transition_fork",
        "title": "ansys.scade.apitools.create.data_def.create_transition_fork > ansys.scade.apitools.create.data_def.create_transition_fork > create_transition_fork",
        "section": "ansys.scade.apitools.create.data_def.create_transition_fork > create_transition_fork",
        "text": "ansys.scade.apitools.create.data_def.create_transition_fork(trigger: ansys.scade.apitools.create.expression.EX | None, forks: List[TR], priority: int, points: List[Tuple[float, float]] | None = None, label_position: Tuple[float, float] = (0, 0), label_size: Tuple[float, float] = (0, 0), slash_position: Tuple[float, float] = (0, 0), polyline: bool = True) -> TR\n\nCreate an intermediate transition structure with forked transitions.\n\nThe graphical properties are expressed 1/100th of mm.\n\nThey are considered if and only if the owning state machine\nhas a graphical representation."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/create_transition_fork",
        "href": "api/ansys/scade/apitools/create/data_def/create_transition_fork.html#parameters",
        "title": "ansys.scade.apitools.create.data_def.create_transition_fork > Parameters",
        "section": "Parameters",
        "text": "Extended expression tree defining the trigger of the transition.\nTransitions forked from this transition.\nPriority of the transition.\nPoints of the transition.\nPosition of the label.\nSize of the label, default: None\nPosition of the separator between the trigger and the action\nof the transition.\nIndicates whether the representation is a list of segments. If False,\nthe representation is a Bezier curve.\nParameters\nFalse"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/create_transition_fork",
        "href": "api/ansys/scade/apitools/create/data_def/create_transition_fork.html#returns",
        "title": "ansys.scade.apitools.create.data_def.create_transition_fork > Returns",
        "section": "Returns",
        "text": "TR\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/accessor",
        "href": "api/ansys/scade/apitools/expr/access/accessor.html#ansysscadeapitoolsexpraccessaccessor",
        "title": "ansys.scade.apitools.expr.access.accessor",
        "section": "ansys.scade.apitools.expr.access.accessor",
        "text": "Build the accessor for a SCADE Suite expression.\nansys.scade.apitools.expr.access.accessor"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/accessor",
        "href": "api/ansys/scade/apitools/expr/access/accessor.html#ansys.scade.apitools.expr.access.accessor",
        "title": "ansys.scade.apitools.expr.access.accessor > ansys.scade.apitools.expr.access.accessor > accessor",
        "section": "ansys.scade.apitools.expr.access.accessor > accessor",
        "text": "ansys.scade.apitools.expr.access.accessor(expression: scade.model.suite.Expression) -> Expression\n\nBuild the accessor for a SCADE Suite expression."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/accessor",
        "href": "api/ansys/scade/apitools/expr/access/accessor.html#parameters",
        "title": "ansys.scade.apitools.expr.access.accessor > Parameters",
        "section": "Parameters",
        "text": "Expression to wrap.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/accessor",
        "href": "api/ansys/scade/apitools/expr/access/accessor.html#returns",
        "title": "ansys.scade.apitools.expr.access.accessor > Returns",
        "section": "Returns",
        "text": "Expression accessor.\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/ParamImportedError",
        "href": "api/ansys/scade/apitools/create/declaration/ParamImportedError.html#paramimportederror",
        "title": "ParamImportedError",
        "section": "ParamImportedError",
        "text": "Bases: Exception\nProvides the exception for the wrong imported operator specification.\nProvide a customized message.\nParamImportedError\nParamImportedError\nException"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/ParamImportedError",
        "href": "api/ansys/scade/apitools/create/declaration/ParamImportedError.html#ansys.scade.apitools.create.declaration.ParamImportedError",
        "title": "ParamImportedError > ParamImportedError > ParamImportedError",
        "section": "ParamImportedError > ParamImportedError",
        "text": "exception ansys.scade.apitools.create.declaration.ParamImportedError(context, item, text)\n\nBases: Exception\n\nProvides the exception for the wrong imported operator specification.\n\nProvide a customized message."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/ParamImportedError",
        "href": "api/ansys/scade/apitools/create/declaration/ParamImportedError.html#import-detail",
        "title": "ParamImportedError > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/AK",
        "href": "api/ansys/scade/apitools/create/data_def/AK.html#ak",
        "title": "AK",
        "section": "AK",
        "text": "Bases: enum.Enum\nProvides an enum of assertion kinds.\nAK\nAK\nenum.Enum"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/AK",
        "href": "api/ansys/scade/apitools/create/data_def/AK.html#ansys.scade.apitools.create.data_def.AK",
        "title": "AK > AK > AK",
        "section": "AK > AK",
        "text": "class ansys.scade.apitools.create.data_def.AK\n\nBases: enum.Enum\n\nProvides an enum of assertion kinds."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/AK",
        "href": "api/ansys/scade/apitools/create/data_def/AK.html#overview",
        "title": "AK > Overview",
        "section": "Overview",
        "text": "ASSUME\nGUARANTEE\nOverview\nASSUME\nGUARANTEE"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/AK",
        "href": "api/ansys/scade/apitools/create/data_def/AK.html#import-detail",
        "title": "AK > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/AK",
        "href": "api/ansys/scade/apitools/create/data_def/AK.html#attribute-detail",
        "title": "AK > Attribute detail",
        "section": "Attribute detail",
        "text": "Attribute detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/AK",
        "href": "api/ansys/scade/apitools/create/data_def/AK.html#AK.ASSUME",
        "title": "AK > Attribute detail > ASSUME",
        "section": "Attribute detail > ASSUME",
        "text": "AK.ASSUME = 'Assume'\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/AK",
        "href": "api/ansys/scade/apitools/create/data_def/AK.html#AK.GUARANTEE",
        "title": "AK > Attribute detail > GUARANTEE",
        "section": "Attribute detail > GUARANTEE",
        "text": "AK.GUARANTEE = 'Guarantee'\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/index",
        "href": "api/ansys/scade/apitools/create/data_def/index.html#the-data_defpy-module",
        "title": "The data_def.py module",
        "section": "The data_def.py module",
        "text": "The data_def.py module\ndata_def.py"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/index",
        "href": "api/ansys/scade/apitools/create/data_def/index.html#summary",
        "title": "The data_def.py module > Summary",
        "section": "Summary",
        "text": "IfTree\nProvides an intermediate structure for describing the structure of an if block.\nTransitionDestination\nProvides the top-level abstract class for transition destinations.\nTransitionTree\nProvides the intermediate class for transitions.\nWhenBranch\nProvides the intermediate class for when branches.\nAK\nProvides an enum of assertion kinds.\nDK\nProvides an enum of display kinds.\nSK\nProvides an enum of state kinds.\nTK\nProvides an enum of transition kinds.\nadd_data_def_assertion\nCreate an assertion in a scope.\nadd_data_def_equation\nCreate an equation in a scope.\nadd_data_def_if_block\nCreate an if block in a scope.\nadd_data_def_locals\nAdd local variables to a scope.\nadd_data_def_net_diagram\nAdd a graphical diagram to a scope.\nadd_data_def_probes\nAdd probes to a scope.\nadd_data_def_signals\nAdd signals to a scope.\nadd_data_def_state_machine\nCreate a state machine in a scope.\nadd_data_def_text_diagram\nAdd a textal diagram to a scope.\nadd_data_def_when_block\nAdd a new when block in a scope.\nadd_diagram_edge\nAdd a graphical edge between two equations in a graphical diagram.\nadd_diagram_equation_set\nAdd a new equation set to a graphical diagram.\nadd_diagram_missing_edges\nAdd the missing edges in a graphical diagram with default positions.\nadd_state_machine_state\nCreate a state in a state machine.\nadd_state_transition\nAdd a new transition starting from a state.\nadd_transition_equation\nCreate an equation in a transition.\nadd_when_block_branches\nAdd new branches to a when block.\ncreate_if_action\nCreate a leaf action in the intermediate structure if it is a tree structure.\ncreate_if_tree\nCreate a decision in the intermediate structure if it is a tree structure.\ncreate_transition_fork\nCreate an intermediate transition structure with forked transitions.\ncreate_transition_state\nCreate an intermediate transition structure that targets a state.\ncreate_when_branch\nCreate an intermediate structure for a when branch.\nset_variable_default\nSet the default value of a variable.\nset_variable_last\nSet the last value of a variable.\nIT\nShort name for an IfTree instance to simplify the declarations.\nTD\nShort name for a TransitionDestination instance to simplify the declarations.\nTR\nShort name for a TransitionTree instance to simplify the declarations.\nSummary\nIfTree\nTransitionDestination\nTransitionTree\nWhenBranch\nAK\nDK\nSK\nTK\nadd_data_def_assertion\nadd_data_def_equation\nadd_data_def_if_block\nadd_data_def_locals\nadd_data_def_net_diagram\nadd_data_def_probes\nadd_data_def_signals\nadd_data_def_state_machine\nadd_data_def_text_diagram\nadd_data_def_when_block\nadd_diagram_edge\nadd_diagram_equation_set\nadd_diagram_missing_edges\nadd_state_machine_state\nadd_state_transition\nadd_transition_equation\nadd_when_block_branches\ncreate_if_action\ncreate_if_tree\ncreate_transition_fork\ncreate_transition_state\ncreate_when_branch\nset_variable_default\nset_variable_last\nIT\nIfTree\nTD\nTransitionDestination\nTR\nTransitionTree"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/index",
        "href": "api/ansys/scade/apitools/create/data_def/index.html#description",
        "title": "The data_def.py module > Description",
        "section": "Description",
        "text": "Provides create functions for Scade operator definitions.\nInterface\nBehavior\nDescription"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/index",
        "href": "api/ansys/scade/apitools/create/data_def/index.html#module-detail",
        "title": "The data_def.py module > Module detail",
        "section": "Module detail",
        "text": "Short name for an IfTree instance to simplify the declarations.\nShort name for a TransitionDestination instance to simplify the declarations.\nShort name for a TransitionTree instance to simplify the declarations.\nModule detail\nIfTree\nTransitionDestination\nTransitionTree"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/index",
        "href": "api/ansys/scade/apitools/create/data_def/index.html#data_def.IT",
        "title": "The data_def.py module > Module detail > IT",
        "section": "Module detail > IT",
        "text": "data_def.IT\n\nShort name for an IfTree instance to simplify the declarations."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/index",
        "href": "api/ansys/scade/apitools/create/data_def/index.html#data_def.TD",
        "title": "The data_def.py module > Module detail > TD",
        "section": "Module detail > TD",
        "text": "data_def.TD\n\nShort name for a TransitionDestination instance to simplify the declarations."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/index",
        "href": "api/ansys/scade/apitools/create/data_def/index.html#data_def.TR",
        "title": "The data_def.py module > Module detail > TR",
        "section": "Module detail > TR",
        "text": "data_def.TR\n\nShort name for a TransitionTree instance to simplify the declarations."
    },
    {
        "objectID": "examples/create_interface",
        "href": "examples/create_interface.html#interface",
        "title": "Examples > Interface",
        "section": "Interface",
        "text": "Interface"
    },
    {
        "objectID": "examples/create_interface",
        "href": "examples/create_interface.html#overview",
        "title": "Examples > Interface > Overview",
        "section": "Overview",
        "text": "Create operators and their interfaces from a text description file.\nThis example demonstrates the basic features of a creation script.\nIt reads from a text file the description of operators and their interface: inputs and outputs.\nThe syntax of the description file is very simple.\nEach line declares an operator, an input or an output, as shown in this example:\nThe script should perform several actions:\nCreate the operators.\nCreate the interface.\nReference the new files in the project.\nThe template project has one prerequisite. It must contain the definition\nof all the types referenced in the interface to be created.\nThe content of the script is described exhaustively hereafter.\nOverview"
    },
    {
        "objectID": "examples/create_interface",
        "href": "examples/create_interface.html#import-directives-and-main",
        "title": "Examples > Interface > Import directives and main",
        "section": "Import directives and main",
        "text": "The main function allows the script to be used by the wrapper script:\nImport directives and main\nmain"
    },
    {
        "objectID": "examples/create_interface",
        "href": "examples/create_interface.html#cache",
        "title": "Examples > Interface > Cache",
        "section": "Cache",
        "text": "The script caches all the types in the types global dictionary:\nCache\ntypes"
    },
    {
        "objectID": "examples/create_interface",
        "href": "examples/create_interface.html#helper-for-operators",
        "title": "Examples > Interface > Helper for operators",
        "section": "Helper for operators",
        "text": "The add_operator utility function adds an operator to the model in a separate\nstorage file in the project. This file has the same name and is located in the\nproject’s directory:\nHelper for operators\nadd_operator"
    },
    {
        "objectID": "examples/create_interface",
        "href": "examples/create_interface.html#interface",
        "title": "Examples > Interface",
        "section": "Interface",
        "text": "The create_interface function is the main one of the example. It parses the description file\nand creates the operators and their interface. It also saves the project and the model before returning it.\nInterface\ncreate_interface"
    },
    {
        "objectID": "api/ansys/scade/apitools/prop/pragma/set_pragma_text",
        "href": "api/ansys/scade/apitools/prop/pragma/set_pragma_text.html#ansysscadeapitoolsproppragmaset_pragma_text",
        "title": "ansys.scade.apitools.prop.pragma.set_pragma_text",
        "section": "ansys.scade.apitools.prop.pragma.set_pragma_text",
        "text": "Update the pragma ID of an object with a new ID.\nDelete the pragma when the text is empty.\nCreate a new pragma when no pragma ID exists yet.\nReturn whether the model is modified.\nSee the pragma example.\nansys.scade.apitools.prop.pragma.set_pragma_text"
    },
    {
        "objectID": "api/ansys/scade/apitools/prop/pragma/set_pragma_text",
        "href": "api/ansys/scade/apitools/prop/pragma/set_pragma_text.html#ansys.scade.apitools.prop.pragma.set_pragma_text",
        "title": "ansys.scade.apitools.prop.pragma.set_pragma_text > ansys.scade.apitools.prop.pragma.set_pragma_text > set_pragma_text",
        "section": "ansys.scade.apitools.prop.pragma.set_pragma_text > set_pragma_text",
        "text": "ansys.scade.apitools.prop.pragma.set_pragma_text(object_: scade.model.suite.Object, id: str, text: str) -> bool\n\nUpdate the pragma ID of an object with a new ID.\n\nDelete the pragma when the text is empty.\n\nCreate a new pragma when no pragma ID exists yet.\n\nReturn whether the model is modified.\n\nSee the pragma example."
    },
    {
        "objectID": "api/ansys/scade/apitools/prop/pragma/set_pragma_text",
        "href": "api/ansys/scade/apitools/prop/pragma/set_pragma_text.html#parameters",
        "title": "ansys.scade.apitools.prop.pragma.set_pragma_text > Parameters",
        "section": "Parameters",
        "text": "Element to search for the pragma.\nID of the pragma.\nNew ID of the pragma.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/prop/pragma/set_pragma_text",
        "href": "api/ansys/scade/apitools/prop/pragma/set_pragma_text.html#returns",
        "title": "ansys.scade.apitools.prop.pragma.set_pragma_text > Returns",
        "section": "Returns",
        "text": "True when the model is modified, False otherwise.\nReturns\nTrue\nFalse"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/create_graphical_operator",
        "href": "api/ansys/scade/apitools/create/declaration/create_graphical_operator.html#ansysscadeapitoolscreatedeclarationcreate_graphical_operator",
        "title": "ansys.scade.apitools.create.declaration.create_graphical_operator",
        "section": "ansys.scade.apitools.create.declaration.create_graphical_operator",
        "text": "Create an operator with a graphical diagram.\nThe operator has a name.\nansys.scade.apitools.create.declaration.create_graphical_operator"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/create_graphical_operator",
        "href": "api/ansys/scade/apitools/create/declaration/create_graphical_operator.html#ansys.scade.apitools.create.declaration.create_graphical_operator",
        "title": "ansys.scade.apitools.create.declaration.create_graphical_operator > ansys.scade.apitools.create.declaration.create_graphical_operator > create_graphical_operator",
        "section": "ansys.scade.apitools.create.declaration.create_graphical_operator > create_graphical_operator",
        "text": "ansys.scade.apitools.create.declaration.create_graphical_operator(owner: scade.model.suite.Package, name: str, path: pathlib.Path | None, visibility: VK = VK.PUBLIC, symbol_file: pathlib.Path | None = None, state: bool = False) -> scade.model.suite.Operator\n\nCreate an operator with a graphical diagram.\n\nThe operator has a name."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/create_graphical_operator",
        "href": "api/ansys/scade/apitools/create/declaration/create_graphical_operator.html#parameters",
        "title": "ansys.scade.apitools.create.declaration.create_graphical_operator > Parameters",
        "section": "Parameters",
        "text": "Owner of the operator, which is either the model itself or a package.\nName of the operator.\nPath of the file for storing the operator. This parameter is optional\nif the package’s owner is a package. When the path is None and owner\nis the model, the operator is stored in the model’s default file.\nAccessibility of the operator.\nPath of the file defining the symbol of the operator.\nWhether the operator is a node.\nParameters\nNone"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/create_graphical_operator",
        "href": "api/ansys/scade/apitools/create/declaration/create_graphical_operator.html#returns",
        "title": "ansys.scade.apitools.create.declaration.create_graphical_operator > Returns",
        "section": "Returns",
        "text": "suite.Operator\nReturns"
    },
    {
        "objectID": "index",
        "href": "index.html#ansys-scade-api-tools",
        "title": "Ansys SCADE API Tools",
        "section": "Ansys SCADE API Tools",
        "text": "Ansys SCADE API Tools"
    },
    {
        "objectID": "index",
        "href": "index.html#indices-and-tables",
        "title": "Ansys SCADE API Tools > Indices and tables",
        "section": "Indices and tables",
        "text": "genindex\nmodindex\nsearch\nIndices and tables"
    },
    {
        "objectID": "api/ansys/scade/apitools/query/type/index",
        "href": "api/ansys/scade/apitools/query/type/index.html#the-typepy-module",
        "title": "The type.py module",
        "section": "The type.py module",
        "text": "The type.py module\ntype.py"
    },
    {
        "objectID": "api/ansys/scade/apitools/query/type/index",
        "href": "api/ansys/scade/apitools/query/type/index.html#summary",
        "title": "The type.py module > Summary",
        "section": "Summary",
        "text": "get_cell_type\nGet the type of the elements of an array, optionally multi-dimensional.\nget_leaf_alias\nGet the closest alias of the input’s type definition.\nget_leaf_type\nGet the definition of the input type, bypassing the aliases.\nget_type_name\nGet the name of a type or a string representation.\nis_array\nDetermine if the input type is an array.\nis_enum\nDetermine if the input type is an enumeration.\nis_imported\nDetermine if the input type is imported.\nis_predefined\nDetermine if the input type is predefined.\nis_scalar\nDetermine if the input type is scalar.\nis_structure\nDetermine if the input type is a structure.\nSummary\nget_cell_type\nget_leaf_alias\nget_leaf_type\nget_type_name\nis_array\nis_enum\nis_imported\nis_predefined\nis_scalar\nis_structure"
    },
    {
        "objectID": "api/ansys/scade/apitools/query/type/index",
        "href": "api/ansys/scade/apitools/query/type/index.html#description",
        "title": "The type.py module > Description",
        "section": "Description",
        "text": "Provides queries for SCADE Suite types.\nThe main purpose of this module is to get the nature of a type regardless of its aliases\nand not raise an exception if a type is None.\nDescription\nNone"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/PrjOp",
        "href": "api/ansys/scade/apitools/expr/access/PrjOp.html#prjop",
        "title": "PrjOp",
        "section": "PrjOp",
        "text": "Bases: ProjectionOp\nProvides the static projection of a flow.\nSee the example prj_op.\nPrjOp\nPrjOp\nProjectionOp"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/PrjOp",
        "href": "api/ansys/scade/apitools/expr/access/PrjOp.html#ansys.scade.apitools.expr.access.PrjOp",
        "title": "PrjOp > PrjOp > PrjOp",
        "section": "PrjOp > PrjOp",
        "text": "class ansys.scade.apitools.expr.access.PrjOp(expression: scade.model.suite.ExprCall)\n\nBases: ProjectionOp\n\nProvides the static projection of a flow.\n\nSee the example prj_op."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/PrjOp",
        "href": "api/ansys/scade/apitools/expr/access/PrjOp.html#parameters",
        "title": "PrjOp > Parameters",
        "section": "Parameters",
        "text": "Call expression to wrap.\nInitialize the instance from the Scade expression.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/PrjOp",
        "href": "api/ansys/scade/apitools/expr/access/PrjOp.html#import-detail",
        "title": "PrjOp > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/prop/pragma/get_pragma_json",
        "href": "api/ansys/scade/apitools/prop/pragma/get_pragma_json.html#ansysscadeapitoolsproppragmaget_pragma_json",
        "title": "ansys.scade.apitools.prop.pragma.get_pragma_json",
        "section": "ansys.scade.apitools.prop.pragma.get_pragma_json",
        "text": "Deserialize a text pragma containing a JSON document to a Python object.\nSee the pragma_json example.\nansys.scade.apitools.prop.pragma.get_pragma_json"
    },
    {
        "objectID": "api/ansys/scade/apitools/prop/pragma/get_pragma_json",
        "href": "api/ansys/scade/apitools/prop/pragma/get_pragma_json.html#ansys.scade.apitools.prop.pragma.get_pragma_json",
        "title": "ansys.scade.apitools.prop.pragma.get_pragma_json > ansys.scade.apitools.prop.pragma.get_pragma_json > get_pragma_json",
        "section": "ansys.scade.apitools.prop.pragma.get_pragma_json > get_pragma_json",
        "text": "ansys.scade.apitools.prop.pragma.get_pragma_json(object_: scade.model.suite.Object, id: str) -> object\n\nDeserialize a text pragma containing a JSON document to a Python object.\n\nSee the pragma_json example."
    },
    {
        "objectID": "api/ansys/scade/apitools/prop/pragma/get_pragma_json",
        "href": "api/ansys/scade/apitools/prop/pragma/get_pragma_json.html#parameters",
        "title": "ansys.scade.apitools.prop.pragma.get_pragma_json > Parameters",
        "section": "Parameters",
        "text": "Element to get the pragma from.\nID of the pragma.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/prop/pragma/get_pragma_json",
        "href": "api/ansys/scade/apitools/prop/pragma/get_pragma_json.html#returns",
        "title": "ansys.scade.apitools.prop.pragma.get_pragma_json > Returns",
        "section": "Returns",
        "text": "Python object corresponding to the JSON document stored in the\npragma. Returns {} if there is no pragma or None if the\npragma does not contain a valid JSON document.\nReturns\n{}\nNone"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/IdExpression",
        "href": "api/ansys/scade/apitools/expr/access/IdExpression.html#idexpression",
        "title": "IdExpression",
        "section": "IdExpression",
        "text": "Bases: Expression\nProvides the constant, sensor, or local variable.\nThe format is <path>.\nSee the id_expression example.\nIdExpression\nIdExpression\nExpression\n<path>"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/IdExpression",
        "href": "api/ansys/scade/apitools/expr/access/IdExpression.html#ansys.scade.apitools.expr.access.IdExpression",
        "title": "IdExpression > IdExpression > IdExpression",
        "section": "IdExpression > IdExpression",
        "text": "class ansys.scade.apitools.expr.access.IdExpression(expression: scade.model.suite.ExprId)\n\nBases: Expression\n\nProvides the constant, sensor, or local variable.\n\nThe format is <path>.\n\nSee the id_expression example."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/IdExpression",
        "href": "api/ansys/scade/apitools/expr/access/IdExpression.html#parameters",
        "title": "IdExpression > Parameters",
        "section": "Parameters",
        "text": "Reference expression to wrap.\nInitialize the instance from the Scade expression.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/IdExpression",
        "href": "api/ansys/scade/apitools/expr/access/IdExpression.html#overview",
        "title": "IdExpression > Overview",
        "section": "Overview",
        "text": "path\nLocal variable, sensor, or constant of the expression.\nOverview\npath"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/IdExpression",
        "href": "api/ansys/scade/apitools/expr/access/IdExpression.html#import-detail",
        "title": "IdExpression > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/IdExpression",
        "href": "api/ansys/scade/apitools/expr/access/IdExpression.html#property-detail",
        "title": "IdExpression > Property detail",
        "section": "Property detail",
        "text": "Local variable, sensor, or constant of the expression.\nProperty detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/IdExpression",
        "href": "api/ansys/scade/apitools/expr/access/IdExpression.html#IdExpression.path",
        "title": "IdExpression > Property detail > path",
        "section": "Property detail > path",
        "text": "property IdExpression.path: scade.model.suite.ConstVar\n\nLocal variable, sensor, or constant of the expression."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_mapfoldw",
        "href": "api/ansys/scade/apitools/create/expression/create_mapfoldw.html#ansysscadeapitoolscreateexpressioncreate_mapfoldw",
        "title": "ansys.scade.apitools.create.expression.create_mapfoldw",
        "section": "ansys.scade.apitools.create.expression.create_mapfoldw",
        "text": "Return the expression tree for the higher-order construct for mapfoldw creation.\nansys.scade.apitools.create.expression.create_mapfoldw"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_mapfoldw",
        "href": "api/ansys/scade/apitools/create/expression/create_mapfoldw.html#ansys.scade.apitools.create.expression.create_mapfoldw",
        "title": "ansys.scade.apitools.create.expression.create_mapfoldw > ansys.scade.apitools.create.expression.create_mapfoldw > create_mapfoldw",
        "section": "ansys.scade.apitools.create.expression.create_mapfoldw > create_mapfoldw",
        "text": "ansys.scade.apitools.create.expression.create_mapfoldw(size: EX, acc: EX, condition: EX, default: EX) -> ET\n\nReturn the expression tree for the higher-order construct for mapfoldw creation."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_mapfoldw",
        "href": "api/ansys/scade/apitools/create/expression/create_mapfoldw.html#parameters",
        "title": "ansys.scade.apitools.create.expression.create_mapfoldw > Parameters",
        "section": "Parameters",
        "text": "Number of iterations.\nNumber of accumulators.\nInitial value of the iteration condition.\nDefault value of the iteration.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_mapfoldw",
        "href": "api/ansys/scade/apitools/create/expression/create_mapfoldw.html#returns",
        "title": "ansys.scade.apitools.create.expression.create_mapfoldw > Returns",
        "section": "Returns",
        "text": "ET\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/MakeOp",
        "href": "api/ansys/scade/apitools/expr/access/MakeOp.html#makeop",
        "title": "MakeOp",
        "section": "MakeOp",
        "text": "Bases: CallExpression\nProvides the make of a structure.\nThe format is (make <type>)(<flow>, ..., <flow>).\nSee the make_op example.\nMakeOp\nMakeOp\nCallExpression\n(make <type>)(<flow>, ..., <flow>)"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/MakeOp",
        "href": "api/ansys/scade/apitools/expr/access/MakeOp.html#ansys.scade.apitools.expr.access.MakeOp",
        "title": "MakeOp > MakeOp > MakeOp",
        "section": "MakeOp > MakeOp",
        "text": "class ansys.scade.apitools.expr.access.MakeOp(expression: scade.model.suite.ExprCall)\n\nBases: CallExpression\n\nProvides the make of a structure.\n\nThe format is (make <type>)(<flow>, ..., <flow>).\n\nSee the make_op example."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/MakeOp",
        "href": "api/ansys/scade/apitools/expr/access/MakeOp.html#notes",
        "title": "MakeOp > Notes",
        "section": "Notes",
        "text": "The design differs slightly from the meta-model. This class derives from\nthe CallExpression class.\nNotes\nCallExpression"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/MakeOp",
        "href": "api/ansys/scade/apitools/expr/access/MakeOp.html#parameters",
        "title": "MakeOp > Parameters",
        "section": "Parameters",
        "text": "Call expression to wrap.\nInitialize the instance from the Scade expression.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/MakeOp",
        "href": "api/ansys/scade/apitools/expr/access/MakeOp.html#overview",
        "title": "MakeOp > Overview",
        "section": "Overview",
        "text": "flows\nComponents of the structure.\ntype_\nType to build.\nOverview\nflows\ntype_"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/MakeOp",
        "href": "api/ansys/scade/apitools/expr/access/MakeOp.html#import-detail",
        "title": "MakeOp > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/MakeOp",
        "href": "api/ansys/scade/apitools/expr/access/MakeOp.html#property-detail",
        "title": "MakeOp > Property detail",
        "section": "Property detail",
        "text": "Components of the structure.\nType to build.\nProperty detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/MakeOp",
        "href": "api/ansys/scade/apitools/expr/access/MakeOp.html#MakeOp.flows",
        "title": "MakeOp > Property detail > flows",
        "section": "Property detail > flows",
        "text": "property MakeOp.flows: list[Expression]\n\nComponents of the structure."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/MakeOp",
        "href": "api/ansys/scade/apitools/expr/access/MakeOp.html#MakeOp.type_",
        "title": "MakeOp > Property detail > type_",
        "section": "Property detail > type_",
        "text": "property MakeOp.type_: scade.model.suite.NamedType\n\nType to build."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/create_named_type",
        "href": "api/ansys/scade/apitools/create/declaration/create_named_type.html#ansysscadeapitoolscreatedeclarationcreate_named_type",
        "title": "ansys.scade.apitools.create.declaration.create_named_type",
        "section": "ansys.scade.apitools.create.declaration.create_named_type",
        "text": "Create a named type.\nA named type has a name and a definition.\nansys.scade.apitools.create.declaration.create_named_type"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/create_named_type",
        "href": "api/ansys/scade/apitools/create/declaration/create_named_type.html#ansys.scade.apitools.create.declaration.create_named_type",
        "title": "ansys.scade.apitools.create.declaration.create_named_type > ansys.scade.apitools.create.declaration.create_named_type > create_named_type",
        "section": "ansys.scade.apitools.create.declaration.create_named_type > create_named_type",
        "text": "ansys.scade.apitools.create.declaration.create_named_type(owner: scade.model.suite.Package, name: str, definition: ansys.scade.apitools.create.type.TX, path: pathlib.Path | None = None, visibility: VK = VK.PUBLIC, symbol_files: List[pathlib.Path] | None = None) -> scade.model.suite.NamedType\n\nCreate a named type.\n\nA named type has a name and a definition."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/create_named_type",
        "href": "api/ansys/scade/apitools/create/declaration/create_named_type.html#parameters",
        "title": "ansys.scade.apitools.create.declaration.create_named_type > Parameters",
        "section": "Parameters",
        "text": "Owner of the type, which is either the model itself or a package.\nName of the type.\nDefinition of the type expressed as a type tree.\nPath of the file for storing the type. This parameter is ignored if the\nowner is a package. When the path is None and owner is the model, the\ntype is stored in the model’s default file.\nAccessibility of the type.\nList of symbof files (SSL) associated to the type.\nParameters\nNone"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/create_named_type",
        "href": "api/ansys/scade/apitools/create/declaration/create_named_type.html#returns",
        "title": "ansys.scade.apitools.create.declaration.create_named_type > Returns",
        "section": "Returns",
        "text": "suite.NamedType\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_data_def_if_block",
        "href": "api/ansys/scade/apitools/create/data_def/add_data_def_if_block.html#ansysscadeapitoolscreatedata_defadd_data_def_if_block",
        "title": "ansys.scade.apitools.create.data_def.add_data_def_if_block",
        "section": "ansys.scade.apitools.create.data_def.add_data_def_if_block",
        "text": "Create an if block in a scope.\nThe graphical properties are expressed 1/100th of mm.\nThey are considered if and only if diagram is a graphical diagram.\nansys.scade.apitools.create.data_def.add_data_def_if_block"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_data_def_if_block",
        "href": "api/ansys/scade/apitools/create/data_def/add_data_def_if_block.html#ansys.scade.apitools.create.data_def.add_data_def_if_block",
        "title": "ansys.scade.apitools.create.data_def.add_data_def_if_block > ansys.scade.apitools.create.data_def.add_data_def_if_block > add_data_def_if_block",
        "section": "ansys.scade.apitools.create.data_def.add_data_def_if_block > add_data_def_if_block",
        "text": "ansys.scade.apitools.create.data_def.add_data_def_if_block(data_def: scade.model.suite.DataDef, name: str, if_tree: IfTree, diagram: scade.model.suite.Diagram, position: Tuple[float, float] = (0, 0), size: Tuple[float, float] = (0, 0)) -> scade.model.suite.IfBlock\n\nCreate an if block in a scope.\n\nThe graphical properties are expressed 1/100th of mm.\n\nThey are considered if and only if diagram is a graphical diagram."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_data_def_if_block",
        "href": "api/ansys/scade/apitools/create/data_def/add_data_def_if_block.html#parameters",
        "title": "ansys.scade.apitools.create.data_def.add_data_def_if_block > Parameters",
        "section": "Parameters",
        "text": "Input scope, which is an operator, state, or action.\nName of the if block.\nIntermediate tree to describe the structure of the if block.\nDiagram containing the equation. The diagram specified can be either graphical\nor textual, or it can be None. However, it cannot be None if the scope\ncontains at least one diagram.\nPosition of the if block.\nSize of the if block.\nParameters\nNone\nNone"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_data_def_if_block",
        "href": "api/ansys/scade/apitools/create/data_def/add_data_def_if_block.html#returns",
        "title": "ansys.scade.apitools.create.data_def.add_data_def_if_block > Returns",
        "section": "Returns",
        "text": "suite.IfBlock\nReturns"
    },
    {
        "objectID": "api/index",
        "href": "api/index.html#api-reference",
        "title": "API reference",
        "section": "API reference",
        "text": "This section describes ansys-scade-apitools endpoints, their capabilities, and how\nto interact with them programmatically.\nAPI reference"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/set_type_constraint",
        "href": "api/ansys/scade/apitools/create/declaration/set_type_constraint.html#ansysscadeapitoolscreatedeclarationset_type_constraint",
        "title": "ansys.scade.apitools.create.declaration.set_type_constraint",
        "section": "ansys.scade.apitools.create.declaration.set_type_constraint",
        "text": "Set the constraint of a polymorphic type.\nansys.scade.apitools.create.declaration.set_type_constraint"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/set_type_constraint",
        "href": "api/ansys/scade/apitools/create/declaration/set_type_constraint.html#ansys.scade.apitools.create.declaration.set_type_constraint",
        "title": "ansys.scade.apitools.create.declaration.set_type_constraint > ansys.scade.apitools.create.declaration.set_type_constraint > set_type_constraint",
        "section": "ansys.scade.apitools.create.declaration.set_type_constraint > set_type_constraint",
        "text": "ansys.scade.apitools.create.declaration.set_type_constraint(type_: scade.model.suite.NamedType, name: str)\n\nSet the constraint of a polymorphic type."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/set_type_constraint",
        "href": "api/ansys/scade/apitools/create/declaration/set_type_constraint.html#parameters",
        "title": "ansys.scade.apitools.create.declaration.set_type_constraint > Parameters",
        "section": "Parameters",
        "text": "Input polymorphic type.\nName of the constraint.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/FlowOp",
        "href": "api/ansys/scade/apitools/expr/access/FlowOp.html#flowop",
        "title": "FlowOp",
        "section": "FlowOp",
        "text": "Bases: CallExpression\nProvides an abstract class for flow expressions.\nFlowOp\nFlowOp\nCallExpression"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/FlowOp",
        "href": "api/ansys/scade/apitools/expr/access/FlowOp.html#ansys.scade.apitools.expr.access.FlowOp",
        "title": "FlowOp > FlowOp > FlowOp",
        "section": "FlowOp > FlowOp",
        "text": "class ansys.scade.apitools.expr.access.FlowOp(expression: scade.model.suite.ExprCall, flow: scade.model.suite.Expression)\n\nBases: CallExpression\n\nProvides an abstract class for flow expressions."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/FlowOp",
        "href": "api/ansys/scade/apitools/expr/access/FlowOp.html#parameters",
        "title": "FlowOp > Parameters",
        "section": "Parameters",
        "text": "Call expression to wrap.\nExpression operand.\nInitialize the instance from the Scade expression.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/FlowOp",
        "href": "api/ansys/scade/apitools/expr/access/FlowOp.html#overview",
        "title": "FlowOp > Overview",
        "section": "Overview",
        "text": "flow\nFlow operand of the expression.\nOverview\nflow"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/FlowOp",
        "href": "api/ansys/scade/apitools/expr/access/FlowOp.html#import-detail",
        "title": "FlowOp > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/FlowOp",
        "href": "api/ansys/scade/apitools/expr/access/FlowOp.html#property-detail",
        "title": "FlowOp > Property detail",
        "section": "Property detail",
        "text": "Flow operand of the expression.\nProperty detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/FlowOp",
        "href": "api/ansys/scade/apitools/expr/access/FlowOp.html#FlowOp.flow",
        "title": "FlowOp > Property detail > flow",
        "section": "Property detail > flow",
        "text": "property FlowOp.flow: Expression\n\nFlow operand of the expression."
    },
    {
        "objectID": "api/ansys/scade/apitools/query/type/get_leaf_alias",
        "href": "api/ansys/scade/apitools/query/type/get_leaf_alias.html#ansysscadeapitoolsquerytypeget_leaf_alias",
        "title": "ansys.scade.apitools.query.type.get_leaf_alias",
        "section": "ansys.scade.apitools.query.type.get_leaf_alias",
        "text": "Get the closest alias of the input’s type definition.\nSee the get_leaf_alias example.\nansys.scade.apitools.query.type.get_leaf_alias"
    },
    {
        "objectID": "api/ansys/scade/apitools/query/type/get_leaf_alias",
        "href": "api/ansys/scade/apitools/query/type/get_leaf_alias.html#ansys.scade.apitools.query.type.get_leaf_alias",
        "title": "ansys.scade.apitools.query.type.get_leaf_alias > ansys.scade.apitools.query.type.get_leaf_alias > get_leaf_alias",
        "section": "ansys.scade.apitools.query.type.get_leaf_alias > get_leaf_alias",
        "text": "ansys.scade.apitools.query.type.get_leaf_alias(type_: scade.model.suite.Type) -> scade.model.suite.Type\n\nGet the closest alias of the input’s type definition.\n\nSee the get_leaf_alias example."
    },
    {
        "objectID": "api/ansys/scade/apitools/query/type/get_leaf_alias",
        "href": "api/ansys/scade/apitools/query/type/get_leaf_alias.html#parameters",
        "title": "ansys.scade.apitools.query.type.get_leaf_alias > Parameters",
        "section": "Parameters",
        "text": "Input type.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/query/type/get_leaf_alias",
        "href": "api/ansys/scade/apitools/query/type/get_leaf_alias.html#returns",
        "title": "ansys.scade.apitools.query.type.get_leaf_alias > Returns",
        "section": "Returns",
        "text": "Closest alias of the input’s type definition or the input type\nitself if it is not an alias, such as an instance of NamedType.\nReturns\nNamedType"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/type/create_structure",
        "href": "api/ansys/scade/apitools/create/type/create_structure.html#ansysscadeapitoolscreatetypecreate_structure",
        "title": "ansys.scade.apitools.create.type.create_structure",
        "section": "ansys.scade.apitools.create.type.create_structure",
        "text": "Get the type tree for a structure.\nansys.scade.apitools.create.type.create_structure"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/type/create_structure",
        "href": "api/ansys/scade/apitools/create/type/create_structure.html#ansys.scade.apitools.create.type.create_structure",
        "title": "ansys.scade.apitools.create.type.create_structure > ansys.scade.apitools.create.type.create_structure > create_structure",
        "section": "ansys.scade.apitools.create.type.create_structure > create_structure",
        "text": "ansys.scade.apitools.create.type.create_structure(*fields: Tuple[str, TX]) -> TT\n\nGet the type tree for a structure."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/type/create_structure",
        "href": "api/ansys/scade/apitools/create/type/create_structure.html#notes",
        "title": "ansys.scade.apitools.create.type.create_structure > Notes",
        "section": "Notes",
        "text": "This is an interface change with respect to the SCADE Creation Library.\nThe pairs “pattern”/”value” are now embedded in a list of tuples.\nNotes"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/type/create_structure",
        "href": "api/ansys/scade/apitools/create/type/create_structure.html#parameters",
        "title": "ansys.scade.apitools.create.type.create_structure > Parameters",
        "section": "Parameters",
        "text": "Name/type expression trees.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/type/create_structure",
        "href": "api/ansys/scade/apitools/create/type/create_structure.html#returns",
        "title": "ansys.scade.apitools.create.type.create_structure > Returns",
        "section": "Returns",
        "text": "TT\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/index",
        "href": "api/ansys/scade/apitools/create/declaration/index.html#the-declarationpy-module",
        "title": "The declaration.py module",
        "section": "The declaration.py module",
        "text": "The declaration.py module\ndeclaration.py"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/index",
        "href": "api/ansys/scade/apitools/create/declaration/index.html#summary",
        "title": "The declaration.py module > Summary",
        "section": "Summary",
        "text": "VK\nVisibility kind.\nIllegalIOError\nProvides the exception for the wrong IO specification.\nParamImportedError\nProvides the exception for the wrong imported operator specification.\nadd_enumeration_values\nAdd enumeration values to an enumeration type.\nadd_operator_hidden\nAdd hidden inputs to an operator.\nadd_operator_inputs\nAdd inputs to an operator.\nadd_operator_outputs\nAdd outputs to an operator.\nadd_operator_parameters\nAdd parameters to an operator.\ncreate_constant\nCreate a constant.\ncreate_enumeration\nCreate a named type defined by an enumeration.\ncreate_graphical_operator\nCreate an operator with a graphical diagram.\ncreate_imported_constant\nCreate an imported constant.\ncreate_imported_operator\nCreate an imported operator.\ncreate_imported_type\nCreate an imported named type.\ncreate_named_type\nCreate a named type.\ncreate_package\nCreate a package.\ncreate_sensor\nCreate a sensor.\ncreate_textual_operator\nCreate an operator with a textual diagram.\nset_specialized_operator\nDeclare a specialization of an imported operator.\nset_type_constraint\nSet the constraint of a polymorphic type.\nSummary\nVK\nIllegalIOError\nParamImportedError\nadd_enumeration_values\nadd_operator_hidden\nadd_operator_inputs\nadd_operator_outputs\nadd_operator_parameters\ncreate_constant\ncreate_enumeration\ncreate_graphical_operator\ncreate_imported_constant\ncreate_imported_operator\ncreate_imported_type\ncreate_named_type\ncreate_package\ncreate_sensor\ncreate_textual_operator\nset_specialized_operator\nset_type_constraint"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/index",
        "href": "api/ansys/scade/apitools/create/declaration/index.html#description",
        "title": "The declaration.py module > Description",
        "section": "Description",
        "text": "Provides create functions for Scade model declarations.\nPackage\nType\nConstant\nSensor\nOperator\nDescription"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/FlattenOp",
        "href": "api/ansys/scade/apitools/expr/access/FlattenOp.html#flattenop",
        "title": "FlattenOp",
        "section": "FlattenOp",
        "text": "Bases: CallExpression\nProvides flattening of a structure.\nThe format is (flatten <type>)(<flow>).\nSee the flatten_op example.\nFlattenOp\nFlattenOp\nCallExpression\n(flatten <type>)(<flow>)"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/FlattenOp",
        "href": "api/ansys/scade/apitools/expr/access/FlattenOp.html#ansys.scade.apitools.expr.access.FlattenOp",
        "title": "FlattenOp > FlattenOp > FlattenOp",
        "section": "FlattenOp > FlattenOp",
        "text": "class ansys.scade.apitools.expr.access.FlattenOp(expression: scade.model.suite.ExprCall)\n\nBases: CallExpression\n\nProvides flattening of a structure.\n\nThe format is (flatten <type>)(<flow>).\n\nSee the flatten_op example."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/FlattenOp",
        "href": "api/ansys/scade/apitools/expr/access/FlattenOp.html#notes",
        "title": "FlattenOp > Notes",
        "section": "Notes",
        "text": "The design differs slightly from the meta-model. This class derives from\nthe CallExpression class.\nNotes\nCallExpression"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/FlattenOp",
        "href": "api/ansys/scade/apitools/expr/access/FlattenOp.html#parameters",
        "title": "FlattenOp > Parameters",
        "section": "Parameters",
        "text": "Call expression to wrap.\nInitialize the instance from the Scade expression.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/FlattenOp",
        "href": "api/ansys/scade/apitools/expr/access/FlattenOp.html#overview",
        "title": "FlattenOp > Overview",
        "section": "Overview",
        "text": "flow\nInput flow.\ntype_\nType to build.\nOverview\nflow\ntype_"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/FlattenOp",
        "href": "api/ansys/scade/apitools/expr/access/FlattenOp.html#import-detail",
        "title": "FlattenOp > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/FlattenOp",
        "href": "api/ansys/scade/apitools/expr/access/FlattenOp.html#property-detail",
        "title": "FlattenOp > Property detail",
        "section": "Property detail",
        "text": "Input flow.\nType to build.\nProperty detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/FlattenOp",
        "href": "api/ansys/scade/apitools/expr/access/FlattenOp.html#FlattenOp.flow",
        "title": "FlattenOp > Property detail > flow",
        "section": "Property detail > flow",
        "text": "property FlattenOp.flow: Expression\n\nInput flow."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/FlattenOp",
        "href": "api/ansys/scade/apitools/expr/access/FlattenOp.html#FlattenOp.type_",
        "title": "FlattenOp > Property detail > type_",
        "section": "Property detail > type_",
        "text": "property FlattenOp.type_: scade.model.suite.NamedType\n\nType to build."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_unary",
        "href": "api/ansys/scade/apitools/create/expression/create_unary.html#ansysscadeapitoolscreateexpressioncreate_unary",
        "title": "ansys.scade.apitools.create.expression.create_unary",
        "section": "ansys.scade.apitools.create.expression.create_unary",
        "text": "Return the expression tree for a unary operator.\nansys.scade.apitools.create.expression.create_unary"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_unary",
        "href": "api/ansys/scade/apitools/create/expression/create_unary.html#ansys.scade.apitools.create.expression.create_unary",
        "title": "ansys.scade.apitools.create.expression.create_unary > ansys.scade.apitools.create.expression.create_unary > create_unary",
        "section": "ansys.scade.apitools.create.expression.create_unary > create_unary",
        "text": "ansys.scade.apitools.create.expression.create_unary(op: str, tree: EX, modifiers: ET | List[ET] | None = None) -> ET\n\nReturn the expression tree for a unary operator."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_unary",
        "href": "api/ansys/scade/apitools/create/expression/create_unary.html#parameters",
        "title": "ansys.scade.apitools.create.expression.create_unary > Parameters",
        "section": "Parameters",
        "text": "Unary operator to call: - | + | !\nOperand: expression tree.\nList of higher-order constructs.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_unary",
        "href": "api/ansys/scade/apitools/create/expression/create_unary.html#returns",
        "title": "ansys.scade.apitools.create.expression.create_unary > Returns",
        "section": "Returns",
        "text": "ET\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#eck",
        "title": "Eck",
        "section": "Eck",
        "text": "Bases: enum.Enum\nProvides an enum of predefined operators.\nEck\nEck\nenum.Enum"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#ansys.scade.apitools.expr.predef.Eck",
        "title": "Eck > Eck > Eck",
        "section": "Eck > Eck",
        "text": "class ansys.scade.apitools.expr.predef.Eck\n\nBases: enum.Enum\n\nProvides an enum of predefined operators."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#overview",
        "title": "Eck > Overview",
        "section": "Overview",
        "text": "ACTIVATE\nACTIVATE_NOINIT\nAND\nBLD_STRUCT\nBLD_VECTOR\nCASE\nCHANGE_ITH\nCLOCKED_ACTIVATE\nCLOCKED_NOT\nCONCAT\nDIV\nEQUAL\nFBY\nFLATTEN\nFOLD\nFOLDI\nFOLDW\nFOLDWI\nFOLLOW\nGEQUAL\nGREAT\nIF\nINT2REAL\nLAND\nLEQUAL\nLESS\nLNOT\nLOR\nLSL\nLSR\nLXOR\nMAKE\nMAP\nMAPFOLD\nMAPFOLDI\nMAPFOLDW\nMAPFOLDWI\nMAPI\nMAPW\nMAPWI\nMATCH\nMERGE\nMOD\nMUL\nNEG\nNEQUAL\nNONE\nNOT\nNUMERIC_CAST\nOR\nPLUS\nPOS\nPRE\nPRJ\nPRJ_DYN\nREAL2INT\nRESTART\nREVERSE\nSCALAR_TO_VECTOR\nSEQ_EXPR\nSHARP\nSLASH\nSLICE\nSUB\nTIMES\nTRANSPOSE\nWHEN\nXOR\nOverview\nACTIVATE\nACTIVATE_NOINIT\nAND\nBLD_STRUCT\nBLD_VECTOR\nCASE\nCHANGE_ITH\nCLOCKED_ACTIVATE\nCLOCKED_NOT\nCONCAT\nDIV\nEQUAL\nFBY\nFLATTEN\nFOLD\nFOLDI\nFOLDW\nFOLDWI\nFOLLOW\nGEQUAL\nGREAT\nIF\nINT2REAL\nLAND\nLEQUAL\nLESS\nLNOT\nLOR\nLSL\nLSR\nLXOR\nMAKE\nMAP\nMAPFOLD\nMAPFOLDI\nMAPFOLDW\nMAPFOLDWI\nMAPI\nMAPW\nMAPWI\nMATCH\nMERGE\nMOD\nMUL\nNEG\nNEQUAL\nNONE\nNOT\nNUMERIC_CAST\nOR\nPLUS\nPOS\nPRE\nPRJ\nPRJ_DYN\nREAL2INT\nRESTART\nREVERSE\nSCALAR_TO_VECTOR\nSEQ_EXPR\nSHARP\nSLASH\nSLICE\nSUB\nTIMES\nTRANSPOSE\nWHEN\nXOR"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#import-detail",
        "title": "Eck > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#attribute-detail",
        "title": "Eck > Attribute detail",
        "section": "Attribute detail",
        "text": "Attribute detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.ACTIVATE",
        "title": "Eck > Attribute detail > ACTIVATE",
        "section": "Attribute detail > ACTIVATE",
        "text": "Eck.ACTIVATE = 53\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.ACTIVATE_NOINIT",
        "title": "Eck > Attribute detail > ACTIVATE_NOINIT",
        "section": "Attribute detail > ACTIVATE_NOINIT",
        "text": "Eck.ACTIVATE_NOINIT = 57\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.AND",
        "title": "Eck > Attribute detail > AND",
        "section": "Attribute detail > AND",
        "text": "Eck.AND = 2\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.BLD_STRUCT",
        "title": "Eck > Attribute detail > BLD_STRUCT",
        "section": "Attribute detail > BLD_STRUCT",
        "text": "Eck.BLD_STRUCT = 34\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.BLD_VECTOR",
        "title": "Eck > Attribute detail > BLD_VECTOR",
        "section": "Attribute detail > BLD_VECTOR",
        "text": "Eck.BLD_VECTOR = 41\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.CASE",
        "title": "Eck > Attribute detail > CASE",
        "section": "Attribute detail > CASE",
        "text": "Eck.CASE = 32\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.CHANGE_ITH",
        "title": "Eck > Attribute detail > CHANGE_ITH",
        "section": "Attribute detail > CHANGE_ITH",
        "text": "Eck.CHANGE_ITH = 19\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.CLOCKED_ACTIVATE",
        "title": "Eck > Attribute detail > CLOCKED_ACTIVATE",
        "section": "Attribute detail > CLOCKED_ACTIVATE",
        "text": "Eck.CLOCKED_ACTIVATE = 58\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.CLOCKED_NOT",
        "title": "Eck > Attribute detail > CLOCKED_NOT",
        "section": "Attribute detail > CLOCKED_NOT",
        "text": "Eck.CLOCKED_NOT = 59\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.CONCAT",
        "title": "Eck > Attribute detail > CONCAT",
        "section": "Attribute detail > CONCAT",
        "text": "Eck.CONCAT = 52\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.DIV",
        "title": "Eck > Attribute detail > DIV",
        "section": "Attribute detail > DIV",
        "text": "Eck.DIV = 15\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.EQUAL",
        "title": "Eck > Attribute detail > EQUAL",
        "section": "Attribute detail > EQUAL",
        "text": "Eck.EQUAL = 24\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.FBY",
        "title": "Eck > Attribute detail > FBY",
        "section": "Attribute detail > FBY",
        "text": "Eck.FBY = 30\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.FLATTEN",
        "title": "Eck > Attribute detail > FLATTEN",
        "section": "Attribute detail > FLATTEN",
        "text": "Eck.FLATTEN = 44\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.FOLD",
        "title": "Eck > Attribute detail > FOLD",
        "section": "Attribute detail > FOLD",
        "text": "Eck.FOLD = 36\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.FOLDI",
        "title": "Eck > Attribute detail > FOLDI",
        "section": "Attribute detail > FOLDI",
        "text": "Eck.FOLDI = 39\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.FOLDW",
        "title": "Eck > Attribute detail > FOLDW",
        "section": "Attribute detail > FOLDW",
        "text": "Eck.FOLDW = 55\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.FOLDWI",
        "title": "Eck > Attribute detail > FOLDWI",
        "section": "Attribute detail > FOLDWI",
        "text": "Eck.FOLDWI = 56\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.FOLLOW",
        "title": "Eck > Attribute detail > FOLLOW",
        "section": "Attribute detail > FOLLOW",
        "text": "Eck.FOLLOW = 29\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.GEQUAL",
        "title": "Eck > Attribute detail > GEQUAL",
        "section": "Attribute detail > GEQUAL",
        "text": "Eck.GEQUAL = 23\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.GREAT",
        "title": "Eck > Attribute detail > GREAT",
        "section": "Attribute detail > GREAT",
        "text": "Eck.GREAT = 22\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.IF",
        "title": "Eck > Attribute detail > IF",
        "section": "Attribute detail > IF",
        "text": "Eck.IF = 31\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.INT2REAL",
        "title": "Eck > Attribute detail > INT2REAL",
        "section": "Attribute detail > INT2REAL",
        "text": "Eck.INT2REAL = 12\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.LAND",
        "title": "Eck > Attribute detail > LAND",
        "section": "Attribute detail > LAND",
        "text": "Eck.LAND = 67\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.LEQUAL",
        "title": "Eck > Attribute detail > LEQUAL",
        "section": "Attribute detail > LEQUAL",
        "text": "Eck.LEQUAL = 21\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.LESS",
        "title": "Eck > Attribute detail > LESS",
        "section": "Attribute detail > LESS",
        "text": "Eck.LESS = 20\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.LNOT",
        "title": "Eck > Attribute detail > LNOT",
        "section": "Attribute detail > LNOT",
        "text": "Eck.LNOT = 70\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.LOR",
        "title": "Eck > Attribute detail > LOR",
        "section": "Attribute detail > LOR",
        "text": "Eck.LOR = 68\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.LSL",
        "title": "Eck > Attribute detail > LSL",
        "section": "Attribute detail > LSL",
        "text": "Eck.LSL = 71\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.LSR",
        "title": "Eck > Attribute detail > LSR",
        "section": "Attribute detail > LSR",
        "text": "Eck.LSR = 72\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.LXOR",
        "title": "Eck > Attribute detail > LXOR",
        "section": "Attribute detail > LXOR",
        "text": "Eck.LXOR = 69\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.MAKE",
        "title": "Eck > Attribute detail > MAKE",
        "section": "Attribute detail > MAKE",
        "text": "Eck.MAKE = 43\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.MAP",
        "title": "Eck > Attribute detail > MAP",
        "section": "Attribute detail > MAP",
        "text": "Eck.MAP = 35\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.MAPFOLD",
        "title": "Eck > Attribute detail > MAPFOLD",
        "section": "Attribute detail > MAPFOLD",
        "text": "Eck.MAPFOLD = 37\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.MAPFOLDI",
        "title": "Eck > Attribute detail > MAPFOLDI",
        "section": "Attribute detail > MAPFOLDI",
        "text": "Eck.MAPFOLDI = 64\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.MAPFOLDW",
        "title": "Eck > Attribute detail > MAPFOLDW",
        "section": "Attribute detail > MAPFOLDW",
        "text": "Eck.MAPFOLDW = 65\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.MAPFOLDWI",
        "title": "Eck > Attribute detail > MAPFOLDWI",
        "section": "Attribute detail > MAPFOLDWI",
        "text": "Eck.MAPFOLDWI = 66\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.MAPI",
        "title": "Eck > Attribute detail > MAPI",
        "section": "Attribute detail > MAPI",
        "text": "Eck.MAPI = 38\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.MAPW",
        "title": "Eck > Attribute detail > MAPW",
        "section": "Attribute detail > MAPW",
        "text": "Eck.MAPW = 61\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.MAPWI",
        "title": "Eck > Attribute detail > MAPWI",
        "section": "Attribute detail > MAPWI",
        "text": "Eck.MAPWI = 62\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.MATCH",
        "title": "Eck > Attribute detail > MATCH",
        "section": "Attribute detail > MATCH",
        "text": "Eck.MATCH = 50\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.MERGE",
        "title": "Eck > Attribute detail > MERGE",
        "section": "Attribute detail > MERGE",
        "text": "Eck.MERGE = 45\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.MOD",
        "title": "Eck > Attribute detail > MOD",
        "section": "Attribute detail > MOD",
        "text": "Eck.MOD = 16\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.MUL",
        "title": "Eck > Attribute detail > MUL",
        "section": "Attribute detail > MUL",
        "text": "Eck.MUL = 10\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.NEG",
        "title": "Eck > Attribute detail > NEG",
        "section": "Attribute detail > NEG",
        "text": "Eck.NEG = 9\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.NEQUAL",
        "title": "Eck > Attribute detail > NEQUAL",
        "section": "Attribute detail > NEQUAL",
        "text": "Eck.NEQUAL = 25\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.NONE",
        "title": "Eck > Attribute detail > NONE",
        "section": "Attribute detail > NONE",
        "text": "Eck.NONE = 1\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.NOT",
        "title": "Eck > Attribute detail > NOT",
        "section": "Attribute detail > NOT",
        "text": "Eck.NOT = 5\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.NUMERIC_CAST",
        "title": "Eck > Attribute detail > NUMERIC_CAST",
        "section": "Attribute detail > NUMERIC_CAST",
        "text": "Eck.NUMERIC_CAST = 63\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.OR",
        "title": "Eck > Attribute detail > OR",
        "section": "Attribute detail > OR",
        "text": "Eck.OR = 3\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.PLUS",
        "title": "Eck > Attribute detail > PLUS",
        "section": "Attribute detail > PLUS",
        "text": "Eck.PLUS = 7\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.POS",
        "title": "Eck > Attribute detail > POS",
        "section": "Attribute detail > POS",
        "text": "Eck.POS = 60\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.PRE",
        "title": "Eck > Attribute detail > PRE",
        "section": "Attribute detail > PRE",
        "text": "Eck.PRE = 26\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.PRJ",
        "title": "Eck > Attribute detail > PRJ",
        "section": "Attribute detail > PRJ",
        "text": "Eck.PRJ = 18\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.PRJ_DYN",
        "title": "Eck > Attribute detail > PRJ_DYN",
        "section": "Attribute detail > PRJ_DYN",
        "text": "Eck.PRJ_DYN = 42\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.REAL2INT",
        "title": "Eck > Attribute detail > REAL2INT",
        "section": "Attribute detail > REAL2INT",
        "text": "Eck.REAL2INT = 11\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.RESTART",
        "title": "Eck > Attribute detail > RESTART",
        "section": "Attribute detail > RESTART",
        "text": "Eck.RESTART = 54\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.REVERSE",
        "title": "Eck > Attribute detail > REVERSE",
        "section": "Attribute detail > REVERSE",
        "text": "Eck.REVERSE = 46\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.SCALAR_TO_VECTOR",
        "title": "Eck > Attribute detail > SCALAR_TO_VECTOR",
        "section": "Attribute detail > SCALAR_TO_VECTOR",
        "text": "Eck.SCALAR_TO_VECTOR = 40\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.SEQ_EXPR",
        "title": "Eck > Attribute detail > SEQ_EXPR",
        "section": "Attribute detail > SEQ_EXPR",
        "text": "Eck.SEQ_EXPR = 33\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.SHARP",
        "title": "Eck > Attribute detail > SHARP",
        "section": "Attribute detail > SHARP",
        "text": "Eck.SHARP = 6\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.SLASH",
        "title": "Eck > Attribute detail > SLASH",
        "section": "Attribute detail > SLASH",
        "text": "Eck.SLASH = 14\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.SLICE",
        "title": "Eck > Attribute detail > SLICE",
        "section": "Attribute detail > SLICE",
        "text": "Eck.SLICE = 51\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.SUB",
        "title": "Eck > Attribute detail > SUB",
        "section": "Attribute detail > SUB",
        "text": "Eck.SUB = 8\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.TIMES",
        "title": "Eck > Attribute detail > TIMES",
        "section": "Attribute detail > TIMES",
        "text": "Eck.TIMES = 49\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.TRANSPOSE",
        "title": "Eck > Attribute detail > TRANSPOSE",
        "section": "Attribute detail > TRANSPOSE",
        "text": "Eck.TRANSPOSE = 47\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.WHEN",
        "title": "Eck > Attribute detail > WHEN",
        "section": "Attribute detail > WHEN",
        "text": "Eck.WHEN = 28\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/Eck",
        "href": "api/ansys/scade/apitools/expr/predef/Eck.html#Eck.XOR",
        "title": "Eck > Attribute detail > XOR",
        "section": "Attribute detail > XOR",
        "text": "Eck.XOR = 4\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/CallExpression",
        "href": "api/ansys/scade/apitools/expr/access/CallExpression.html#callexpression",
        "title": "CallExpression",
        "section": "CallExpression",
        "text": "Bases: Expression\nProvides the abstract class for expression calls.\nThere are three kinds of operator calls:\nPredefined operators\nUser operators\nHigher-order operators\nCallExpression\nCallExpression\nExpression"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/CallExpression",
        "href": "api/ansys/scade/apitools/expr/access/CallExpression.html#ansys.scade.apitools.expr.access.CallExpression",
        "title": "CallExpression > CallExpression > CallExpression",
        "section": "CallExpression > CallExpression",
        "text": "class ansys.scade.apitools.expr.access.CallExpression(expression: scade.model.suite.ExprCall)\n\nBases: Expression\n\nProvides the abstract class for expression calls.\n\nThere are three kinds of operator calls:\n\nPredefined operators\n\nUser operators\n\nHigher-order operators"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/CallExpression",
        "href": "api/ansys/scade/apitools/expr/access/CallExpression.html#parameters",
        "title": "CallExpression > Parameters",
        "section": "Parameters",
        "text": "Call expression to wrap.\nInitialize the instance from the Scade expression.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/CallExpression",
        "href": "api/ansys/scade/apitools/expr/access/CallExpression.html#overview",
        "title": "CallExpression > Overview",
        "section": "Overview",
        "text": "code\nCode of the predefined operator call.\nname\nInstance name of the expression.\nOverview\ncode\nname"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/CallExpression",
        "href": "api/ansys/scade/apitools/expr/access/CallExpression.html#import-detail",
        "title": "CallExpression > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/CallExpression",
        "href": "api/ansys/scade/apitools/expr/access/CallExpression.html#property-detail",
        "title": "CallExpression > Property detail",
        "section": "Property detail",
        "text": "Code of the predefined operator call.\nInstance name of the expression.\nProperty detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/CallExpression",
        "href": "api/ansys/scade/apitools/expr/access/CallExpression.html#CallExpression.code",
        "title": "CallExpression > Property detail > code",
        "section": "Property detail > code",
        "text": "property CallExpression.code: ansys.scade.apitools.expr.predef.Eck\n\nCode of the predefined operator call."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/CallExpression",
        "href": "api/ansys/scade/apitools/expr/access/CallExpression.html#CallExpression.name",
        "title": "CallExpression > Property detail > name",
        "section": "Property detail > name",
        "text": "property CallExpression.name: str\n\nInstance name of the expression."
    },
    {
        "objectID": "api/ansys/scade/apitools/info/install/get_scade_home",
        "href": "api/ansys/scade/apitools/info/install/get_scade_home.html#ansysscadeapitoolsinfoinstallget_scade_home",
        "title": "ansys.scade.apitools.info.install.get_scade_home",
        "section": "ansys.scade.apitools.info.install.get_scade_home",
        "text": "Get the SCADE installation directory.\nFor example, C:/Program Files/ANSYS Inc/v232/SCADE.\nansys.scade.apitools.info.install.get_scade_home\nC:/Program Files/ANSYS Inc/v232/SCADE"
    },
    {
        "objectID": "api/ansys/scade/apitools/info/install/get_scade_home",
        "href": "api/ansys/scade/apitools/info/install/get_scade_home.html#ansys.scade.apitools.info.install.get_scade_home",
        "title": "ansys.scade.apitools.info.install.get_scade_home > ansys.scade.apitools.info.install.get_scade_home > get_scade_home",
        "section": "ansys.scade.apitools.info.install.get_scade_home > get_scade_home",
        "text": "ansys.scade.apitools.info.install.get_scade_home() -> pathlib.Path\n\nGet the SCADE installation directory.\n\nFor example, C:/Program Files/ANSYS Inc/v232/SCADE."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_data_def_text_diagram",
        "href": "api/ansys/scade/apitools/create/data_def/add_data_def_text_diagram.html#ansysscadeapitoolscreatedata_defadd_data_def_text_diagram",
        "title": "ansys.scade.apitools.create.data_def.add_data_def_text_diagram",
        "section": "ansys.scade.apitools.create.data_def.add_data_def_text_diagram",
        "text": "Add a textal diagram to a scope.\nansys.scade.apitools.create.data_def.add_data_def_text_diagram"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_data_def_text_diagram",
        "href": "api/ansys/scade/apitools/create/data_def/add_data_def_text_diagram.html#ansys.scade.apitools.create.data_def.add_data_def_text_diagram",
        "title": "ansys.scade.apitools.create.data_def.add_data_def_text_diagram > ansys.scade.apitools.create.data_def.add_data_def_text_diagram > add_data_def_text_diagram",
        "section": "ansys.scade.apitools.create.data_def.add_data_def_text_diagram > add_data_def_text_diagram",
        "text": "ansys.scade.apitools.create.data_def.add_data_def_text_diagram(data_def: scade.model.suite.DataDef, name: str) -> scade.model.suite.TextDiagram\n\nAdd a textal diagram to a scope."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_data_def_text_diagram",
        "href": "api/ansys/scade/apitools/create/data_def/add_data_def_text_diagram.html#parameters",
        "title": "ansys.scade.apitools.create.data_def.add_data_def_text_diagram > Parameters",
        "section": "Parameters",
        "text": "Input scope, which is an operator, state, or action.\nName of the diagram.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_data_def_text_diagram",
        "href": "api/ansys/scade/apitools/create/data_def/add_data_def_text_diagram.html#returns",
        "title": "ansys.scade.apitools.create.data_def.add_data_def_text_diagram > Returns",
        "section": "Returns",
        "text": "suite.TextDiagram\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/index",
        "href": "api/ansys/scade/apitools/create/expression/index.html#the-expressionpy-module",
        "title": "The expression.py module",
        "section": "The expression.py module",
        "text": "The expression.py module\nexpression.py"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/index",
        "href": "api/ansys/scade/apitools/create/expression/index.html#summary",
        "title": "The expression.py module > Summary",
        "section": "Summary",
        "text": "ExpressionTree\nProvides the top-level abstract class for expression trees.\nEmptyTreeError\nProvides the exception for empty expression trees.\nExprSyntaxError\nProvides the generic exception for syntax errors in expression trees.\nTypeIdentifierError\nProvides the exception for incorrect identifiers.\ncreate_activate\nReturn the expression tree for the higher-order construct for activating with initial values.\ncreate_activate_no_init\nReturn the expression tree for the higher-order construct for activating with default values.\ncreate_binary\nReturn the expression tree for a binary operator.\ncreate_call\nReturn the expression tree for a call to an operator.\ncreate_case\nReturn the expression tree for the case operator.\ncreate_change_ith\nReturn the expression tree for the with operator.\ncreate_concat\nReturn the expression tree for the concat operator.\ncreate_data_array\nReturn the expression tree for the data array operator.\ncreate_data_struct\nReturn the expression tree for the data strictire operator.\ncreate_fby\nReturn the expression tree for the init operator.\ncreate_flatten\nReturn the expression tree for flattening a structured value.\ncreate_fold\nReturn the expression tree for the higher-order construct for fold creation.\ncreate_foldi\nReturn the expression tree for the higher-order construct for foldi creation.\ncreate_foldw\nReturn the expression tree for the higher-order construct for foldw creation.\ncreate_foldwi\nReturn the expression tree for the higher-order construct for foldwi creation.\ncreate_higher_order_call\nReturn the expression tree for a call to an operator.\ncreate_if\nReturn the expression tree for the if-then-else operator.\ncreate_init\nReturn the expression tree for the init operator.\ncreate_make\nReturn the expression tree for making a structured value.\ncreate_map\nReturn the expression tree for the higher-order construct for map creation.\ncreate_mapfold\nReturn the expression tree for the higher-order construct for mapfold creation.\ncreate_mapfoldi\nReturn the expression tree for the higher-order construct for mapfoldi creation.\ncreate_mapfoldw\nReturn the expression tree for the higher-order construct for mapfoldw creation.\ncreate_mapfoldwi\nReturn the expression tree for the higher-order construct for mapfoldwi creation.\ncreate_mapi\nReturn the expression tree for the higher-order construct for mapi creation.\ncreate_mapw\nReturn the expression tree for the higher-order construct for mapw creation.\ncreate_mapwi\nReturn the expression tree for the higher-order construct for mapdwi creation.\ncreate_nary\nReturn the expression tree for a nary operator.\ncreate_numeric_cast\nReturn the expression tree for casting a numerical value.\ncreate_pre\nReturn the expression tree for the pre operator.\ncreate_prj\nReturn the expression tree for the projection operator.\ncreate_prj_dyn\nReturn the expression tree for the dynamic projection operator.\ncreate_restart\nReturn the expression tree for the higher-order construct for restarting.\ncreate_reverse\nReturn the expression tree for the reverse operator.\ncreate_scalar_to_vector\nReturn the expression tree for the scalar-to-vector operator.\ncreate_slice\nReturn the expression tree for the slice operator.\ncreate_times\nReturn the expression tree for the times operator.\ncreate_transpose\nReturn the expression tree for the transpose operator.\ncreate_unary\nReturn the expression tree for a unary operator.\nET\nShort name for an ExpressionTree instance to simplify the declarations.\nEX\nExtended expression tree to simplify use of the create functions.\nLX\nExtended sequence of expression trees to simplify the use of create functions.\nSummary\nExpressionTree\nEmptyTreeError\nExprSyntaxError\nTypeIdentifierError\ncreate_activate\ncreate_activate_no_init\ncreate_binary\ncreate_call\ncreate_case\ncreate_change_ith\ncreate_concat\ncreate_data_array\ncreate_data_struct\ncreate_fby\ncreate_flatten\ncreate_fold\ncreate_foldi\ncreate_foldw\ncreate_foldwi\ncreate_higher_order_call\ncreate_if\ncreate_init\ncreate_make\ncreate_map\ncreate_mapfold\ncreate_mapfoldi\ncreate_mapfoldw\ncreate_mapfoldwi\ncreate_mapi\ncreate_mapw\ncreate_mapwi\ncreate_nary\ncreate_numeric_cast\ncreate_pre\ncreate_prj\ncreate_prj_dyn\ncreate_restart\ncreate_reverse\ncreate_scalar_to_vector\ncreate_slice\ncreate_times\ncreate_transpose\ncreate_unary\nET\nExpressionTree\nEX\nLX"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/index",
        "href": "api/ansys/scade/apitools/create/expression/index.html#description",
        "title": "The expression.py module > Description",
        "section": "Description",
        "text": "Provides helpers for creating expression trees.\nExpression trees are intermediate structures to declare any arbitrary complex\nexpressions. They create the corresponding SCADE Suite expressions in the\ncontext of a model element, such as the right part of an equation or the\ndefault value of an output.\nThis module provides functions to create an expression tree for any expression\nof the Scade language, including higher-order constructs. Thus, the intermediate\nstructures or classes defining the expression trees can be opaque.\nNotes: The typing is relaxed in this module to ease the constructs.\nET is an alias for ExpressionTree to shorten the declarations.\nEX, which stands for extended expression tree, is defined as follows:\nThis enhances the usability of these functions by accepting some values,\nsuch as Python literals, string values, or SCADE Python objects, as valid\nexpression trees.\nLX, which stands for extended lists of expression trees, is defined as follows:\nWhen the expressions accept an arbitrary number of input flows, such as\nif-then-else or fby, you can provide either one expression tree or a list\nof expression trees.\nDescription\nET\nExpressionTree\nEX\nLX"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/index",
        "href": "api/ansys/scade/apitools/create/expression/index.html#module-detail",
        "title": "The expression.py module > Module detail",
        "section": "Module detail",
        "text": "Short name for an ExpressionTree instance to simplify the declarations.\nExtended expression tree to simplify use of the create functions.\nExtended sequence of expression trees to simplify the use of create functions.\nModule detail\nExpressionTree"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/index",
        "href": "api/ansys/scade/apitools/create/expression/index.html#expression.ET",
        "title": "The expression.py module > Module detail > ET",
        "section": "Module detail > ET",
        "text": "expression.ET\n\nShort name for an ExpressionTree instance to simplify the declarations."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/index",
        "href": "api/ansys/scade/apitools/create/expression/index.html#expression.EX",
        "title": "The expression.py module > Module detail > EX",
        "section": "Module detail > EX",
        "text": "expression.EX\n\nExtended expression tree to simplify use of the create functions."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/index",
        "href": "api/ansys/scade/apitools/create/expression/index.html#expression.LX",
        "title": "The expression.py module > Module detail > LX",
        "section": "Module detail > LX",
        "text": "expression.LX\n\nExtended sequence of expression trees to simplify the use of create functions."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/TypeIdentifierError",
        "href": "api/ansys/scade/apitools/create/expression/TypeIdentifierError.html#typeidentifiererror",
        "title": "TypeIdentifierError",
        "section": "TypeIdentifierError",
        "text": "Bases: Exception\nProvides the exception for incorrect identifiers.\nProvide a customized message.\nTypeIdentifierError\nTypeIdentifierError\nException"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/TypeIdentifierError",
        "href": "api/ansys/scade/apitools/create/expression/TypeIdentifierError.html#ansys.scade.apitools.create.expression.TypeIdentifierError",
        "title": "TypeIdentifierError > TypeIdentifierError > TypeIdentifierError",
        "section": "TypeIdentifierError > TypeIdentifierError",
        "text": "exception ansys.scade.apitools.create.expression.TypeIdentifierError(context, item)\n\nBases: Exception\n\nProvides the exception for incorrect identifiers.\n\nProvide a customized message."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/TypeIdentifierError",
        "href": "api/ansys/scade/apitools/create/expression/TypeIdentifierError.html#import-detail",
        "title": "TypeIdentifierError > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/scade/add_imported_to_project",
        "href": "api/ansys/scade/apitools/create/scade/add_imported_to_project.html#ansysscadeapitoolscreatescadeadd_imported_to_project",
        "title": "ansys.scade.apitools.create.scade.add_imported_to_project",
        "section": "ansys.scade.apitools.create.scade.add_imported_to_project",
        "text": "Add an imported source file, associated with the SCADE imported element, to the project.\nThe file is added if and only if it is not already present.\nIf the file is present, the folder and default parameters are ignored.\nWhen the folder parameter is not None, the file is added to the\nfolder specified.\nWhen the default parameter is True, the file is added to either the\n“External Code” or “External Type Definitions” folder, depending on the nature\nof the element.\nOtherwise, the file is added to the project as a root element.\nansys.scade.apitools.create.scade.add_imported_to_project\nfolder\ndefault\nfolder\nNone\ndefault\nTrue"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/scade/add_imported_to_project",
        "href": "api/ansys/scade/apitools/create/scade/add_imported_to_project.html#ansys.scade.apitools.create.scade.add_imported_to_project",
        "title": "ansys.scade.apitools.create.scade.add_imported_to_project > ansys.scade.apitools.create.scade.add_imported_to_project > add_imported_to_project",
        "section": "ansys.scade.apitools.create.scade.add_imported_to_project > add_imported_to_project",
        "text": "ansys.scade.apitools.create.scade.add_imported_to_project(project: scade.model.project.stdproject.Project, element: scade.model.suite.NamedType | scade.model.suite.Operator, path: str, folder: scade.model.project.stdproject.Folder | None = None, default: bool = True) -> scade.model.project.stdproject.FileRef\n\nAdd an imported source file, associated with the SCADE imported element, to the project.\n\nThe file is added if and only if it is not already present.\nIf the file is present, the folder and default parameters are ignored.\n\nWhen the folder parameter is not None, the file is added to the\nfolder specified.\n\nWhen the default parameter is True, the file is added to either the\n“External Code” or “External Type Definitions” folder, depending on the nature\nof the element.\n\nOtherwise, the file is added to the project as a root element."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/scade/add_imported_to_project",
        "href": "api/ansys/scade/apitools/create/scade/add_imported_to_project.html#parameters",
        "title": "ansys.scade.apitools.create.scade.add_imported_to_project > Parameters",
        "section": "Parameters",
        "text": "Project to modify.\nImported element.\nPath of the file to add to the project.\nParent folder of the file to add to the project, default: None.\nWhether to add the file is added to the default folder\nfor SCADE Simulation files, according to the element.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/scade/add_imported_to_project",
        "href": "api/ansys/scade/apitools/create/scade/add_imported_to_project.html#returns",
        "title": "ansys.scade.apitools.create.scade.add_imported_to_project > Returns",
        "section": "Returns",
        "text": "std.FileRef\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/scade/Sfk",
        "href": "api/ansys/scade/apitools/create/scade/Sfk.html#sfk",
        "title": "Sfk",
        "section": "Sfk",
        "text": "Bases: enum.Enum\nProvides kinds of simulation files.\nSfk\nSfk\nenum.Enum"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/scade/Sfk",
        "href": "api/ansys/scade/apitools/create/scade/Sfk.html#ansys.scade.apitools.create.scade.Sfk",
        "title": "Sfk > Sfk > Sfk",
        "section": "Sfk > Sfk",
        "text": "class ansys.scade.apitools.create.scade.Sfk\n\nBases: enum.Enum\n\nProvides kinds of simulation files."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/scade/Sfk",
        "href": "api/ansys/scade/apitools/create/scade/Sfk.html#overview",
        "title": "Sfk > Overview",
        "section": "Overview",
        "text": "ADA\nC\nMACRO\nOBJECT\nTYPE\nOverview\nADA\nC\nMACRO\nOBJECT\nTYPE"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/scade/Sfk",
        "href": "api/ansys/scade/apitools/create/scade/Sfk.html#import-detail",
        "title": "Sfk > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/scade/Sfk",
        "href": "api/ansys/scade/apitools/create/scade/Sfk.html#attribute-detail",
        "title": "Sfk > Attribute detail",
        "section": "Attribute detail",
        "text": "Attribute detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/scade/Sfk",
        "href": "api/ansys/scade/apitools/create/scade/Sfk.html#Sfk.ADA",
        "title": "Sfk > Attribute detail > ADA",
        "section": "Attribute detail > ADA",
        "text": "Sfk.ADA = 5\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/scade/Sfk",
        "href": "api/ansys/scade/apitools/create/scade/Sfk.html#Sfk.C",
        "title": "Sfk > Attribute detail > C",
        "section": "Attribute detail > C",
        "text": "Sfk.C = 1\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/scade/Sfk",
        "href": "api/ansys/scade/apitools/create/scade/Sfk.html#Sfk.MACRO",
        "title": "Sfk > Attribute detail > MACRO",
        "section": "Attribute detail > MACRO",
        "text": "Sfk.MACRO = 3\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/scade/Sfk",
        "href": "api/ansys/scade/apitools/create/scade/Sfk.html#Sfk.OBJECT",
        "title": "Sfk > Attribute detail > OBJECT",
        "section": "Attribute detail > OBJECT",
        "text": "Sfk.OBJECT = 2\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/scade/Sfk",
        "href": "api/ansys/scade/apitools/create/scade/Sfk.html#Sfk.TYPE",
        "title": "Sfk > Attribute detail > TYPE",
        "section": "Attribute detail > TYPE",
        "text": "Sfk.TYPE = 4\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_times",
        "href": "api/ansys/scade/apitools/create/expression/create_times.html#ansysscadeapitoolscreateexpressioncreate_times",
        "title": "ansys.scade.apitools.create.expression.create_times",
        "section": "ansys.scade.apitools.create.expression.create_times",
        "text": "Return the expression tree for the times operator.\nansys.scade.apitools.create.expression.create_times"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_times",
        "href": "api/ansys/scade/apitools/create/expression/create_times.html#ansys.scade.apitools.create.expression.create_times",
        "title": "ansys.scade.apitools.create.expression.create_times > ansys.scade.apitools.create.expression.create_times > create_times",
        "section": "ansys.scade.apitools.create.expression.create_times > create_times",
        "text": "ansys.scade.apitools.create.expression.create_times(number: EX, flow: EX) -> ET\n\nReturn the expression tree for the times operator."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_times",
        "href": "api/ansys/scade/apitools/create/expression/create_times.html#parameters",
        "title": "ansys.scade.apitools.create.expression.create_times > Parameters",
        "section": "Parameters",
        "text": "Number of cycles.\nInput flow.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_times",
        "href": "api/ansys/scade/apitools/create/expression/create_times.html#returns",
        "title": "ansys.scade.apitools.create.expression.create_times > Returns",
        "section": "Returns",
        "text": "ET\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/query/type/is_imported",
        "href": "api/ansys/scade/apitools/query/type/is_imported.html#ansysscadeapitoolsquerytypeis_imported",
        "title": "ansys.scade.apitools.query.type.is_imported",
        "section": "ansys.scade.apitools.query.type.is_imported",
        "text": "Determine if the input type is imported.\nSee the is_imported example.\nansys.scade.apitools.query.type.is_imported"
    },
    {
        "objectID": "api/ansys/scade/apitools/query/type/is_imported",
        "href": "api/ansys/scade/apitools/query/type/is_imported.html#ansys.scade.apitools.query.type.is_imported",
        "title": "ansys.scade.apitools.query.type.is_imported > ansys.scade.apitools.query.type.is_imported > is_imported",
        "section": "ansys.scade.apitools.query.type.is_imported > is_imported",
        "text": "ansys.scade.apitools.query.type.is_imported(type_: scade.model.suite.Type) -> bool\n\nDetermine if the input type is imported.\n\nSee the is_imported example."
    },
    {
        "objectID": "api/ansys/scade/apitools/query/type/is_imported",
        "href": "api/ansys/scade/apitools/query/type/is_imported.html#parameters",
        "title": "ansys.scade.apitools.query.type.is_imported > Parameters",
        "section": "Parameters",
        "text": "Input type.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/query/type/is_imported",
        "href": "api/ansys/scade/apitools/query/type/is_imported.html#returns",
        "title": "ansys.scade.apitools.query.type.is_imported > Returns",
        "section": "Returns",
        "text": "True when the input type is imported, False otherwise.\nReturns\nTrue\nFalse"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/create_when_branch",
        "href": "api/ansys/scade/apitools/create/data_def/create_when_branch.html#ansysscadeapitoolscreatedata_defcreate_when_branch",
        "title": "ansys.scade.apitools.create.data_def.create_when_branch",
        "section": "ansys.scade.apitools.create.data_def.create_when_branch",
        "text": "Create an intermediate structure for a when branch.\nThe graphical properties are expressed 1/100th of mm.\nThey are considered if and only if the owning when block\nhas a graphical representation.\nansys.scade.apitools.create.data_def.create_when_branch"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/create_when_branch",
        "href": "api/ansys/scade/apitools/create/data_def/create_when_branch.html#ansys.scade.apitools.create.data_def.create_when_branch",
        "title": "ansys.scade.apitools.create.data_def.create_when_branch > ansys.scade.apitools.create.data_def.create_when_branch > create_when_branch",
        "section": "ansys.scade.apitools.create.data_def.create_when_branch > create_when_branch",
        "text": "ansys.scade.apitools.create.data_def.create_when_branch(pattern: ansys.scade.apitools.create.expression.EX, position: Tuple[float, float] = (0, 0), size: Tuple[float, float] = (0, 0), display: DK = DK.GRAPHICAL, label_width: int = 0) -> WhenBranch\n\nCreate an intermediate structure for a when branch.\n\nThe graphical properties are expressed 1/100th of mm.\n\nThey are considered if and only if the owning when block\nhas a graphical representation."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/create_when_branch",
        "href": "api/ansys/scade/apitools/create/data_def/create_when_branch.html#parameters",
        "title": "ansys.scade.apitools.create.data_def.create_when_branch > Parameters",
        "section": "Parameters",
        "text": "Value of the branch.\nPosition of the action.\nSize of the action.\nLayout of the action.\nOptional width of the label containing the pattern.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/create_when_branch",
        "href": "api/ansys/scade/apitools/create/data_def/create_when_branch.html#returns",
        "title": "ansys.scade.apitools.create.data_def.create_when_branch > Returns",
        "section": "Returns",
        "text": "WhenBranch\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_make",
        "href": "api/ansys/scade/apitools/create/expression/create_make.html#ansysscadeapitoolscreateexpressioncreate_make",
        "title": "ansys.scade.apitools.create.expression.create_make",
        "section": "ansys.scade.apitools.create.expression.create_make",
        "text": "Return the expression tree for making a structured value.\nansys.scade.apitools.create.expression.create_make"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_make",
        "href": "api/ansys/scade/apitools/create/expression/create_make.html#ansys.scade.apitools.create.expression.create_make",
        "title": "ansys.scade.apitools.create.expression.create_make > ansys.scade.apitools.create.expression.create_make > create_make",
        "section": "ansys.scade.apitools.create.expression.create_make > create_make",
        "text": "ansys.scade.apitools.create.expression.create_make(type_: scade.model.suite.NamedType, *args: EX, modifiers: ET | List[ET] | None = None) -> ET\n\nReturn the expression tree for making a structured value."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_make",
        "href": "api/ansys/scade/apitools/create/expression/create_make.html#parameters",
        "title": "ansys.scade.apitools.create.expression.create_make > Parameters",
        "section": "Parameters",
        "text": "Type to instantiate.\nValues of the type instance.\nList of higher-order constructs, which is provided as a keyword parameter.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_make",
        "href": "api/ansys/scade/apitools/create/expression/create_make.html#returns",
        "title": "ansys.scade.apitools.create.expression.create_make > Returns",
        "section": "Returns",
        "text": "ET\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/TransitionDestination",
        "href": "api/ansys/scade/apitools/create/data_def/TransitionDestination.html#transitiondestination",
        "title": "TransitionDestination",
        "section": "TransitionDestination",
        "text": "Provides the top-level abstract class for transition destinations.\nTransitionDestination\nTransitionDestination"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/TransitionDestination",
        "href": "api/ansys/scade/apitools/create/data_def/TransitionDestination.html#ansys.scade.apitools.create.data_def.TransitionDestination",
        "title": "TransitionDestination > TransitionDestination > TransitionDestination",
        "section": "TransitionDestination > TransitionDestination",
        "text": "class ansys.scade.apitools.create.data_def.TransitionDestination\n\nProvides the top-level abstract class for transition destinations."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/TransitionDestination",
        "href": "api/ansys/scade/apitools/create/data_def/TransitionDestination.html#import-detail",
        "title": "TransitionDestination > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/add_operator_parameters",
        "href": "api/ansys/scade/apitools/create/declaration/add_operator_parameters.html#ansysscadeapitoolscreatedeclarationadd_operator_parameters",
        "title": "ansys.scade.apitools.create.declaration.add_operator_parameters",
        "section": "ansys.scade.apitools.create.declaration.add_operator_parameters",
        "text": "Add parameters to an operator.\nansys.scade.apitools.create.declaration.add_operator_parameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/add_operator_parameters",
        "href": "api/ansys/scade/apitools/create/declaration/add_operator_parameters.html#ansys.scade.apitools.create.declaration.add_operator_parameters",
        "title": "ansys.scade.apitools.create.declaration.add_operator_parameters > ansys.scade.apitools.create.declaration.add_operator_parameters > add_operator_parameters",
        "section": "ansys.scade.apitools.create.declaration.add_operator_parameters > add_operator_parameters",
        "text": "ansys.scade.apitools.create.declaration.add_operator_parameters(operator: scade.model.suite.Operator, parameters: List[str], insert_before: scade.model.suite.Constant | None = None) -> List[scade.model.suite.Constant]\n\nAdd parameters to an operator."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/add_operator_parameters",
        "href": "api/ansys/scade/apitools/create/declaration/add_operator_parameters.html#parameters",
        "title": "ansys.scade.apitools.create.declaration.add_operator_parameters > Parameters",
        "section": "Parameters",
        "text": "Input operator.\nName of the parameters to create.\nInsertion point of the parameter. When this parameter is not None, it is\nan existing parameter of the operator. The parameters are inserted before\nthis parameter. Otherwise, the parameters are added at the end.\nParameters\nNone"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/add_operator_parameters",
        "href": "api/ansys/scade/apitools/create/declaration/add_operator_parameters.html#returns",
        "title": "ansys.scade.apitools.create.declaration.add_operator_parameters > Returns",
        "section": "Returns",
        "text": "List of added parameters.\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/create_sensor",
        "href": "api/ansys/scade/apitools/create/declaration/create_sensor.html#ansysscadeapitoolscreatedeclarationcreate_sensor",
        "title": "ansys.scade.apitools.create.declaration.create_sensor",
        "section": "ansys.scade.apitools.create.declaration.create_sensor",
        "text": "Create a sensor.\nThe sensor has a name and a type.\nansys.scade.apitools.create.declaration.create_sensor"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/create_sensor",
        "href": "api/ansys/scade/apitools/create/declaration/create_sensor.html#ansys.scade.apitools.create.declaration.create_sensor",
        "title": "ansys.scade.apitools.create.declaration.create_sensor > ansys.scade.apitools.create.declaration.create_sensor > create_sensor",
        "section": "ansys.scade.apitools.create.declaration.create_sensor > create_sensor",
        "text": "ansys.scade.apitools.create.declaration.create_sensor(owner: scade.model.suite.Package, name: str, type_: ansys.scade.apitools.create.type.TX, path: pathlib.Path | None = None) -> scade.model.suite.Sensor\n\nCreate a sensor.\n\nThe sensor has a name and a type."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/create_sensor",
        "href": "api/ansys/scade/apitools/create/declaration/create_sensor.html#parameters",
        "title": "ansys.scade.apitools.create.declaration.create_sensor > Parameters",
        "section": "Parameters",
        "text": "Owner of the sensor, which is either the model itself or a package.\nName of the sensor.\nDefinition of the type expressed as a type tree.\nPath of the file for storing the constant. This parameter is ignored if the\nowner is a package. When the path is None and owner is the model, the\nconstant is stored in the model’s default file.\nParameters\nNone"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/create_sensor",
        "href": "api/ansys/scade/apitools/create/declaration/create_sensor.html#returns",
        "title": "ansys.scade.apitools.create.declaration.create_sensor > Returns",
        "section": "Returns",
        "text": "suite.Sensor\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/BinaryOp",
        "href": "api/ansys/scade/apitools/expr/access/BinaryOp.html#binaryop",
        "title": "BinaryOp",
        "section": "BinaryOp",
        "text": "Bases: NAryOp\nProvides an expression with two operands.\nThe format is <operand> <operator> <operand>, where <operator> is one of these:\n-, /, mod\n<, <=, >, >=, =, <>\nlxor, lsl, lsr\ntimes\nSee the binary_op example.\nBinaryOp\nBinaryOp\nNAryOp\n<operand> <operator> <operand>\n<operator>\n-\n/\nmod\n<\n<=\n>\n>=\n=\n<>\nlxor\nlsl\nlsr\ntimes"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/BinaryOp",
        "href": "api/ansys/scade/apitools/expr/access/BinaryOp.html#ansys.scade.apitools.expr.access.BinaryOp",
        "title": "BinaryOp > BinaryOp > BinaryOp",
        "section": "BinaryOp > BinaryOp",
        "text": "class ansys.scade.apitools.expr.access.BinaryOp(expression: scade.model.suite.ExprCall)\n\nBases: NAryOp\n\nProvides an expression with two operands.\n\nThe format is <operand> <operator> <operand>, where <operator> is one of these:\n\n-, /, mod\n\n<, <=, >, >=, =, <>\n\nlxor, lsl, lsr\n\ntimes\n\nSee the binary_op example."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/BinaryOp",
        "href": "api/ansys/scade/apitools/expr/access/BinaryOp.html#parameters",
        "title": "BinaryOp > Parameters",
        "section": "Parameters",
        "text": "Call expression to wrap.\nInitialize the instance from the Scade expression.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/BinaryOp",
        "href": "api/ansys/scade/apitools/expr/access/BinaryOp.html#import-detail",
        "title": "BinaryOp > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/create_textual_operator",
        "href": "api/ansys/scade/apitools/create/declaration/create_textual_operator.html#ansysscadeapitoolscreatedeclarationcreate_textual_operator",
        "title": "ansys.scade.apitools.create.declaration.create_textual_operator",
        "section": "ansys.scade.apitools.create.declaration.create_textual_operator",
        "text": "Create an operator with a textual diagram.\nThe operator has a name.\nansys.scade.apitools.create.declaration.create_textual_operator"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/create_textual_operator",
        "href": "api/ansys/scade/apitools/create/declaration/create_textual_operator.html#ansys.scade.apitools.create.declaration.create_textual_operator",
        "title": "ansys.scade.apitools.create.declaration.create_textual_operator > ansys.scade.apitools.create.declaration.create_textual_operator > create_textual_operator",
        "section": "ansys.scade.apitools.create.declaration.create_textual_operator > create_textual_operator",
        "text": "ansys.scade.apitools.create.declaration.create_textual_operator(owner: scade.model.suite.Package, name: str, path: pathlib.Path | None, visibility: VK = VK.PUBLIC, symbol_file: pathlib.Path | None = None, state: bool = False) -> scade.model.suite.Operator\n\nCreate an operator with a textual diagram.\n\nThe operator has a name."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/create_textual_operator",
        "href": "api/ansys/scade/apitools/create/declaration/create_textual_operator.html#parameters",
        "title": "ansys.scade.apitools.create.declaration.create_textual_operator > Parameters",
        "section": "Parameters",
        "text": "Owner of the operator, which is either the model itself or a package.\nName of the operator.\nPath of the file for storing the operator. This parameter is optional if\nthe package’s owner is a package. When the path is None and owner is\nthe model, the operator is stored in the model’s default file.\nAccessibility of the operator.\nPath of the file defining the symbol of the operator.\nWhether the operator is a node.\nParameters\nNone"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/create_textual_operator",
        "href": "api/ansys/scade/apitools/create/declaration/create_textual_operator.html#returns",
        "title": "ansys.scade.apitools.create.declaration.create_textual_operator > Returns",
        "section": "Returns",
        "text": "suite.Operator\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/set_specialized_operator",
        "href": "api/ansys/scade/apitools/create/declaration/set_specialized_operator.html#ansysscadeapitoolscreatedeclarationset_specialized_operator",
        "title": "ansys.scade.apitools.create.declaration.set_specialized_operator",
        "section": "ansys.scade.apitools.create.declaration.set_specialized_operator",
        "text": "Declare a specialization of an imported operator.\nansys.scade.apitools.create.declaration.set_specialized_operator"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/set_specialized_operator",
        "href": "api/ansys/scade/apitools/create/declaration/set_specialized_operator.html#ansys.scade.apitools.create.declaration.set_specialized_operator",
        "title": "ansys.scade.apitools.create.declaration.set_specialized_operator > ansys.scade.apitools.create.declaration.set_specialized_operator > set_specialized_operator",
        "section": "ansys.scade.apitools.create.declaration.set_specialized_operator > set_specialized_operator",
        "text": "ansys.scade.apitools.create.declaration.set_specialized_operator(operator: scade.model.suite.Operator, imported: scade.model.suite.Operator)\n\nDeclare a specialization of an imported operator."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/set_specialized_operator",
        "href": "api/ansys/scade/apitools/create/declaration/set_specialized_operator.html#parameters",
        "title": "ansys.scade.apitools.create.declaration.set_specialized_operator > Parameters",
        "section": "Parameters",
        "text": "Specializing operator.\nSpecialized imported operator.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/CondactOp",
        "href": "api/ansys/scade/apitools/expr/access/CondactOp.html#condactop",
        "title": "CondactOp",
        "section": "CondactOp",
        "text": "Bases: ConditionalOp\nProvides the abstract class for activate operators.\nCondactOp\nCondactOp\nConditionalOp"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/CondactOp",
        "href": "api/ansys/scade/apitools/expr/access/CondactOp.html#ansys.scade.apitools.expr.access.CondactOp",
        "title": "CondactOp > CondactOp > CondactOp",
        "section": "CondactOp > CondactOp",
        "text": "class ansys.scade.apitools.expr.access.CondactOp(expression: scade.model.suite.ExprCall, operator: CallExpression)\n\nBases: ConditionalOp\n\nProvides the abstract class for activate operators."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/CondactOp",
        "href": "api/ansys/scade/apitools/expr/access/CondactOp.html#notes",
        "title": "CondactOp > Notes",
        "section": "Notes",
        "text": "The design differs slightly from the meta-model. Because the flow\ndefault must be a group of flows, the CondactOp class exposes directly\nthe list of default values instead of an instance of the ListExpression class.\nNotes\ndefault\nCondactOp\nListExpression"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/CondactOp",
        "href": "api/ansys/scade/apitools/expr/access/CondactOp.html#parameters",
        "title": "CondactOp > Parameters",
        "section": "Parameters",
        "text": "Higher-order expression to wrap.\nOperator call expression.\nInitialize the instance from the Scade expression.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/CondactOp",
        "href": "api/ansys/scade/apitools/expr/access/CondactOp.html#overview",
        "title": "CondactOp > Overview",
        "section": "Overview",
        "text": "defaults\nInitialization or default values.\nOverview\ndefaults"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/CondactOp",
        "href": "api/ansys/scade/apitools/expr/access/CondactOp.html#import-detail",
        "title": "CondactOp > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/CondactOp",
        "href": "api/ansys/scade/apitools/expr/access/CondactOp.html#property-detail",
        "title": "CondactOp > Property detail",
        "section": "Property detail",
        "text": "Initialization or default values.\nProperty detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/CondactOp",
        "href": "api/ansys/scade/apitools/expr/access/CondactOp.html#CondactOp.defaults",
        "title": "CondactOp > Property detail > defaults",
        "section": "Property detail > defaults",
        "text": "property CondactOp.defaults: list[Expression]\n\nInitialization or default values."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_foldi",
        "href": "api/ansys/scade/apitools/create/expression/create_foldi.html#ansysscadeapitoolscreateexpressioncreate_foldi",
        "title": "ansys.scade.apitools.create.expression.create_foldi",
        "section": "ansys.scade.apitools.create.expression.create_foldi",
        "text": "Return the expression tree for the higher-order construct for foldi creation.\nansys.scade.apitools.create.expression.create_foldi"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_foldi",
        "href": "api/ansys/scade/apitools/create/expression/create_foldi.html#ansys.scade.apitools.create.expression.create_foldi",
        "title": "ansys.scade.apitools.create.expression.create_foldi > ansys.scade.apitools.create.expression.create_foldi > create_foldi",
        "section": "ansys.scade.apitools.create.expression.create_foldi > create_foldi",
        "text": "ansys.scade.apitools.create.expression.create_foldi(size: EX) -> ET\n\nReturn the expression tree for the higher-order construct for foldi creation."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_foldi",
        "href": "api/ansys/scade/apitools/create/expression/create_foldi.html#parameters",
        "title": "ansys.scade.apitools.create.expression.create_foldi > Parameters",
        "section": "Parameters",
        "text": "Number of iterations.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_foldi",
        "href": "api/ansys/scade/apitools/create/expression/create_foldi.html#returns",
        "title": "ansys.scade.apitools.create.expression.create_foldi > Returns",
        "section": "Returns",
        "text": "ET\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ActivateOp",
        "href": "api/ansys/scade/apitools/expr/access/ActivateOp.html#activateop",
        "title": "ActivateOp",
        "section": "ActivateOp",
        "text": "Bases: CondactOp\nActivation of an operator with initial values.\nSee the activate_op example.\nActivateOp\nActivateOp\nCondactOp"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ActivateOp",
        "href": "api/ansys/scade/apitools/expr/access/ActivateOp.html#ansys.scade.apitools.expr.access.ActivateOp",
        "title": "ActivateOp > ActivateOp > ActivateOp",
        "section": "ActivateOp > ActivateOp",
        "text": "class ansys.scade.apitools.expr.access.ActivateOp(expression: scade.model.suite.ExprCall, operator: CallExpression)\n\nBases: CondactOp\n\nActivation of an operator with initial values.\n\nSee the activate_op example."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ActivateOp",
        "href": "api/ansys/scade/apitools/expr/access/ActivateOp.html#parameters",
        "title": "ActivateOp > Parameters",
        "section": "Parameters",
        "text": "Higher-order expression to wrap.\nOperator call expression.\nInitialize the instance from the Scade expression.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ActivateOp",
        "href": "api/ansys/scade/apitools/expr/access/ActivateOp.html#import-detail",
        "title": "ActivateOp > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ProjectionOp",
        "href": "api/ansys/scade/apitools/expr/access/ProjectionOp.html#projectionop",
        "title": "ProjectionOp",
        "section": "ProjectionOp",
        "text": "Bases: FlowOp\nProvides the abstract class for static projection/assignment of a flow.\nProjectionOp\nProjectionOp\nFlowOp"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ProjectionOp",
        "href": "api/ansys/scade/apitools/expr/access/ProjectionOp.html#ansys.scade.apitools.expr.access.ProjectionOp",
        "title": "ProjectionOp > ProjectionOp > ProjectionOp",
        "section": "ProjectionOp > ProjectionOp",
        "text": "class ansys.scade.apitools.expr.access.ProjectionOp(expression: scade.model.suite.ExprCall, flow: scade.model.suite.Expression, with_expressions: list[scade.model.suite.Expression])\n\nBases: FlowOp\n\nProvides the abstract class for static projection/assignment of a flow."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ProjectionOp",
        "href": "api/ansys/scade/apitools/expr/access/ProjectionOp.html#parameters",
        "title": "ProjectionOp > Parameters",
        "section": "Parameters",
        "text": "Call expression to wrap.\nExpression operand.\nPath of the expression.\nInitialize the instance from the Scade expression.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ProjectionOp",
        "href": "api/ansys/scade/apitools/expr/access/ProjectionOp.html#overview",
        "title": "ProjectionOp > Overview",
        "section": "Overview",
        "text": "with_\nPath of the expression.\nOverview\nwith_"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ProjectionOp",
        "href": "api/ansys/scade/apitools/expr/access/ProjectionOp.html#import-detail",
        "title": "ProjectionOp > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ProjectionOp",
        "href": "api/ansys/scade/apitools/expr/access/ProjectionOp.html#property-detail",
        "title": "ProjectionOp > Property detail",
        "section": "Property detail",
        "text": "Path of the expression.\nThe elements are either labels or indexes.\nProperty detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ProjectionOp",
        "href": "api/ansys/scade/apitools/expr/access/ProjectionOp.html#ProjectionOp.with_",
        "title": "ProjectionOp > Property detail > with_",
        "section": "Property detail > with_",
        "text": "property ProjectionOp.with_: list[Expression]\n\nPath of the expression.\n\nThe elements are either labels or indexes."
    },
    {
        "objectID": "examples/create_make",
        "href": "examples/create_make.html#make",
        "title": "Examples > make",
        "section": "make",
        "text": "make"
    },
    {
        "objectID": "examples/create_make",
        "href": "examples/create_make.html#overview",
        "title": "Examples > make > Overview",
        "section": "Overview",
        "text": "This example applies a design pattern to an existing project to create new operators and diagrams.\nThe design pattern used in this example is very simple. It outputs a structure flow\ncontaining pairs made of a default value and a status, depending on the input.\nThe input model contains the declaration of the output structure as well as\nthe operator and its interface, with an empty graphical diagram:\nThe script produces the following diagram:\nThe content of the script is described exhaustively hereafter.\nOverview"
    },
    {
        "objectID": "examples/create_make",
        "href": "examples/create_make.html#import-directives-and-main",
        "title": "Examples > make > Import directives and main",
        "section": "Import directives and main",
        "text": "The main function allows the script to be used by the wrapper script:\nImport directives and main\nmain"
    },
    {
        "objectID": "examples/create_make",
        "href": "examples/create_make.html#checks",
        "title": "Examples > make > Checks",
        "section": "Checks",
        "text": "The process_operator function retrieves the model elements from\ntheir path and verifies that they are consistent with the pattern to apply.\nIt then calls the fill_diagram function to apply the pattern and save the\nmodel before returning it:\nChecks\nprocess_operator\nfill_diagram"
    },
    {
        "objectID": "examples/create_make",
        "href": "examples/create_make.html#diagram",
        "title": "Examples > make > Diagram",
        "section": "Diagram",
        "text": "The fill_diagram function creates the equations in the diagram at hard-coded positions.\nThere are as many textual expressions as there are elements in the structure type.\nThese are a sequence of (default value, status).\nDiagram\nfill_diagram"
    },
    {
        "objectID": "examples/create_make",
        "href": "examples/create_make.html#initialization",
        "title": "Examples > make > Initialization",
        "section": "Initialization",
        "text": "Define the positions of the equations and default sizes:\nInitialization"
    },
    {
        "objectID": "examples/create_make",
        "href": "examples/create_make.html#inputs-of-the-make-equation",
        "title": "Examples > make > Inputs of the make equation",
        "section": "Inputs of the make equation",
        "text": "Create the equations and cache the defined flows in the parameters list:\nInputs of the make equation\nparameters"
    },
    {
        "objectID": "examples/create_make",
        "href": "examples/create_make.html#main-equation",
        "title": "Examples > make > Main equation",
        "section": "Main equation",
        "text": "Create the equation for make, using the parameters defined previously:\nMain equation\nmake"
    },
    {
        "objectID": "examples/create_make",
        "href": "examples/create_make.html#output",
        "title": "Examples > make > Output",
        "section": "Output",
        "text": "Create the equation defining the output:\nOutput"
    },
    {
        "objectID": "examples/create_make",
        "href": "examples/create_make.html#edges",
        "title": "Examples > make > Edges",
        "section": "Edges",
        "text": "Finally, create all the missing edges from the new equations:\nEdges"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_data_def_locals",
        "href": "api/ansys/scade/apitools/create/data_def/add_data_def_locals.html#ansysscadeapitoolscreatedata_defadd_data_def_locals",
        "title": "ansys.scade.apitools.create.data_def.add_data_def_locals",
        "section": "ansys.scade.apitools.create.data_def.add_data_def_locals",
        "text": "Add local variables to a scope.\nansys.scade.apitools.create.data_def.add_data_def_locals"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_data_def_locals",
        "href": "api/ansys/scade/apitools/create/data_def/add_data_def_locals.html#ansys.scade.apitools.create.data_def.add_data_def_locals",
        "title": "ansys.scade.apitools.create.data_def.add_data_def_locals > ansys.scade.apitools.create.data_def.add_data_def_locals > add_data_def_locals",
        "section": "ansys.scade.apitools.create.data_def.add_data_def_locals > add_data_def_locals",
        "text": "ansys.scade.apitools.create.data_def.add_data_def_locals(data_def: scade.model.suite.DataDef, vars: List[Tuple[str, ansys.scade.apitools.create.type.TX]]) -> List[scade.model.suite.LocalVariable]\n\nAdd local variables to a scope."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_data_def_locals",
        "href": "api/ansys/scade/apitools/create/data_def/add_data_def_locals.html#notes",
        "title": "ansys.scade.apitools.create.data_def.add_data_def_locals > Notes",
        "section": "Notes",
        "text": "This is an interface change with respect to the SCADE Creation Library.\nThe pairs “name”/”type tree” are now embedded in a list of tuples.\nNotes"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_data_def_locals",
        "href": "api/ansys/scade/apitools/create/data_def/add_data_def_locals.html#parameters",
        "title": "ansys.scade.apitools.create.data_def.add_data_def_locals > Parameters",
        "section": "Parameters",
        "text": "Input scope, which is an operator, state, or action.\nName/type expression trees.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_data_def_locals",
        "href": "api/ansys/scade/apitools/create/data_def/add_data_def_locals.html#returns",
        "title": "ansys.scade.apitools.create.data_def.add_data_def_locals > Returns",
        "section": "Returns",
        "text": "List of added variables.\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/add_operator_inputs",
        "href": "api/ansys/scade/apitools/create/declaration/add_operator_inputs.html#ansysscadeapitoolscreatedeclarationadd_operator_inputs",
        "title": "ansys.scade.apitools.create.declaration.add_operator_inputs",
        "section": "ansys.scade.apitools.create.declaration.add_operator_inputs",
        "text": "Add inputs to an operator.\nansys.scade.apitools.create.declaration.add_operator_inputs"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/add_operator_inputs",
        "href": "api/ansys/scade/apitools/create/declaration/add_operator_inputs.html#ansys.scade.apitools.create.declaration.add_operator_inputs",
        "title": "ansys.scade.apitools.create.declaration.add_operator_inputs > ansys.scade.apitools.create.declaration.add_operator_inputs > add_operator_inputs",
        "section": "ansys.scade.apitools.create.declaration.add_operator_inputs > add_operator_inputs",
        "text": "ansys.scade.apitools.create.declaration.add_operator_inputs(operator: scade.model.suite.Operator, vars: List[Tuple[str, ansys.scade.apitools.create.type.TX]], insert_before: scade.model.suite.LocalVariable | None = None) -> List[scade.model.suite.LocalVariable]\n\nAdd inputs to an operator."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/add_operator_inputs",
        "href": "api/ansys/scade/apitools/create/declaration/add_operator_inputs.html#notes",
        "title": "ansys.scade.apitools.create.declaration.add_operator_inputs > Notes",
        "section": "Notes",
        "text": "This is an interface change with respect to the SCADE Creation Library.\nThe pairs “name”/”type” tree are now embedded in a list of tuples.\nNotes"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/add_operator_inputs",
        "href": "api/ansys/scade/apitools/create/declaration/add_operator_inputs.html#parameters",
        "title": "ansys.scade.apitools.create.declaration.add_operator_inputs > Parameters",
        "section": "Parameters",
        "text": "Input operator.\nName/type expression trees.\nInsertion point of the inputs. When this parameter is not None, it is\nan existing input of the operator. The inputs are inserted before this input.\nOtherwise, the inputs are added at the end.\nParameters\nNone"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/add_operator_inputs",
        "href": "api/ansys/scade/apitools/create/declaration/add_operator_inputs.html#returns",
        "title": "ansys.scade.apitools.create.declaration.add_operator_inputs > Returns",
        "section": "Returns",
        "text": "List of added inputs.\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/type/create_table",
        "href": "api/ansys/scade/apitools/create/type/create_table.html#ansysscadeapitoolscreatetypecreate_table",
        "title": "ansys.scade.apitools.create.type.create_table",
        "section": "ansys.scade.apitools.create.type.create_table",
        "text": "Get the type tree for a structure.\nansys.scade.apitools.create.type.create_table"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/type/create_table",
        "href": "api/ansys/scade/apitools/create/type/create_table.html#ansys.scade.apitools.create.type.create_table",
        "title": "ansys.scade.apitools.create.type.create_table > ansys.scade.apitools.create.type.create_table > create_table",
        "section": "ansys.scade.apitools.create.type.create_table > create_table",
        "text": "ansys.scade.apitools.create.type.create_table(dimensions: ansys.scade.apitools.create.expression.EX | List[ansys.scade.apitools.create.expression.EX], type_: TX) -> TT\n\nGet the type tree for a structure."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/type/create_table",
        "href": "api/ansys/scade/apitools/create/type/create_table.html#parameters",
        "title": "ansys.scade.apitools.create.type.create_table > Parameters",
        "section": "Parameters",
        "text": "Type tree defining the type of the array elements.\nDimensions of the array, which is either a single expression tree or\na list of expression trees.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/type/create_table",
        "href": "api/ansys/scade/apitools/create/type/create_table.html#returns",
        "title": "ansys.scade.apitools.create.type.create_table > Returns",
        "section": "Returns",
        "text": "TT\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/set_variable_last",
        "href": "api/ansys/scade/apitools/create/data_def/set_variable_last.html#ansysscadeapitoolscreatedata_defset_variable_last",
        "title": "ansys.scade.apitools.create.data_def.set_variable_last",
        "section": "ansys.scade.apitools.create.data_def.set_variable_last",
        "text": "Set the last value of a variable.\nansys.scade.apitools.create.data_def.set_variable_last"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/set_variable_last",
        "href": "api/ansys/scade/apitools/create/data_def/set_variable_last.html#ansys.scade.apitools.create.data_def.set_variable_last",
        "title": "ansys.scade.apitools.create.data_def.set_variable_last > ansys.scade.apitools.create.data_def.set_variable_last > set_variable_last",
        "section": "ansys.scade.apitools.create.data_def.set_variable_last > set_variable_last",
        "text": "ansys.scade.apitools.create.data_def.set_variable_last(variable: scade.model.suite.LocalVariable, tree: ansys.scade.apitools.create.expression.EX) -> scade.model.suite.Expression\n\nSet the last value of a variable."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/set_variable_last",
        "href": "api/ansys/scade/apitools/create/data_def/set_variable_last.html#parameters",
        "title": "ansys.scade.apitools.create.data_def.set_variable_last > Parameters",
        "section": "Parameters",
        "text": "Input variable.\nLast value expressed as an extended expression tree.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/set_variable_last",
        "href": "api/ansys/scade/apitools/create/data_def/set_variable_last.html#returns",
        "title": "ansys.scade.apitools.create.data_def.set_variable_last > Returns",
        "section": "Returns",
        "text": "suite.Expression\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/prop/pragma/get_pragma_text",
        "href": "api/ansys/scade/apitools/prop/pragma/get_pragma_text.html#ansysscadeapitoolsproppragmaget_pragma_text",
        "title": "ansys.scade.apitools.prop.pragma.get_pragma_text",
        "section": "ansys.scade.apitools.prop.pragma.get_pragma_text",
        "text": "Get the text of the pragma ID for an object.\nReturn an empty string if the pragma does not exist,\nassuming this is the default value.\nRaise the TypeError exception when the pragma exists\nbut is not textual.\nSee the pragma example.\nansys.scade.apitools.prop.pragma.get_pragma_text\nTypeError"
    },
    {
        "objectID": "api/ansys/scade/apitools/prop/pragma/get_pragma_text",
        "href": "api/ansys/scade/apitools/prop/pragma/get_pragma_text.html#ansys.scade.apitools.prop.pragma.get_pragma_text",
        "title": "ansys.scade.apitools.prop.pragma.get_pragma_text > ansys.scade.apitools.prop.pragma.get_pragma_text > get_pragma_text",
        "section": "ansys.scade.apitools.prop.pragma.get_pragma_text > get_pragma_text",
        "text": "ansys.scade.apitools.prop.pragma.get_pragma_text(object_: scade.model.suite.Object, id: str) -> str\n\nGet the text of the pragma ID for an object.\n\nReturn an empty string if the pragma does not exist,\nassuming this is the default value.\n\nRaise the TypeError exception when the pragma exists\nbut is not textual.\n\nSee the pragma example."
    },
    {
        "objectID": "api/ansys/scade/apitools/prop/pragma/get_pragma_text",
        "href": "api/ansys/scade/apitools/prop/pragma/get_pragma_text.html#parameters",
        "title": "ansys.scade.apitools.prop.pragma.get_pragma_text > Parameters",
        "section": "Parameters",
        "text": "Element to search for the pragma.\nID of the pragma.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/prop/pragma/get_pragma_text",
        "href": "api/ansys/scade/apitools/prop/pragma/get_pragma_text.html#returns",
        "title": "ansys.scade.apitools.prop.pragma.get_pragma_text > Returns",
        "section": "Returns",
        "text": "Text of the found pragma or \"\".\nReturns\n\"\""
    },
    {
        "objectID": "api/ansys/scade/apitools/query/type/is_predefined",
        "href": "api/ansys/scade/apitools/query/type/is_predefined.html#ansysscadeapitoolsquerytypeis_predefined",
        "title": "ansys.scade.apitools.query.type.is_predefined",
        "section": "ansys.scade.apitools.query.type.is_predefined",
        "text": "Determine if the input type is predefined.\nSee the is_predefined example.\nansys.scade.apitools.query.type.is_predefined"
    },
    {
        "objectID": "api/ansys/scade/apitools/query/type/is_predefined",
        "href": "api/ansys/scade/apitools/query/type/is_predefined.html#ansys.scade.apitools.query.type.is_predefined",
        "title": "ansys.scade.apitools.query.type.is_predefined > ansys.scade.apitools.query.type.is_predefined > is_predefined",
        "section": "ansys.scade.apitools.query.type.is_predefined > is_predefined",
        "text": "ansys.scade.apitools.query.type.is_predefined(type_: scade.model.suite.Type) -> bool\n\nDetermine if the input type is predefined.\n\nSee the is_predefined example."
    },
    {
        "objectID": "api/ansys/scade/apitools/query/type/is_predefined",
        "href": "api/ansys/scade/apitools/query/type/is_predefined.html#parameters",
        "title": "ansys.scade.apitools.query.type.is_predefined > Parameters",
        "section": "Parameters",
        "text": "Input type.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/query/type/is_predefined",
        "href": "api/ansys/scade/apitools/query/type/is_predefined.html#returns",
        "title": "ansys.scade.apitools.query.type.is_predefined > Returns",
        "section": "Returns",
        "text": "True when the input type is predefined, False otherwise.\nReturns\nTrue\nFalse"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ConditionalOp",
        "href": "api/ansys/scade/apitools/expr/access/ConditionalOp.html#conditionalop",
        "title": "ConditionalOp",
        "section": "ConditionalOp",
        "text": "Bases: OpOp\nProvides the abstract class for restart and activate operators.\nConditionalOp\nConditionalOp\nOpOp"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ConditionalOp",
        "href": "api/ansys/scade/apitools/expr/access/ConditionalOp.html#ansys.scade.apitools.expr.access.ConditionalOp",
        "title": "ConditionalOp > ConditionalOp > ConditionalOp",
        "section": "ConditionalOp > ConditionalOp",
        "text": "class ansys.scade.apitools.expr.access.ConditionalOp(expression: scade.model.suite.ExprCall, operator: CallExpression)\n\nBases: OpOp\n\nProvides the abstract class for restart and activate operators."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ConditionalOp",
        "href": "api/ansys/scade/apitools/expr/access/ConditionalOp.html#parameters",
        "title": "ConditionalOp > Parameters",
        "section": "Parameters",
        "text": "Higher-order expression to wrap.\nOperator call expression.\nInitialize the instance from the Scade expression.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ConditionalOp",
        "href": "api/ansys/scade/apitools/expr/access/ConditionalOp.html#overview",
        "title": "ConditionalOp > Overview",
        "section": "Overview",
        "text": "every\nCondition expression.\nOverview\nevery"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ConditionalOp",
        "href": "api/ansys/scade/apitools/expr/access/ConditionalOp.html#import-detail",
        "title": "ConditionalOp > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ConditionalOp",
        "href": "api/ansys/scade/apitools/expr/access/ConditionalOp.html#property-detail",
        "title": "ConditionalOp > Property detail",
        "section": "Property detail",
        "text": "Condition expression.\nProperty detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ConditionalOp",
        "href": "api/ansys/scade/apitools/expr/access/ConditionalOp.html#ConditionalOp.every",
        "title": "ConditionalOp > Property detail > every",
        "section": "Property detail > every",
        "text": "property ConditionalOp.every: Expression\n\nCondition expression."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_data_array",
        "href": "api/ansys/scade/apitools/create/expression/create_data_array.html#ansysscadeapitoolscreateexpressioncreate_data_array",
        "title": "ansys.scade.apitools.create.expression.create_data_array",
        "section": "ansys.scade.apitools.create.expression.create_data_array",
        "text": "Return the expression tree for the data array operator.\nansys.scade.apitools.create.expression.create_data_array"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_data_array",
        "href": "api/ansys/scade/apitools/create/expression/create_data_array.html#ansys.scade.apitools.create.expression.create_data_array",
        "title": "ansys.scade.apitools.create.expression.create_data_array > ansys.scade.apitools.create.expression.create_data_array > create_data_array",
        "section": "ansys.scade.apitools.create.expression.create_data_array > create_data_array",
        "text": "ansys.scade.apitools.create.expression.create_data_array(*args: EX) -> ET\n\nReturn the expression tree for the data array operator."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_data_array",
        "href": "api/ansys/scade/apitools/create/expression/create_data_array.html#parameters",
        "title": "ansys.scade.apitools.create.expression.create_data_array > Parameters",
        "section": "Parameters",
        "text": "Values of the array.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_data_array",
        "href": "api/ansys/scade/apitools/create/expression/create_data_array.html#returns",
        "title": "ansys.scade.apitools.create.expression.create_data_array > Returns",
        "section": "Returns",
        "text": "ET\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/query/type/get_cell_type",
        "href": "api/ansys/scade/apitools/query/type/get_cell_type.html#ansysscadeapitoolsquerytypeget_cell_type",
        "title": "ansys.scade.apitools.query.type.get_cell_type",
        "section": "ansys.scade.apitools.query.type.get_cell_type",
        "text": "Get the type of the elements of an array, optionally multi-dimensional.\nSee the get_cell_type example.\nansys.scade.apitools.query.type.get_cell_type"
    },
    {
        "objectID": "api/ansys/scade/apitools/query/type/get_cell_type",
        "href": "api/ansys/scade/apitools/query/type/get_cell_type.html#ansys.scade.apitools.query.type.get_cell_type",
        "title": "ansys.scade.apitools.query.type.get_cell_type > ansys.scade.apitools.query.type.get_cell_type > get_cell_type",
        "section": "ansys.scade.apitools.query.type.get_cell_type > get_cell_type",
        "text": "ansys.scade.apitools.query.type.get_cell_type(type_: scade.model.suite.Type, skip_alias=False) -> scade.model.suite.Type\n\nGet the type of the elements of an array, optionally multi-dimensional.\n\nSee the get_cell_type example."
    },
    {
        "objectID": "api/ansys/scade/apitools/query/type/get_cell_type",
        "href": "api/ansys/scade/apitools/query/type/get_cell_type.html#parameters",
        "title": "ansys.scade.apitools.query.type.get_cell_type > Parameters",
        "section": "Parameters",
        "text": "Input type, which must be an array.\nWhether the aliased arrays are considered as dimensions\nof the input array.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/query/type/get_cell_type",
        "href": "api/ansys/scade/apitools/query/type/get_cell_type.html#returns",
        "title": "ansys.scade.apitools.query.type.get_cell_type > Returns",
        "section": "Returns",
        "text": "Type of the array elements.\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/query/type/get_cell_type",
        "href": "api/ansys/scade/apitools/query/type/get_cell_type.html#examples",
        "title": "ansys.scade.apitools.query.type.get_cell_type > Examples",
        "section": "Examples",
        "text": "Applying the get_cell_type function to a matrix returns a vector\nif skip_alias=False. Otherwise, a Real`` value is returned.\nExamples\nget_cell_type\nskip_alias=False"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_when_block_branches",
        "href": "api/ansys/scade/apitools/create/data_def/add_when_block_branches.html#ansysscadeapitoolscreatedata_defadd_when_block_branches",
        "title": "ansys.scade.apitools.create.data_def.add_when_block_branches",
        "section": "ansys.scade.apitools.create.data_def.add_when_block_branches",
        "text": "Add new branches to a when block.\nansys.scade.apitools.create.data_def.add_when_block_branches"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_when_block_branches",
        "href": "api/ansys/scade/apitools/create/data_def/add_when_block_branches.html#ansys.scade.apitools.create.data_def.add_when_block_branches",
        "title": "ansys.scade.apitools.create.data_def.add_when_block_branches > ansys.scade.apitools.create.data_def.add_when_block_branches > add_when_block_branches",
        "section": "ansys.scade.apitools.create.data_def.add_when_block_branches > add_when_block_branches",
        "text": "ansys.scade.apitools.create.data_def.add_when_block_branches(when_block: scade.model.suite.WhenBlock, branches: List[WhenBranch]) -> List[scade.model.suite.WhenBranch]\n\nAdd new branches to a when block."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_when_block_branches",
        "href": "api/ansys/scade/apitools/create/data_def/add_when_block_branches.html#parameters",
        "title": "ansys.scade.apitools.create.data_def.add_when_block_branches > Parameters",
        "section": "Parameters",
        "text": "Input block.\nList of intermediate structures describing the branches.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_when_block_branches",
        "href": "api/ansys/scade/apitools/create/data_def/add_when_block_branches.html#returns",
        "title": "ansys.scade.apitools.create.data_def.add_when_block_branches > Returns",
        "section": "Returns",
        "text": "List[suite.WhenBranch]\nReturns"
    },
    {
        "objectID": "examples/create_state_machine",
        "href": "examples/create_state_machine.html#state_machine",
        "title": "Examples > state_machine",
        "section": "state_machine",
        "text": "state_machine"
    },
    {
        "objectID": "examples/create_state_machine",
        "href": "examples/create_state_machine.html#overview",
        "title": "Examples > state_machine > Overview",
        "section": "Overview",
        "text": "This small example creates the following state machine and demonstrates the use of the transition trees.\nOverview"
    },
    {
        "objectID": "examples/create_state_machine",
        "href": "examples/create_state_machine.html#source",
        "title": "Examples > state_machine > Source",
        "section": "Source",
        "text": "Source"
    },
    {
        "objectID": "_examples/query_type",
        "href": "_examples/query_type.html#query_type",
        "title": "query_type",
        "section": "query_type",
        "text": "project: QueryType.etp\nOutput:\nOutput:\nOutput:\nOutput:\nOutput:\nOutput:\nOutput:\nOutput:\nOutput:\nOutput:\nquery_type"
    },
    {
        "objectID": "api/ansys/scade/apitools/prop/pragma/index",
        "href": "api/ansys/scade/apitools/prop/pragma/index.html#the-pragmapy-module",
        "title": "The pragma.py module",
        "section": "The pragma.py module",
        "text": "The pragma.py module\npragma.py"
    },
    {
        "objectID": "api/ansys/scade/apitools/prop/pragma/index",
        "href": "api/ansys/scade/apitools/prop/pragma/index.html#summary",
        "title": "The pragma.py module > Summary",
        "section": "Summary",
        "text": "find_pragma\nGet the pragma ID of an object.\nfind_pragma_tool\nGet the pragma for an object.\nget_pragma_json\nDeserialize a text pragma containing a JSON document to a Python object.\nget_pragma_text\nGet the text of the pragma ID for an object.\nget_pragma_tool_text\nGet the text of the pragma for an object.\nremove_pragma\nRemove the pragma ID from an object.\nremove_pragma_tool\nRemove the pragma from an object.\nset_pragma_json\nSerialize a Python object to a JSON document in a textual pragma.\nset_pragma_text\nUpdate the pragma ID of an object with a new ID.\nset_pragma_tool_text\nUpdate the pragma ID which text starts with key of object_ with text.\nSummary\nfind_pragma\nfind_pragma_tool\nget_pragma_json\nget_pragma_text\nget_pragma_tool_text\nremove_pragma\nremove_pragma_tool\nset_pragma_json\nset_pragma_text\nset_pragma_tool_text\nkey\nobject_\ntext"
    },
    {
        "objectID": "api/ansys/scade/apitools/prop/pragma/index",
        "href": "api/ansys/scade/apitools/prop/pragma/index.html#description",
        "title": "The pragma.py module > Description",
        "section": "Description",
        "text": "Provides accessors for textual pragmas.\nA textual pragma is made of an identifier, usually related to a tool, and a text.\nThe syntax and semantic of the text are specific to each tool.\nThis library provides sets of accessors for several kinds of textual pragmas:\nGeneric pragmas: Any text.\nCore tools pragmas: The text has the form <key> [<text>]. These core\ntools include kcg and mc.\nJSON pragmas: The text is an arbitrary data formatted as JSON, usually\na dictionary.\nNotes:\nThis module assumes that the pragmas of a model element are unique per\n<id> or per (<id>, <key>) for core tools pragmas.\nThis module assumes that the value of a pragma that is not present is empty,\ninstead of raising an exception. Thus, it automatically removes a pragma\nwhen its new value is empty.\nThis module wraps some existing functions of the SCADE Suite Python API\nthat are not documented or listed in the Script Wizard’s tables.\nThe editing functions return whether the model is modified.\nDescription\n<key> [<text>]\nkcg\nmc\n<id>\n(<id>, <key>)"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_activate_no_init",
        "href": "api/ansys/scade/apitools/create/expression/create_activate_no_init.html#ansysscadeapitoolscreateexpressioncreate_activate_no_init",
        "title": "ansys.scade.apitools.create.expression.create_activate_no_init",
        "section": "ansys.scade.apitools.create.expression.create_activate_no_init",
        "text": "Return the expression tree for the higher-order construct for activating with default values.\nansys.scade.apitools.create.expression.create_activate_no_init"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_activate_no_init",
        "href": "api/ansys/scade/apitools/create/expression/create_activate_no_init.html#ansys.scade.apitools.create.expression.create_activate_no_init",
        "title": "ansys.scade.apitools.create.expression.create_activate_no_init > ansys.scade.apitools.create.expression.create_activate_no_init > create_activate_no_init",
        "section": "ansys.scade.apitools.create.expression.create_activate_no_init > create_activate_no_init",
        "text": "ansys.scade.apitools.create.expression.create_activate_no_init(every: EX, *args: EX) -> ET\n\nReturn the expression tree for the higher-order construct for activating with default values."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_activate_no_init",
        "href": "api/ansys/scade/apitools/create/expression/create_activate_no_init.html#parameters",
        "title": "ansys.scade.apitools.create.expression.create_activate_no_init > Parameters",
        "section": "Parameters",
        "text": "Input condition.\nDefault values.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_activate_no_init",
        "href": "api/ansys/scade/apitools/create/expression/create_activate_no_init.html#returns",
        "title": "ansys.scade.apitools.create.expression.create_activate_no_init > Returns",
        "section": "Returns",
        "text": "ET\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/NAryOp",
        "href": "api/ansys/scade/apitools/expr/access/NAryOp.html#naryop",
        "title": "NAryOp",
        "section": "NAryOp",
        "text": "Bases: AryOp\nProvides an expression with two or more operands.\nThe format is <operand> <operator> <operand> <operator> ... <operator> <operand>,\nwhere <operator> is one of these:\n@\nand, or, xor\n+, *\nland, lor\nSee the n_ary_op example.\nNAryOp\nNAryOp\nAryOp\n<operand> <operator> <operand> <operator> ... <operator> <operand>\n<operator>\n@\nand\nor\nxor\n+\n*\nland\nlor"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/NAryOp",
        "href": "api/ansys/scade/apitools/expr/access/NAryOp.html#ansys.scade.apitools.expr.access.NAryOp",
        "title": "NAryOp > NAryOp > NAryOp",
        "section": "NAryOp > NAryOp",
        "text": "class ansys.scade.apitools.expr.access.NAryOp(expression: scade.model.suite.ExprCall)\n\nBases: AryOp\n\nProvides an expression with two or more operands.\n\nThe format is <operand> <operator> <operand> <operator> ... <operator> <operand>,\nwhere <operator> is one of these:\n\n@\n\nand, or, xor\n\n+, *\n\nland, lor\n\nSee the n_ary_op example."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/NAryOp",
        "href": "api/ansys/scade/apitools/expr/access/NAryOp.html#notes",
        "title": "NAryOp > Notes",
        "section": "Notes",
        "text": "The xor operator is binary, but it is stored as a nary operator in the XSCADE files.\nNotes\nxor"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/NAryOp",
        "href": "api/ansys/scade/apitools/expr/access/NAryOp.html#parameters",
        "title": "NAryOp > Parameters",
        "section": "Parameters",
        "text": "Call expression to wrap.\nInitialize the instance from the Scade expression.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/NAryOp",
        "href": "api/ansys/scade/apitools/expr/access/NAryOp.html#overview",
        "title": "NAryOp > Overview",
        "section": "Overview",
        "text": "operands\nOperand of the operator.\nOverview\noperands"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/NAryOp",
        "href": "api/ansys/scade/apitools/expr/access/NAryOp.html#import-detail",
        "title": "NAryOp > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/NAryOp",
        "href": "api/ansys/scade/apitools/expr/access/NAryOp.html#property-detail",
        "title": "NAryOp > Property detail",
        "section": "Property detail",
        "text": "Operand of the operator.\nProperty detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/NAryOp",
        "href": "api/ansys/scade/apitools/expr/access/NAryOp.html#NAryOp.operands",
        "title": "NAryOp > Property detail > operands",
        "section": "Property detail > operands",
        "text": "property NAryOp.operands: list[Expression]\n\nOperand of the operator."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/create_package",
        "href": "api/ansys/scade/apitools/create/declaration/create_package.html#ansysscadeapitoolscreatedeclarationcreate_package",
        "title": "ansys.scade.apitools.create.declaration.create_package",
        "section": "ansys.scade.apitools.create.declaration.create_package",
        "text": "Create a package.\nA package has a name and is either stored in a separate file\nor in its owner’s file, if the owner is not the model.\nansys.scade.apitools.create.declaration.create_package"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/create_package",
        "href": "api/ansys/scade/apitools/create/declaration/create_package.html#ansys.scade.apitools.create.declaration.create_package",
        "title": "ansys.scade.apitools.create.declaration.create_package > ansys.scade.apitools.create.declaration.create_package > create_package",
        "section": "ansys.scade.apitools.create.declaration.create_package > create_package",
        "text": "ansys.scade.apitools.create.declaration.create_package(owner: scade.model.suite.Package, name: str, path: pathlib.Path | None = None, visibility: VK = VK.PUBLIC) -> scade.model.suite.Package\n\nCreate a package.\n\nA package has a name and is either stored in a separate file\nor in its owner’s file, if the owner is not the model."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/create_package",
        "href": "api/ansys/scade/apitools/create/declaration/create_package.html#parameters",
        "title": "ansys.scade.apitools.create.declaration.create_package > Parameters",
        "section": "Parameters",
        "text": "Owner of the package, which is either the model itself or a package.\nName of the package.\nPath of the file for storing the package. This parameter is optional\nif the package’s owner is a package. When the path is None and the\nowner is the model, the package is stored in the model’s default file.\nAccessibility of the package, which is either public or private.\nParameters\nNone"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/create_package",
        "href": "api/ansys/scade/apitools/create/declaration/create_package.html#returns",
        "title": "ansys.scade.apitools.create.declaration.create_package > Returns",
        "section": "Returns",
        "text": "suite.Package\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_mapw",
        "href": "api/ansys/scade/apitools/create/expression/create_mapw.html#ansysscadeapitoolscreateexpressioncreate_mapw",
        "title": "ansys.scade.apitools.create.expression.create_mapw",
        "section": "ansys.scade.apitools.create.expression.create_mapw",
        "text": "Return the expression tree for the higher-order construct for mapw creation.\nansys.scade.apitools.create.expression.create_mapw"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_mapw",
        "href": "api/ansys/scade/apitools/create/expression/create_mapw.html#ansys.scade.apitools.create.expression.create_mapw",
        "title": "ansys.scade.apitools.create.expression.create_mapw > ansys.scade.apitools.create.expression.create_mapw > create_mapw",
        "section": "ansys.scade.apitools.create.expression.create_mapw > create_mapw",
        "text": "ansys.scade.apitools.create.expression.create_mapw(size: EX, condition: EX, default: EX) -> ET\n\nReturn the expression tree for the higher-order construct for mapw creation."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_mapw",
        "href": "api/ansys/scade/apitools/create/expression/create_mapw.html#parameters",
        "title": "ansys.scade.apitools.create.expression.create_mapw > Parameters",
        "section": "Parameters",
        "text": "Number of iterations.\nInitial value of the iteration condition.\nDefault value of the iteration.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_mapw",
        "href": "api/ansys/scade/apitools/create/expression/create_mapw.html#returns",
        "title": "ansys.scade.apitools.create.expression.create_mapw > Returns",
        "section": "Returns",
        "text": "ET\nReturns"
    },
    {
        "objectID": "user_guide/create",
        "href": "user_guide/create.html#create-scade-models",
        "title": "Create SCADE models",
        "section": "Create SCADE models",
        "text": "With the SCADE Python API, you can modify SCADE projects and models. However, creating consistent instances\nof classes and associations requires a deep knowledge of the underlying meta-model. Mistakes can lead to\ncorrupted models, which are difficult to detect, and to tool crashes.\nThe create module provides higher-level functions to ensure the\nsyntactically correctness of the created models. The overall design consists in having independent functions,\nmeaning that you do not have to make several function calls to complete a single modification.\nYou must only use the SCADE Python API in command-line scripts. Modifying a model from the IDE\nwhile it is loaded corrupts the internal state of the SCADE Editor and leads to unpredictable results.\nCreate SCADE models\ncreate"
    },
    {
        "objectID": "user_guide/create",
        "href": "user_guide/create.html#usage-notes",
        "title": "Create SCADE models > Usage notes",
        "section": "Usage notes",
        "text": "The current version only supports creating elements in an existing project or Scade model. The edition\nof a model, for example deleting elements, requires more functions that might be added later.\nAnnotations are not supported yet.\nThe SCADE Python API is derived from the existing SCADE Creation Library (SCL), available for TCL and Python.\nFunctions have been renamed accordingly to PEP8.\nWhile most of the interfaces are identical, there are a few changes for providing more Pythonics way of\naccomplishing tasks.\nYou can migrate existing applications to use the SCADE Python API or continue to use SCL, which is\nto be re-implemented on top of the SCADE Python API.\nThe functions are all accessible from create, regardless of\nthe submodule that they are defined in.\nUsage notes\ncreate"
    },
    {
        "objectID": "user_guide/create",
        "href": "user_guide/create.html#script-architecture",
        "title": "Create SCADE models > Script architecture",
        "section": "Script architecture",
        "text": "A script that modifies a Scade model usually follows this architecture:\nLoad an existing project: This gives access to two separate sets of data:\nProject: Content of the project (ETP) file.\nSCADE model: Content of the model (XSCADE and SCADE) files.\nAdd new elements to the project and the model.\nSave the project and the model.\nThis script adds a new package to a project:\nWhen run on an empty project, the new Scade model is as follows:\nThe new file is added to the project at the default location:\nScript architecture"
    },
    {
        "objectID": "user_guide/create",
        "href": "user_guide/create.html#debugging-of-a-creation-script",
        "title": "Create SCADE models > Debugging of a creation script",
        "section": "Debugging of a creation script",
        "text": "To ease debugging of a creation script, you should embed the script in an environment\nthat first makes a copy of the original model.\nThe following script, compatible with any Python IDE, makes a copy of the original model, declares\nthe result project, and calls the original script’s main function:\nDebugging of a creation script\nmain"
    },
    {
        "objectID": "user_guide/create",
        "href": "user_guide/create.html#trees",
        "title": "Create SCADE models > Trees",
        "section": "Trees",
        "text": "The library does not support the creation of intermediate elements, which eliminates the risk of\nincorrect models because of partial or missing links.\nFor example, it is not possible to create an ExprId instance linked to a constant\nbut not contained by any model element.\nSome parts, such as types or expressions, can be quite large. You can use functions for creating\nsuch trees in an incremental way, which are compiled when creating the related model\nelement. These intermediate structures, or trees, are used for creating:\nTypes\nExpressions\nTransitions\nControl block branches\nTrees\nExprId"
    },
    {
        "objectID": "user_guide/create",
        "href": "user_guide/create.html#type-tree-tt",
        "title": "Create SCADE models > Type tree (TT)",
        "section": "Type tree (TT)",
        "text": "A TypeTree instance represents any SCADE type.\nExtended type trees (EX) provide more flexibility by\naccepting any of the following types:\nTypeTree instance\nscade.model.suite.Type instance\nName of a predefined type, such as 'bool', 'int32', and 'float64'\nThere are functions to create complex expression trees, such as structures or arrays.\nFor more information, see create.type.\nThis example adds a simple type to a model:\nThis next example creates an array of points:\nAlthough not advised, combining type trees is possible:\nFor comprehensive information on functions for creating any type of tree, see\ncreate.type.\nType tree (TT)\nTypeTree\nExtended type trees (EX)\nTypeTree\nscade.model.suite.Type\n'bool'\n'int32'\n'float64'\ncreate.type\ncreate.type"
    },
    {
        "objectID": "user_guide/create",
        "href": "user_guide/create.html#expression-tree-et",
        "title": "Create SCADE models > Expression tree (ET)",
        "section": "Expression tree (ET)",
        "text": "An ExpressionTree instance represents\nany SCADE expression made of operators and operands. To create an extended expression\n(EX) tree, you can use the create.expression.EX() method. It provide more\nflexibility by accepting any of these types:\nExpressionTree instance\nscade.model.suite.ConstVar instance\nScade literal, such as 'true' and '3.14_f32'\nPython literal, such as True, 42, 3.14, and 'c'\nThe following example adds two constants to a model. The first one, N, is an\ninteger, and its expression is the literal 42. The second one, N2, requires\nan expression tree to specify its value.\nFor more information on functions for creating an expression tree, see\ncreate.expression.\nExpression tree (ET)\nExpressionTree\ncreate.expression.EX()\nExpressionTree\nscade.model.suite.ConstVar\n'true'\n'3.14_f32'\nTrue\n42\n3.14\n'c'\nN\n42\nN2\ncreate.expression"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/create_imported_type",
        "href": "api/ansys/scade/apitools/create/declaration/create_imported_type.html#ansysscadeapitoolscreatedeclarationcreate_imported_type",
        "title": "ansys.scade.apitools.create.declaration.create_imported_type",
        "section": "ansys.scade.apitools.create.declaration.create_imported_type",
        "text": "Create an imported named type.\nThe type has a name and a definition.\nansys.scade.apitools.create.declaration.create_imported_type"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/create_imported_type",
        "href": "api/ansys/scade/apitools/create/declaration/create_imported_type.html#ansys.scade.apitools.create.declaration.create_imported_type",
        "title": "ansys.scade.apitools.create.declaration.create_imported_type > ansys.scade.apitools.create.declaration.create_imported_type > create_imported_type",
        "section": "ansys.scade.apitools.create.declaration.create_imported_type > create_imported_type",
        "text": "ansys.scade.apitools.create.declaration.create_imported_type(owner: scade.model.suite.Package, name: str, path: pathlib.Path | None = None, visibility: VK = VK.PUBLIC) -> scade.model.suite.NamedType\n\nCreate an imported named type.\n\nThe type has a name and a definition."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/create_imported_type",
        "href": "api/ansys/scade/apitools/create/declaration/create_imported_type.html#parameters",
        "title": "ansys.scade.apitools.create.declaration.create_imported_type > Parameters",
        "section": "Parameters",
        "text": "Owner of the type, which is either the model itself or a package.\nName of the type.\nPath of the file for storing the type. This parameter is ignored if the\nowner is a package. When the path is None and owner is the model, the\ntype is stored in the model’s default file.\nAccessibility of the type.\nParameters\nNone"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/create_imported_type",
        "href": "api/ansys/scade/apitools/create/declaration/create_imported_type.html#returns",
        "title": "ansys.scade.apitools.create.declaration.create_imported_type > Returns",
        "section": "Returns",
        "text": "suite.NamedType\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/LabelledExpression",
        "href": "api/ansys/scade/apitools/expr/access/LabelledExpression.html#labelledexpression",
        "title": "LabelledExpression",
        "section": "LabelledExpression",
        "text": "Bases: tuple\nLabelledExpression\nLabelledExpression\ntuple"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/LabelledExpression",
        "href": "api/ansys/scade/apitools/expr/access/LabelledExpression.html#ansys.scade.apitools.expr.access.LabelledExpression",
        "title": "LabelledExpression > LabelledExpression > LabelledExpression",
        "section": "LabelledExpression > LabelledExpression",
        "text": "class ansys.scade.apitools.expr.access.LabelledExpression\n\nBases: tuple"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/LabelledExpression",
        "href": "api/ansys/scade/apitools/expr/access/LabelledExpression.html#overview",
        "title": "LabelledExpression > Overview",
        "section": "Overview",
        "text": "flow\nlabel\nOverview\nflow\nlabel"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/LabelledExpression",
        "href": "api/ansys/scade/apitools/expr/access/LabelledExpression.html#import-detail",
        "title": "LabelledExpression > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/LabelledExpression",
        "href": "api/ansys/scade/apitools/expr/access/LabelledExpression.html#attribute-detail",
        "title": "LabelledExpression > Attribute detail",
        "section": "Attribute detail",
        "text": "Attribute detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/LabelledExpression",
        "href": "api/ansys/scade/apitools/expr/access/LabelledExpression.html#LabelledExpression.flow",
        "title": "LabelledExpression > Attribute detail > flow",
        "section": "Attribute detail > flow",
        "text": "LabelledExpression.flow\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/LabelledExpression",
        "href": "api/ansys/scade/apitools/expr/access/LabelledExpression.html#LabelledExpression.label",
        "title": "LabelledExpression > Attribute detail > label",
        "section": "Attribute detail > label",
        "text": "LabelledExpression.label\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/query/type/is_array",
        "href": "api/ansys/scade/apitools/query/type/is_array.html#ansysscadeapitoolsquerytypeis_array",
        "title": "ansys.scade.apitools.query.type.is_array",
        "section": "ansys.scade.apitools.query.type.is_array",
        "text": "Determine if the input type is an array.\nSee the is_array example.\nansys.scade.apitools.query.type.is_array"
    },
    {
        "objectID": "api/ansys/scade/apitools/query/type/is_array",
        "href": "api/ansys/scade/apitools/query/type/is_array.html#ansys.scade.apitools.query.type.is_array",
        "title": "ansys.scade.apitools.query.type.is_array > ansys.scade.apitools.query.type.is_array > is_array",
        "section": "ansys.scade.apitools.query.type.is_array > is_array",
        "text": "ansys.scade.apitools.query.type.is_array(type_: scade.model.suite.Type) -> bool\n\nDetermine if the input type is an array.\n\nSee the is_array example."
    },
    {
        "objectID": "api/ansys/scade/apitools/query/type/is_array",
        "href": "api/ansys/scade/apitools/query/type/is_array.html#parameters",
        "title": "ansys.scade.apitools.query.type.is_array > Parameters",
        "section": "Parameters",
        "text": "Input type.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/query/type/is_array",
        "href": "api/ansys/scade/apitools/query/type/is_array.html#returns",
        "title": "ansys.scade.apitools.query.type.is_array > Returns",
        "section": "Returns",
        "text": "True when the input type is an array, False otherwise.\nReturns\nTrue\nFalse"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_diagram_equation_set",
        "href": "api/ansys/scade/apitools/create/data_def/add_diagram_equation_set.html#ansysscadeapitoolscreatedata_defadd_diagram_equation_set",
        "title": "ansys.scade.apitools.create.data_def.add_diagram_equation_set",
        "section": "ansys.scade.apitools.create.data_def.add_diagram_equation_set",
        "text": "Add a new equation set to a graphical diagram.\nansys.scade.apitools.create.data_def.add_diagram_equation_set"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_diagram_equation_set",
        "href": "api/ansys/scade/apitools/create/data_def/add_diagram_equation_set.html#ansys.scade.apitools.create.data_def.add_diagram_equation_set",
        "title": "ansys.scade.apitools.create.data_def.add_diagram_equation_set > ansys.scade.apitools.create.data_def.add_diagram_equation_set > add_diagram_equation_set",
        "section": "ansys.scade.apitools.create.data_def.add_diagram_equation_set > add_diagram_equation_set",
        "text": "ansys.scade.apitools.create.data_def.add_diagram_equation_set(diagram: scade.model.suite.NetDiagram, name: str, elements: List[scade.model.suite.Presentable] | None = None) -> scade.model.suite.EquationSet\n\nAdd a new equation set to a graphical diagram."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_diagram_equation_set",
        "href": "api/ansys/scade/apitools/create/data_def/add_diagram_equation_set.html#parameters",
        "title": "ansys.scade.apitools.create.data_def.add_diagram_equation_set > Parameters",
        "section": "Parameters",
        "text": "Input diagram.\nName of the equation set.\nList of elements to add to the equation set.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_diagram_equation_set",
        "href": "api/ansys/scade/apitools/create/data_def/add_diagram_equation_set.html#returns",
        "title": "ansys.scade.apitools.create.data_def.add_diagram_equation_set > Returns",
        "section": "Returns",
        "text": "suite.EquationSet\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_data_def_assertion",
        "href": "api/ansys/scade/apitools/create/data_def/add_data_def_assertion.html#ansysscadeapitoolscreatedata_defadd_data_def_assertion",
        "title": "ansys.scade.apitools.create.data_def.add_data_def_assertion",
        "section": "ansys.scade.apitools.create.data_def.add_data_def_assertion",
        "text": "Create an assertion in a scope.\nansys.scade.apitools.create.data_def.add_data_def_assertion"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_data_def_assertion",
        "href": "api/ansys/scade/apitools/create/data_def/add_data_def_assertion.html#ansys.scade.apitools.create.data_def.add_data_def_assertion",
        "title": "ansys.scade.apitools.create.data_def.add_data_def_assertion > ansys.scade.apitools.create.data_def.add_data_def_assertion > add_data_def_assertion",
        "section": "ansys.scade.apitools.create.data_def.add_data_def_assertion > add_data_def_assertion",
        "text": "ansys.scade.apitools.create.data_def.add_data_def_assertion(data_def: scade.model.suite.DataDef, diagram: scade.model.suite.Diagram | None, name: str, expr: ansys.scade.apitools.create.expression.EX, kind: AK = AK.ASSUME, position: Tuple[float, float] = (0, 0)) -> scade.model.suite.Assertion\n\nCreate an assertion in a scope."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_data_def_assertion",
        "href": "api/ansys/scade/apitools/create/data_def/add_data_def_assertion.html#parameters",
        "title": "ansys.scade.apitools.create.data_def.add_data_def_assertion > Parameters",
        "section": "Parameters",
        "text": "Input scope, which is an operator, state, or action.\nDiagram containing the equation. The diagram specified can be either graphical\nor textual, or it can be None. However, it cannot be None if the scope\ncontains at least one diagram.\nName of the assertion.\nExpression of the assertion.\nKind of the assertion.\nPosition of the assertion, expressed in 1/100th of mm.\nThis value is ignored if the diagram is not a graphical diagram.\nOtherwise, it must be specified.\nParameters\nNone\nNone"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_data_def_assertion",
        "href": "api/ansys/scade/apitools/create/data_def/add_data_def_assertion.html#returns",
        "title": "ansys.scade.apitools.create.data_def.add_data_def_assertion > Returns",
        "section": "Returns",
        "text": "suite.Assertion\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/scade/index",
        "href": "api/ansys/scade/apitools/create/scade/index.html#the-scadepy-module",
        "title": "The scade.py module",
        "section": "The scade.py module",
        "text": "The scade.py module\nscade.py"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/scade/index",
        "href": "api/ansys/scade/apitools/create/scade/index.html#summary",
        "title": "The scade.py module > Summary",
        "section": "Summary",
        "text": "Sfk\nProvides kinds of simulation files.\nadd_element_to_project\nAdd the file defining the storage element to the project.\nadd_imported_to_project\nAdd an imported source file, associated with the SCADE imported element, to the project.\nadd_simulation_file_to_project\nAdd a file to the project and tag it appropriately for the SCADE simulation.\nsave_all\nSave all modified files of Scade models.\nSummary\nSfk\nadd_element_to_project\nadd_imported_to_project\nadd_simulation_file_to_project\nsave_all"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/scade/index",
        "href": "api/ansys/scade/apitools/create/scade/index.html#description",
        "title": "The scade.py module > Description",
        "section": "Description",
        "text": "Provides helpers for SCADE model creation functions.\nPersistence\nPredefined types\nType trees\nDescription"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/SliceOp",
        "href": "api/ansys/scade/apitools/expr/access/SliceOp.html#sliceop",
        "title": "SliceOp",
        "section": "SliceOp",
        "text": "Bases: ArrayOp\nProvides the slice of an array.\nSee the slice_op example.\nSliceOp\nSliceOp\nArrayOp"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/SliceOp",
        "href": "api/ansys/scade/apitools/expr/access/SliceOp.html#ansys.scade.apitools.expr.access.SliceOp",
        "title": "SliceOp > SliceOp > SliceOp",
        "section": "SliceOp > SliceOp",
        "text": "class ansys.scade.apitools.expr.access.SliceOp(expression: scade.model.suite.ExprCall)\n\nBases: ArrayOp\n\nProvides the slice of an array.\n\nSee the slice_op example."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/SliceOp",
        "href": "api/ansys/scade/apitools/expr/access/SliceOp.html#parameters",
        "title": "SliceOp > Parameters",
        "section": "Parameters",
        "text": "Call expression to wrap.\nInitialize the instance from the Scade expression.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/SliceOp",
        "href": "api/ansys/scade/apitools/expr/access/SliceOp.html#overview",
        "title": "SliceOp > Overview",
        "section": "Overview",
        "text": "from_index\nStart index of the slice.\nto_index\nEnd index of the slice.\nOverview\nfrom_index\nto_index"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/SliceOp",
        "href": "api/ansys/scade/apitools/expr/access/SliceOp.html#import-detail",
        "title": "SliceOp > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/SliceOp",
        "href": "api/ansys/scade/apitools/expr/access/SliceOp.html#property-detail",
        "title": "SliceOp > Property detail",
        "section": "Property detail",
        "text": "Start index of the slice.\nEnd index of the slice.\nProperty detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/SliceOp",
        "href": "api/ansys/scade/apitools/expr/access/SliceOp.html#SliceOp.from_index",
        "title": "SliceOp > Property detail > from_index",
        "section": "Property detail > from_index",
        "text": "property SliceOp.from_index: Expression\n\nStart index of the slice."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/SliceOp",
        "href": "api/ansys/scade/apitools/expr/access/SliceOp.html#SliceOp.to_index",
        "title": "SliceOp > Property detail > to_index",
        "section": "Property detail > to_index",
        "text": "property SliceOp.to_index: Expression\n\nEnd index of the slice."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_reverse",
        "href": "api/ansys/scade/apitools/create/expression/create_reverse.html#ansysscadeapitoolscreateexpressioncreate_reverse",
        "title": "ansys.scade.apitools.create.expression.create_reverse",
        "section": "ansys.scade.apitools.create.expression.create_reverse",
        "text": "Return the expression tree for the reverse operator.\nansys.scade.apitools.create.expression.create_reverse"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_reverse",
        "href": "api/ansys/scade/apitools/create/expression/create_reverse.html#ansys.scade.apitools.create.expression.create_reverse",
        "title": "ansys.scade.apitools.create.expression.create_reverse > ansys.scade.apitools.create.expression.create_reverse > create_reverse",
        "section": "ansys.scade.apitools.create.expression.create_reverse > create_reverse",
        "text": "ansys.scade.apitools.create.expression.create_reverse(flow: EX) -> ET\n\nReturn the expression tree for the reverse operator."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_reverse",
        "href": "api/ansys/scade/apitools/create/expression/create_reverse.html#parameters",
        "title": "ansys.scade.apitools.create.expression.create_reverse > Parameters",
        "section": "Parameters",
        "text": "Input flow.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_reverse",
        "href": "api/ansys/scade/apitools/create/expression/create_reverse.html#returns",
        "title": "ansys.scade.apitools.create.expression.create_reverse > Returns",
        "section": "Returns",
        "text": "ET\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/VK",
        "href": "api/ansys/scade/apitools/create/declaration/VK.html#vk",
        "title": "VK",
        "section": "VK",
        "text": "Bases: enum.Enum\nVisibility kind.\nVK\nVK\nenum.Enum"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/VK",
        "href": "api/ansys/scade/apitools/create/declaration/VK.html#ansys.scade.apitools.create.declaration.VK",
        "title": "VK > VK > VK",
        "section": "VK > VK",
        "text": "class ansys.scade.apitools.create.declaration.VK\n\nBases: enum.Enum\n\nVisibility kind."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/VK",
        "href": "api/ansys/scade/apitools/create/declaration/VK.html#overview",
        "title": "VK > Overview",
        "section": "Overview",
        "text": "PRIVATE\nPUBLIC\nOverview\nPRIVATE\nPUBLIC"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/VK",
        "href": "api/ansys/scade/apitools/create/declaration/VK.html#import-detail",
        "title": "VK > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/VK",
        "href": "api/ansys/scade/apitools/create/declaration/VK.html#attribute-detail",
        "title": "VK > Attribute detail",
        "section": "Attribute detail",
        "text": "Attribute detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/VK",
        "href": "api/ansys/scade/apitools/create/declaration/VK.html#VK.PRIVATE",
        "title": "VK > Attribute detail > PRIVATE",
        "section": "Attribute detail > PRIVATE",
        "text": "VK.PRIVATE = 'Private'\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/VK",
        "href": "api/ansys/scade/apitools/create/declaration/VK.html#VK.PUBLIC",
        "title": "VK > Attribute detail > PUBLIC",
        "section": "Attribute detail > PUBLIC",
        "text": "VK.PUBLIC = 'Public'\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/query/type/is_enum",
        "href": "api/ansys/scade/apitools/query/type/is_enum.html#ansysscadeapitoolsquerytypeis_enum",
        "title": "ansys.scade.apitools.query.type.is_enum",
        "section": "ansys.scade.apitools.query.type.is_enum",
        "text": "Determine if the input type is an enumeration.\nSee the is_enum example.\nansys.scade.apitools.query.type.is_enum"
    },
    {
        "objectID": "api/ansys/scade/apitools/query/type/is_enum",
        "href": "api/ansys/scade/apitools/query/type/is_enum.html#ansys.scade.apitools.query.type.is_enum",
        "title": "ansys.scade.apitools.query.type.is_enum > ansys.scade.apitools.query.type.is_enum > is_enum",
        "section": "ansys.scade.apitools.query.type.is_enum > is_enum",
        "text": "ansys.scade.apitools.query.type.is_enum(type_: scade.model.suite.Type) -> bool\n\nDetermine if the input type is an enumeration.\n\nSee the is_enum example."
    },
    {
        "objectID": "api/ansys/scade/apitools/query/type/is_enum",
        "href": "api/ansys/scade/apitools/query/type/is_enum.html#parameters",
        "title": "ansys.scade.apitools.query.type.is_enum > Parameters",
        "section": "Parameters",
        "text": "Input type.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/query/type/is_enum",
        "href": "api/ansys/scade/apitools/query/type/is_enum.html#returns",
        "title": "ansys.scade.apitools.query.type.is_enum > Returns",
        "section": "Returns",
        "text": "True when the input type is a enumeration, False otherwise.\nReturns\nTrue\nFalse"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_prj_dyn",
        "href": "api/ansys/scade/apitools/create/expression/create_prj_dyn.html#ansysscadeapitoolscreateexpressioncreate_prj_dyn",
        "title": "ansys.scade.apitools.create.expression.create_prj_dyn",
        "section": "ansys.scade.apitools.create.expression.create_prj_dyn",
        "text": "Return the expression tree for the dynamic projection operator.\nansys.scade.apitools.create.expression.create_prj_dyn"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_prj_dyn",
        "href": "api/ansys/scade/apitools/create/expression/create_prj_dyn.html#ansys.scade.apitools.create.expression.create_prj_dyn",
        "title": "ansys.scade.apitools.create.expression.create_prj_dyn > ansys.scade.apitools.create.expression.create_prj_dyn > create_prj_dyn",
        "section": "ansys.scade.apitools.create.expression.create_prj_dyn > create_prj_dyn",
        "text": "ansys.scade.apitools.create.expression.create_prj_dyn(flow: EX, path: LX, default: EX) -> ET\n\nReturn the expression tree for the dynamic projection operator."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_prj_dyn",
        "href": "api/ansys/scade/apitools/create/expression/create_prj_dyn.html#parameters",
        "title": "ansys.scade.apitools.create.expression.create_prj_dyn > Parameters",
        "section": "Parameters",
        "text": "Input flow of the projection.\nElements of the path, which is a label, index, or variable.\nDefault value for the projection when the path is incorrect.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_prj_dyn",
        "href": "api/ansys/scade/apitools/create/expression/create_prj_dyn.html#returns",
        "title": "ansys.scade.apitools.create.expression.create_prj_dyn > Returns",
        "section": "Returns",
        "text": "ET\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/TransposeOp",
        "href": "api/ansys/scade/apitools/expr/access/TransposeOp.html#transposeop",
        "title": "TransposeOp",
        "section": "TransposeOp",
        "text": "Bases: ArrayOp\nProvides for the transposition of an array.\nSee the transpose_op example.\nTransposeOp\nTransposeOp\nArrayOp"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/TransposeOp",
        "href": "api/ansys/scade/apitools/expr/access/TransposeOp.html#ansys.scade.apitools.expr.access.TransposeOp",
        "title": "TransposeOp > TransposeOp > TransposeOp",
        "section": "TransposeOp > TransposeOp",
        "text": "class ansys.scade.apitools.expr.access.TransposeOp(expression: scade.model.suite.ExprCall)\n\nBases: ArrayOp\n\nProvides for the transposition of an array.\n\nSee the transpose_op example."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/TransposeOp",
        "href": "api/ansys/scade/apitools/expr/access/TransposeOp.html#parameters",
        "title": "TransposeOp > Parameters",
        "section": "Parameters",
        "text": "Call expression to wrap.\nInitialize the instance from the Scade expression.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/TransposeOp",
        "href": "api/ansys/scade/apitools/expr/access/TransposeOp.html#overview",
        "title": "TransposeOp > Overview",
        "section": "Overview",
        "text": "dimensions\nDimensions to transpose.\nOverview\ndimensions"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/TransposeOp",
        "href": "api/ansys/scade/apitools/expr/access/TransposeOp.html#import-detail",
        "title": "TransposeOp > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/TransposeOp",
        "href": "api/ansys/scade/apitools/expr/access/TransposeOp.html#property-detail",
        "title": "TransposeOp > Property detail",
        "section": "Property detail",
        "text": "Dimensions to transpose.\nProperty detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/TransposeOp",
        "href": "api/ansys/scade/apitools/expr/access/TransposeOp.html#TransposeOp.dimensions",
        "title": "TransposeOp > Property detail > dimensions",
        "section": "Property detail > dimensions",
        "text": "property TransposeOp.dimensions: tuple[Expression, Expression]\n\nDimensions to transpose."
    },
    {
        "objectID": "contributing",
        "href": "contributing.html#contribute",
        "title": "Contribute",
        "section": "Contribute",
        "text": "Overall guidance on contributing to a PyAnsys library appears in\nContributing\nin the PyAnsys developer’s guide. Ensure that you are thoroughly familiar\nwith this guide before attempting to contribute to Ansys SCADE API Tools.\nThe following contribution information is specific to Ansys SCADE API Tools.\nContribute"
    },
    {
        "objectID": "contributing",
        "href": "contributing.html#install-in-developer-mode",
        "title": "Contribute > Install in developer mode",
        "section": "Install in developer mode",
        "text": "Installing Ansys SCADE API Tools in developer mode allows you to modify the\nsource and enhance it.\nClone the ansys-scade-apitools repository:\nAccess the scade-apitools directory where the repository has been cloned:\nCreate a clean Python 3.10 environment and activate it:\nYou should use the interpreter delivered with Ansys SCADE. For example,\nC:\\Program Files\\ANSYS Inc\\v232\\SCADE\\contrib\\Python310\\python.exe.\nMake sure that you have the latest required build system, documentation, testing,\nand CI tools:\nInstall the project in editable mode:\nUse tox to verify your development installation:\nInstall in developer mode\nansys-scade-apitools\nscade-apitools\nC:\\Program Files\\ANSYS Inc\\v232\\SCADE\\contrib\\Python310\\python.exe"
    },
    {
        "objectID": "contributing",
        "href": "contributing.html#test",
        "title": "Contribute > Test",
        "section": "Test",
        "text": "Ansys SCADE API Tools uses tox for testing. This tool allows you to\nautomate common development tasks (similar to Makefile), but it is oriented\ntowards Python development.\nTest\nMakefile"
    },
    {
        "objectID": "contributing",
        "href": "contributing.html#use-tox",
        "title": "Contribute > Use tox",
        "section": "Use tox",
        "text": "While Makefile has rules, tox has environments. In fact, tox creates its\nown virtual environment so that anything being tested is isolated from the project\nto guarantee the project’s integrity.\nThe following tox commands are provided:\ntox -e style: Checks for coding style quality.\ntox -e tests: Checks for unit tests.\ntox -e tests-coverage: Checks for unit testing and code coverage.\ntox -e doc-html: Builds the HTML documentation.\ntox -e doc-links: Checks for broken links in the documentation.\nUse tox\ntox\nMakefile\ntox\ntox\ntox\ntox -e style\ntox -e tests\ntox -e tests-coverage\ntox -e doc\ntox -e doc-html\ntox -e doc-links"
    },
    {
        "objectID": "contributing",
        "href": "contributing.html#use-raw-testing",
        "title": "Contribute > Use raw testing",
        "section": "Use raw testing",
        "text": "If required, from the command line, you can call style commands like\nblack, isort, and flake8. You can also call unit testing commands like pytest.\nHowever, running these commands does not guarantee that your project is being tested in an\nisolated environment, which is the reason why tools like tox exist.\nUse raw testing\ntox"
    },
    {
        "objectID": "contributing",
        "href": "contributing.html#use-pre-commit",
        "title": "Contribute > Use pre-commit",
        "section": "Use pre-commit",
        "text": "Ansys SCADE API Tools follows the PEP8 standard as outlined in\nPEP 8 in\nthe PyAnsys developer’s guide and implements style checking using\npre-commit.\nTo ensure your code meets minimum code styling standards, run these commands:\nYou can also install this as a pre-commit hook by running this command:\nThis way, it’s not possible for you to push code that fails the style checks:\nUse pre-commit\npre-commit"
    },
    {
        "objectID": "contributing",
        "href": "contributing.html#build-documentation",
        "title": "Contribute > Build documentation",
        "section": "Build documentation",
        "text": "For building documentation, you can run the usual rules provided in the\nSphinx make file. Here are some examples:\nHowever, the recommended way of checking documentation integrity is to use\ntox:\nBuild documentation\nmake\ntox"
    },
    {
        "objectID": "contributing",
        "href": "contributing.html#distribute",
        "title": "Contribute > Distribute",
        "section": "Distribute",
        "text": "If you would like to create either source or wheel files, start by installing\nthe building requirements and then executing the build module:\nDistribute"
    },
    {
        "objectID": "contributing",
        "href": "contributing.html#post-issues",
        "title": "Contribute > Post issues",
        "section": "Post issues",
        "text": "Use the Ansys SCADE API Tools Issues\npage to submit questions, report bugs, and request new features. When possible, use\nthese templates:\nBug, problem, error: For filing a bug report\nDocumentation error: For requesting modifications to the documentation\nAdding an example: For proposing a new example\nNew feature: For requesting enhancements to the code\nIf your issue does not fit into one of these template categories, click\nthe link for opening a blank issue.\nTo reach the project support team, email pyansys.core@ansys.com.\nPost issues"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/RestartOp",
        "href": "api/ansys/scade/apitools/expr/access/RestartOp.html#restartop",
        "title": "RestartOp",
        "section": "RestartOp",
        "text": "Bases: ConditionalOp\nProvides for restart of an operator.\nSee the restart_op example.\nRestartOp\nRestartOp\nConditionalOp"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/RestartOp",
        "href": "api/ansys/scade/apitools/expr/access/RestartOp.html#ansys.scade.apitools.expr.access.RestartOp",
        "title": "RestartOp > RestartOp > RestartOp",
        "section": "RestartOp > RestartOp",
        "text": "class ansys.scade.apitools.expr.access.RestartOp(expression: scade.model.suite.ExprCall, operator: CallExpression)\n\nBases: ConditionalOp\n\nProvides for restart of an operator.\n\nSee the restart_op example."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/RestartOp",
        "href": "api/ansys/scade/apitools/expr/access/RestartOp.html#parameters",
        "title": "RestartOp > Parameters",
        "section": "Parameters",
        "text": "Higher-order expression to wrap.\nOperator call expression.\nInitialize the instance from the Scade expression.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/RestartOp",
        "href": "api/ansys/scade/apitools/expr/access/RestartOp.html#import-detail",
        "title": "RestartOp > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/SharpOp",
        "href": "api/ansys/scade/apitools/expr/access/SharpOp.html#sharpop",
        "title": "SharpOp",
        "section": "SharpOp",
        "text": "Bases: CallExpression\nProvides a sharp expression with two or more flows.\nThe format is #(<flow>, ..., <flow>).\nSee the sharp_op example.\nSharpOp\nSharpOp\nCallExpression\n#(<flow>, ..., <flow>)"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/SharpOp",
        "href": "api/ansys/scade/apitools/expr/access/SharpOp.html#ansys.scade.apitools.expr.access.SharpOp",
        "title": "SharpOp > SharpOp > SharpOp",
        "section": "SharpOp > SharpOp",
        "text": "class ansys.scade.apitools.expr.access.SharpOp(expression: scade.model.suite.ExprCall)\n\nBases: CallExpression\n\nProvides a sharp expression with two or more flows.\n\nThe format is #(<flow>, ..., <flow>).\n\nSee the sharp_op example."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/SharpOp",
        "href": "api/ansys/scade/apitools/expr/access/SharpOp.html#parameters",
        "title": "SharpOp > Parameters",
        "section": "Parameters",
        "text": "Call expression to wrap.\nInitialize the instance from the Scade expression.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/SharpOp",
        "href": "api/ansys/scade/apitools/expr/access/SharpOp.html#overview",
        "title": "SharpOp > Overview",
        "section": "Overview",
        "text": "flows\nOperands of the operator.\nOverview\nflows"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/SharpOp",
        "href": "api/ansys/scade/apitools/expr/access/SharpOp.html#import-detail",
        "title": "SharpOp > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/SharpOp",
        "href": "api/ansys/scade/apitools/expr/access/SharpOp.html#property-detail",
        "title": "SharpOp > Property detail",
        "section": "Property detail",
        "text": "Operands of the operator.\nProperty detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/SharpOp",
        "href": "api/ansys/scade/apitools/expr/access/SharpOp.html#SharpOp.flows",
        "title": "SharpOp > Property detail > flows",
        "section": "Property detail > flows",
        "text": "property SharpOp.flows: list[Expression]\n\nOperands of the operator."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_state_transition",
        "href": "api/ansys/scade/apitools/create/data_def/add_state_transition.html#ansysscadeapitoolscreatedata_defadd_state_transition",
        "title": "ansys.scade.apitools.create.data_def.add_state_transition",
        "section": "ansys.scade.apitools.create.data_def.add_state_transition",
        "text": "Add a new transition starting from a state.\nansys.scade.apitools.create.data_def.add_state_transition"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_state_transition",
        "href": "api/ansys/scade/apitools/create/data_def/add_state_transition.html#ansys.scade.apitools.create.data_def.add_state_transition",
        "title": "ansys.scade.apitools.create.data_def.add_state_transition > ansys.scade.apitools.create.data_def.add_state_transition > add_state_transition",
        "section": "ansys.scade.apitools.create.data_def.add_state_transition > add_state_transition",
        "text": "ansys.scade.apitools.create.data_def.add_state_transition(state: scade.model.suite.State, kind: TK, tree: TR) -> scade.model.suite.Transition\n\nAdd a new transition starting from a state."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_state_transition",
        "href": "api/ansys/scade/apitools/create/data_def/add_state_transition.html#parameters",
        "title": "ansys.scade.apitools.create.data_def.add_state_transition > Parameters",
        "section": "Parameters",
        "text": "Source of the transition.\nKind of transition.\nTransition tree, which is the intermediate structure describing the transition.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_state_transition",
        "href": "api/ansys/scade/apitools/create/data_def/add_state_transition.html#returns",
        "title": "ansys.scade.apitools.create.data_def.add_state_transition > Returns",
        "section": "Returns",
        "text": "suite.Transition\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/query/type/is_structure",
        "href": "api/ansys/scade/apitools/query/type/is_structure.html#ansysscadeapitoolsquerytypeis_structure",
        "title": "ansys.scade.apitools.query.type.is_structure",
        "section": "ansys.scade.apitools.query.type.is_structure",
        "text": "Determine if the input type is a structure.\nSee the is_structure example.\nansys.scade.apitools.query.type.is_structure"
    },
    {
        "objectID": "api/ansys/scade/apitools/query/type/is_structure",
        "href": "api/ansys/scade/apitools/query/type/is_structure.html#ansys.scade.apitools.query.type.is_structure",
        "title": "ansys.scade.apitools.query.type.is_structure > ansys.scade.apitools.query.type.is_structure > is_structure",
        "section": "ansys.scade.apitools.query.type.is_structure > is_structure",
        "text": "ansys.scade.apitools.query.type.is_structure(type_: scade.model.suite.Type) -> bool\n\nDetermine if the input type is a structure.\n\nSee the is_structure example."
    },
    {
        "objectID": "api/ansys/scade/apitools/query/type/is_structure",
        "href": "api/ansys/scade/apitools/query/type/is_structure.html#parameters",
        "title": "ansys.scade.apitools.query.type.is_structure > Parameters",
        "section": "Parameters",
        "text": "Input type.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/query/type/is_structure",
        "href": "api/ansys/scade/apitools/query/type/is_structure.html#returns",
        "title": "ansys.scade.apitools.query.type.is_structure > Returns",
        "section": "Returns",
        "text": "True when the input type is a structure, False otherwise.\nReturns\nTrue\nFalse"
    },
    {
        "objectID": "examples/create_top_level",
        "href": "examples/create_top_level.html#top_level",
        "title": "Examples > top_level",
        "section": "top_level",
        "text": "top_level"
    },
    {
        "objectID": "examples/create_top_level",
        "href": "examples/create_top_level.html#overview",
        "title": "Examples > top_level > Overview",
        "section": "Overview",
        "text": "This example is for creating a top-level operator that calls all existing root operators.\nThe interface of the top-level operator is the union of the model’s sensors and the inputs/outputs\nof the called operators.\nThe semantic parts of the example are quite simple. Most of the statements are related to the\ncomputation of positions and sizes. However, this is not so complex, and you can reuse this\nexample as a foundation for additional scripts.\nThe input model has the following call graph:\nThe resulting top-level operator is as follows:\nOverview"
    },
    {
        "objectID": "examples/create_top_level",
        "href": "examples/create_top_level.html#import-directives-and-main",
        "title": "Examples > top_level > Import directives and main",
        "section": "Import directives and main",
        "text": "The main function allows the script to be used by the wrapper script.\nIt saves the project and the model before returning it.:\nImport directives and main\nmain"
    },
    {
        "objectID": "examples/create_top_level",
        "href": "examples/create_top_level.html#helper-for-operators",
        "title": "Examples > top_level > Helper for operators",
        "section": "Helper for operators",
        "text": "The add_operator utility function adds an operator to the model in a separate storage file.\nThis file has the same name and is located in the project’s directory:\nHelper for operators\nadd_operator"
    },
    {
        "objectID": "examples/create_top_level",
        "href": "examples/create_top_level.html#top-level-operator",
        "title": "Examples > top_level > Top-level operator",
        "section": "Top-level operator",
        "text": "The fill_top_level function is the main one of this example. It\ncreates the interface and the graphical equations of the new operator.\nThe algorithm caches the interface of the root operator in two dictionaries,\nmap_inputs and map_outputs.\nThe map_inputs dictionary is initialized with all existing sensors and\nthen updated with the inputs of the called operators.\nWhen two operators have an input with the same name, only one input is created in the root operator.\nHaving outputs with same names is not acceptable, although this is not checked.\nTop-level operator\nfill_top_level\nmap_inputs\nmap_outputs\nmap_inputs"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_binary",
        "href": "api/ansys/scade/apitools/create/expression/create_binary.html#ansysscadeapitoolscreateexpressioncreate_binary",
        "title": "ansys.scade.apitools.create.expression.create_binary",
        "section": "ansys.scade.apitools.create.expression.create_binary",
        "text": "Return the expression tree for a binary operator.\nansys.scade.apitools.create.expression.create_binary"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_binary",
        "href": "api/ansys/scade/apitools/create/expression/create_binary.html#ansys.scade.apitools.create.expression.create_binary",
        "title": "ansys.scade.apitools.create.expression.create_binary > ansys.scade.apitools.create.expression.create_binary > create_binary",
        "section": "ansys.scade.apitools.create.expression.create_binary > create_binary",
        "text": "ansys.scade.apitools.create.expression.create_binary(op: str, tree1: EX, tree2: EX, modifiers: ET | List[ET] | None = None) -> ET\n\nReturn the expression tree for a binary operator."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_binary",
        "href": "api/ansys/scade/apitools/create/expression/create_binary.html#parameters",
        "title": "ansys.scade.apitools.create.expression.create_binary > Parameters",
        "section": "Parameters",
        "text": "Binary operator to call: & | | | ^ | # | + | - | * | / | : | % | < | <= | > | >= | = | <>\nFirst operand: expression tree.\nSecond operand: expression tree.\nList of higher-order constructs.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_binary",
        "href": "api/ansys/scade/apitools/create/expression/create_binary.html#returns",
        "title": "ansys.scade.apitools.create.expression.create_binary > Returns",
        "section": "Returns",
        "text": "ET\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_diagram_edge",
        "href": "api/ansys/scade/apitools/create/data_def/add_diagram_edge.html#ansysscadeapitoolscreatedata_defadd_diagram_edge",
        "title": "ansys.scade.apitools.create.data_def.add_diagram_edge",
        "section": "ansys.scade.apitools.create.data_def.add_diagram_edge",
        "text": "Add a graphical edge between two equations in a graphical diagram.\nThe source of the edge is identified by the local variable defined\nin the source equation.\nThe destination of the edge is identified by the parameter of the\nexpression of the target equation. It is an ExprId instance\nreferring to the left variable.\nTo ease the creation of graphical diagrams, the destination of the edge\ncan be specified with an integer, representing the input pin index of\nthe target equation.\nansys.scade.apitools.create.data_def.add_diagram_edge\nExprId"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_diagram_edge",
        "href": "api/ansys/scade/apitools/create/data_def/add_diagram_edge.html#ansys.scade.apitools.create.data_def.add_diagram_edge",
        "title": "ansys.scade.apitools.create.data_def.add_diagram_edge > ansys.scade.apitools.create.data_def.add_diagram_edge > add_diagram_edge",
        "section": "ansys.scade.apitools.create.data_def.add_diagram_edge > add_diagram_edge",
        "text": "ansys.scade.apitools.create.data_def.add_diagram_edge(diagram: scade.model.suite.NetDiagram, src: scade.model.suite.Equation, left: scade.model.suite.LocalVariable, dst: scade.model.suite.Equation, expr: int | scade.model.suite.Expression, points: List[Tuple[int, int]] | None = None) -> scade.model.suite.Edge\n\nAdd a graphical edge between two equations in a graphical diagram.\n\nThe source of the edge is identified by the local variable defined\nin the source equation.\n\nThe destination of the edge is identified by the parameter of the\nexpression of the target equation. It is an ExprId instance\nreferring to the left variable.\n\nTo ease the creation of graphical diagrams, the destination of the edge\ncan be specified with an integer, representing the input pin index of\nthe target equation."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_diagram_edge",
        "href": "api/ansys/scade/apitools/create/data_def/add_diagram_edge.html#parameters",
        "title": "ansys.scade.apitools.create.data_def.add_diagram_edge > Parameters",
        "section": "Parameters",
        "text": "Diagram containing the source and destination equations. The diagram specified\ncan be either graphical or textual, or it can be None. However, it cannot be\nNone if the scope contains at least one diagram.\nSource equation of the edge.\nLocal variable associated with the edge.\nTarget equation of the edge.\nParameter to connect to the edge or the input pin index of the target equation.\nCoordinates of the segments composing the edge, expressed in 1/100th of mm.\nWhen None, the value is set to [(0, 0), (0, 0)] so that the SCADE Editor\ncomputes default positions when the model is loaded.\nParameters\nNone\nNone\nNone\n[(0, 0), (0, 0)]"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_diagram_edge",
        "href": "api/ansys/scade/apitools/create/data_def/add_diagram_edge.html#returns",
        "title": "ansys.scade.apitools.create.data_def.add_diagram_edge > Returns",
        "section": "Returns",
        "text": "suite.Edge\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_scalar_to_vector",
        "href": "api/ansys/scade/apitools/create/expression/create_scalar_to_vector.html#ansysscadeapitoolscreateexpressioncreate_scalar_to_vector",
        "title": "ansys.scade.apitools.create.expression.create_scalar_to_vector",
        "section": "ansys.scade.apitools.create.expression.create_scalar_to_vector",
        "text": "Return the expression tree for the scalar-to-vector operator.\nansys.scade.apitools.create.expression.create_scalar_to_vector"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_scalar_to_vector",
        "href": "api/ansys/scade/apitools/create/expression/create_scalar_to_vector.html#ansys.scade.apitools.create.expression.create_scalar_to_vector",
        "title": "ansys.scade.apitools.create.expression.create_scalar_to_vector > ansys.scade.apitools.create.expression.create_scalar_to_vector > create_scalar_to_vector",
        "section": "ansys.scade.apitools.create.expression.create_scalar_to_vector > create_scalar_to_vector",
        "text": "ansys.scade.apitools.create.expression.create_scalar_to_vector(size: EX, *args: EX) -> ET\n\nReturn the expression tree for the scalar-to-vector operator."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_scalar_to_vector",
        "href": "api/ansys/scade/apitools/create/expression/create_scalar_to_vector.html#notes",
        "title": "ansys.scade.apitools.create.expression.create_scalar_to_vector > Notes",
        "section": "Notes",
        "text": "This is an interface change with respect to the SCADE Creation Library.\nThe parameter size has moved from the last position to the first one.\nNotes"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_scalar_to_vector",
        "href": "api/ansys/scade/apitools/create/expression/create_scalar_to_vector.html#parameters",
        "title": "ansys.scade.apitools.create.expression.create_scalar_to_vector > Parameters",
        "section": "Parameters",
        "text": "Size of the vector.\nInput values.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_scalar_to_vector",
        "href": "api/ansys/scade/apitools/create/expression/create_scalar_to_vector.html#returns",
        "title": "ansys.scade.apitools.create.expression.create_scalar_to_vector > Returns",
        "section": "Returns",
        "text": "ET\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_case",
        "href": "api/ansys/scade/apitools/create/expression/create_case.html#ansysscadeapitoolscreateexpressioncreate_case",
        "title": "ansys.scade.apitools.create.expression.create_case",
        "section": "ansys.scade.apitools.create.expression.create_case",
        "text": "Return the expression tree for the case operator.\nansys.scade.apitools.create.expression.create_case"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_case",
        "href": "api/ansys/scade/apitools/create/expression/create_case.html#ansys.scade.apitools.create.expression.create_case",
        "title": "ansys.scade.apitools.create.expression.create_case > ansys.scade.apitools.create.expression.create_case > create_case",
        "section": "ansys.scade.apitools.create.expression.create_case > create_case",
        "text": "ansys.scade.apitools.create.expression.create_case(selector: EX, cases: List[Tuple[EX, EX]], default: EX | None = None) -> ET\n\nReturn the expression tree for the case operator."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_case",
        "href": "api/ansys/scade/apitools/create/expression/create_case.html#notes",
        "title": "ansys.scade.apitools.create.expression.create_case > Notes",
        "section": "Notes",
        "text": "This is an interface change with respect to the SCADE Creation Library.\nThe pairs “pattern”/”value” are now embedded in a list of tuples, and the\ndefault value is optional.\nNotes"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_case",
        "href": "api/ansys/scade/apitools/create/expression/create_case.html#parameters",
        "title": "ansys.scade.apitools.create.expression.create_case > Parameters",
        "section": "Parameters",
        "text": "Expression tree corresponding to the selector.\nPattern/values expression trees.\nDefault value.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_case",
        "href": "api/ansys/scade/apitools/create/expression/create_case.html#returns",
        "title": "ansys.scade.apitools.create.expression.create_case > Returns",
        "section": "Returns",
        "text": "ET\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/IteratorOp",
        "href": "api/ansys/scade/apitools/expr/access/IteratorOp.html#iteratorop",
        "title": "IteratorOp",
        "section": "IteratorOp",
        "text": "Bases: OpOp\nProvides the base class for iteration operators.\nSee the iterator_op example.\nIteratorOp\nIteratorOp\nOpOp"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/IteratorOp",
        "href": "api/ansys/scade/apitools/expr/access/IteratorOp.html#ansys.scade.apitools.expr.access.IteratorOp",
        "title": "IteratorOp > IteratorOp > IteratorOp",
        "section": "IteratorOp > IteratorOp",
        "text": "class ansys.scade.apitools.expr.access.IteratorOp(expression: scade.model.suite.ExprCall, operator: CallExpression)\n\nBases: OpOp\n\nProvides the base class for iteration operators.\n\nSee the iterator_op example."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/IteratorOp",
        "href": "api/ansys/scade/apitools/expr/access/IteratorOp.html#parameters",
        "title": "IteratorOp > Parameters",
        "section": "Parameters",
        "text": "Higher-order expression to wrap.\nOperator call expression.\nInitialize the instance from the Scade expression.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/IteratorOp",
        "href": "api/ansys/scade/apitools/expr/access/IteratorOp.html#overview",
        "title": "IteratorOp > Overview",
        "section": "Overview",
        "text": "accumulator_count\nNumber of accumulators when suitable, otherwise None.\nsize\nSize of the iterator.\nOverview\naccumulator_count\nNone\nsize"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/IteratorOp",
        "href": "api/ansys/scade/apitools/expr/access/IteratorOp.html#import-detail",
        "title": "IteratorOp > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/IteratorOp",
        "href": "api/ansys/scade/apitools/expr/access/IteratorOp.html#property-detail",
        "title": "IteratorOp > Property detail",
        "section": "Property detail",
        "text": "Number of accumulators when suitable, otherwise None.\nSize of the iterator.\nProperty detail\nNone"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/IteratorOp",
        "href": "api/ansys/scade/apitools/expr/access/IteratorOp.html#IteratorOp.accumulator_count",
        "title": "IteratorOp > Property detail > accumulator_count",
        "section": "Property detail > accumulator_count",
        "text": "property IteratorOp.accumulator_count: Expression | None\n\nNumber of accumulators when suitable, otherwise None."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/IteratorOp",
        "href": "api/ansys/scade/apitools/expr/access/IteratorOp.html#IteratorOp.size",
        "title": "IteratorOp > Property detail > size",
        "section": "Property detail > size",
        "text": "property IteratorOp.size: Expression\n\nSize of the iterator."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/Expression",
        "href": "api/ansys/scade/apitools/expr/access/Expression.html#expression",
        "title": "Expression",
        "section": "Expression",
        "text": "Provides the top-level abstract class for the expression accessors.\nExpression\nExpression"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/Expression",
        "href": "api/ansys/scade/apitools/expr/access/Expression.html#ansys.scade.apitools.expr.access.Expression",
        "title": "Expression > Expression > Expression",
        "section": "Expression > Expression",
        "text": "class ansys.scade.apitools.expr.access.Expression(expression: scade.model.suite.Expression)\n\nProvides the top-level abstract class for the expression accessors."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/Expression",
        "href": "api/ansys/scade/apitools/expr/access/Expression.html#parameters",
        "title": "Expression > Parameters",
        "section": "Parameters",
        "text": "Expression to wrap.\nStore the wrapped expression.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/Expression",
        "href": "api/ansys/scade/apitools/expr/access/Expression.html#overview",
        "title": "Expression > Overview",
        "section": "Overview",
        "text": "expression\nOverview\nexpression"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/Expression",
        "href": "api/ansys/scade/apitools/expr/access/Expression.html#import-detail",
        "title": "Expression > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/Expression",
        "href": "api/ansys/scade/apitools/expr/access/Expression.html#attribute-detail",
        "title": "Expression > Attribute detail",
        "section": "Attribute detail",
        "text": "Attribute detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/Expression",
        "href": "api/ansys/scade/apitools/expr/access/Expression.html#Expression.expression",
        "title": "Expression > Attribute detail > expression",
        "section": "Attribute detail > expression",
        "text": "Expression.expression\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/NumericCastOp",
        "href": "api/ansys/scade/apitools/expr/access/NumericCastOp.html#numericcastop",
        "title": "NumericCastOp",
        "section": "NumericCastOp",
        "text": "Bases: FlowOp\nProvides the numeric cast of a flow.\nSee the numeric_cast_op example.\nNumericCastOp\nNumericCastOp\nFlowOp"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/NumericCastOp",
        "href": "api/ansys/scade/apitools/expr/access/NumericCastOp.html#ansys.scade.apitools.expr.access.NumericCastOp",
        "title": "NumericCastOp > NumericCastOp > NumericCastOp",
        "section": "NumericCastOp > NumericCastOp",
        "text": "class ansys.scade.apitools.expr.access.NumericCastOp(expression: scade.model.suite.ExprCall)\n\nBases: FlowOp\n\nProvides the numeric cast of a flow.\n\nSee the numeric_cast_op example."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/NumericCastOp",
        "href": "api/ansys/scade/apitools/expr/access/NumericCastOp.html#parameters",
        "title": "NumericCastOp > Parameters",
        "section": "Parameters",
        "text": "Call expression to wrap.\nInitialize the instance from the Scade expression.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/NumericCastOp",
        "href": "api/ansys/scade/apitools/expr/access/NumericCastOp.html#overview",
        "title": "NumericCastOp > Overview",
        "section": "Overview",
        "text": "type_\nConversion type.\nOverview\ntype_"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/NumericCastOp",
        "href": "api/ansys/scade/apitools/expr/access/NumericCastOp.html#import-detail",
        "title": "NumericCastOp > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/NumericCastOp",
        "href": "api/ansys/scade/apitools/expr/access/NumericCastOp.html#property-detail",
        "title": "NumericCastOp > Property detail",
        "section": "Property detail",
        "text": "Conversion type.\nProperty detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/NumericCastOp",
        "href": "api/ansys/scade/apitools/expr/access/NumericCastOp.html#NumericCastOp.type_",
        "title": "NumericCastOp > Property detail > type_",
        "section": "Property detail > type_",
        "text": "property NumericCastOp.type_: scade.model.suite.Type\n\nConversion type."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/WhenBranch",
        "href": "api/ansys/scade/apitools/create/data_def/WhenBranch.html#whenbranch",
        "title": "WhenBranch",
        "section": "WhenBranch",
        "text": "Provides the intermediate class for when branches.\nStore the attributes.\nWhenBranch\nWhenBranch"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/WhenBranch",
        "href": "api/ansys/scade/apitools/create/data_def/WhenBranch.html#ansys.scade.apitools.create.data_def.WhenBranch",
        "title": "WhenBranch > WhenBranch > WhenBranch",
        "section": "WhenBranch > WhenBranch",
        "text": "class ansys.scade.apitools.create.data_def.WhenBranch(pattern: ansys.scade.apitools.create.expression.EX, position: Tuple[float, float] = (0, 0), size: Tuple[float, float] = (0, 0), display: DK = DK.GRAPHICAL, label_width: int = 0)\n\nProvides the intermediate class for when branches.\n\nStore the attributes."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/WhenBranch",
        "href": "api/ansys/scade/apitools/create/data_def/WhenBranch.html#overview",
        "title": "WhenBranch > Overview",
        "section": "Overview",
        "text": "display\nlabel_width\npattern\nposition\nsize\nOverview\ndisplay\nlabel_width\npattern\nposition\nsize"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/WhenBranch",
        "href": "api/ansys/scade/apitools/create/data_def/WhenBranch.html#import-detail",
        "title": "WhenBranch > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/WhenBranch",
        "href": "api/ansys/scade/apitools/create/data_def/WhenBranch.html#attribute-detail",
        "title": "WhenBranch > Attribute detail",
        "section": "Attribute detail",
        "text": "Attribute detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/WhenBranch",
        "href": "api/ansys/scade/apitools/create/data_def/WhenBranch.html#WhenBranch.display",
        "title": "WhenBranch > Attribute detail > display",
        "section": "Attribute detail > display",
        "text": "WhenBranch.display\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/WhenBranch",
        "href": "api/ansys/scade/apitools/create/data_def/WhenBranch.html#WhenBranch.label_width",
        "title": "WhenBranch > Attribute detail > label_width",
        "section": "Attribute detail > label_width",
        "text": "WhenBranch.label_width = 0\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/WhenBranch",
        "href": "api/ansys/scade/apitools/create/data_def/WhenBranch.html#WhenBranch.pattern",
        "title": "WhenBranch > Attribute detail > pattern",
        "section": "Attribute detail > pattern",
        "text": "WhenBranch.pattern\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/WhenBranch",
        "href": "api/ansys/scade/apitools/create/data_def/WhenBranch.html#WhenBranch.position",
        "title": "WhenBranch > Attribute detail > position",
        "section": "Attribute detail > position",
        "text": "WhenBranch.position = (0, 0)\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/WhenBranch",
        "href": "api/ansys/scade/apitools/create/data_def/WhenBranch.html#WhenBranch.size",
        "title": "WhenBranch > Attribute detail > size",
        "section": "Attribute detail > size",
        "text": "WhenBranch.size = (0, 0)\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ActivateNoInitOp",
        "href": "api/ansys/scade/apitools/expr/access/ActivateNoInitOp.html#activatenoinitop",
        "title": "ActivateNoInitOp",
        "section": "ActivateNoInitOp",
        "text": "Bases: CondactOp\nProvides activation of an operator with default values.\nSee the activate_no_init_op example.\nActivateNoInitOp\nActivateNoInitOp\nCondactOp"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ActivateNoInitOp",
        "href": "api/ansys/scade/apitools/expr/access/ActivateNoInitOp.html#ansys.scade.apitools.expr.access.ActivateNoInitOp",
        "title": "ActivateNoInitOp > ActivateNoInitOp > ActivateNoInitOp",
        "section": "ActivateNoInitOp > ActivateNoInitOp",
        "text": "class ansys.scade.apitools.expr.access.ActivateNoInitOp(expression: scade.model.suite.ExprCall, operator: CallExpression)\n\nBases: CondactOp\n\nProvides activation of an operator with default values.\n\nSee the activate_no_init_op example."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ActivateNoInitOp",
        "href": "api/ansys/scade/apitools/expr/access/ActivateNoInitOp.html#parameters",
        "title": "ActivateNoInitOp > Parameters",
        "section": "Parameters",
        "text": "Higher-order expression to wrap.\nOperator call expression.\nInitialize the instance from the Scade expression.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ActivateNoInitOp",
        "href": "api/ansys/scade/apitools/expr/access/ActivateNoInitOp.html#import-detail",
        "title": "ActivateNoInitOp > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_activate",
        "href": "api/ansys/scade/apitools/create/expression/create_activate.html#ansysscadeapitoolscreateexpressioncreate_activate",
        "title": "ansys.scade.apitools.create.expression.create_activate",
        "section": "ansys.scade.apitools.create.expression.create_activate",
        "text": "Return the expression tree for the higher-order construct for activating with initial values.\nansys.scade.apitools.create.expression.create_activate"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_activate",
        "href": "api/ansys/scade/apitools/create/expression/create_activate.html#ansys.scade.apitools.create.expression.create_activate",
        "title": "ansys.scade.apitools.create.expression.create_activate > ansys.scade.apitools.create.expression.create_activate > create_activate",
        "section": "ansys.scade.apitools.create.expression.create_activate > create_activate",
        "text": "ansys.scade.apitools.create.expression.create_activate(every: EX, *args: EX) -> ET\n\nReturn the expression tree for the higher-order construct for activating with initial values."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_activate",
        "href": "api/ansys/scade/apitools/create/expression/create_activate.html#parameters",
        "title": "ansys.scade.apitools.create.expression.create_activate > Parameters",
        "section": "Parameters",
        "text": "Input condition.\nInitial values.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_activate",
        "href": "api/ansys/scade/apitools/create/expression/create_activate.html#returns",
        "title": "ansys.scade.apitools.create.expression.create_activate > Returns",
        "section": "Returns",
        "text": "ET\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_fby",
        "href": "api/ansys/scade/apitools/create/expression/create_fby.html#ansysscadeapitoolscreateexpressioncreate_fby",
        "title": "ansys.scade.apitools.create.expression.create_fby",
        "section": "ansys.scade.apitools.create.expression.create_fby",
        "text": "Return the expression tree for the init operator.\nansys.scade.apitools.create.expression.create_fby"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_fby",
        "href": "api/ansys/scade/apitools/create/expression/create_fby.html#ansys.scade.apitools.create.expression.create_fby",
        "title": "ansys.scade.apitools.create.expression.create_fby > ansys.scade.apitools.create.expression.create_fby > create_fby",
        "section": "ansys.scade.apitools.create.expression.create_fby > create_fby",
        "text": "ansys.scade.apitools.create.expression.create_fby(flows: LX, delay: EX, inits: LX) -> ET\n\nReturn the expression tree for the init operator."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_fby",
        "href": "api/ansys/scade/apitools/create/expression/create_fby.html#notes",
        "title": "ansys.scade.apitools.create.expression.create_fby > Notes",
        "section": "Notes",
        "text": "This is an interface change with respect to the SCADE Creation Library.\nThe flows and their initial values are now specified in two separate lists.\nNotes"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_fby",
        "href": "api/ansys/scade/apitools/create/expression/create_fby.html#parameters",
        "title": "ansys.scade.apitools.create.expression.create_fby > Parameters",
        "section": "Parameters",
        "text": "Input flows.\nDelay of the operator.\nInitial values.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_fby",
        "href": "api/ansys/scade/apitools/create/expression/create_fby.html#returns",
        "title": "ansys.scade.apitools.create.expression.create_fby > Returns",
        "section": "Returns",
        "text": "ET\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/info/install/index",
        "href": "api/ansys/scade/apitools/info/install/index.html#the-installpy-module",
        "title": "The install.py module",
        "section": "The install.py module",
        "text": "The install.py module\ninstall.py"
    },
    {
        "objectID": "api/ansys/scade/apitools/info/install/index",
        "href": "api/ansys/scade/apitools/info/install/index.html#summary",
        "title": "The install.py module > Summary",
        "section": "Summary",
        "text": "get_scade_home\nGet the SCADE installation directory.\nget_scade_properties\nGet the content of the properties in <home>/common/scade.properties as a dictionary.\nget_scade_version\nGet the version of SCADE.\nSummary\nget_scade_home\nget_scade_properties\n<home>/common/scade.properties\nget_scade_version"
    },
    {
        "objectID": "api/ansys/scade/apitools/info/install/index",
        "href": "api/ansys/scade/apitools/info/install/index.html#description",
        "title": "The install.py module > Description",
        "section": "Description",
        "text": "Provides access to SCADE installation information.\nDescription"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/index",
        "href": "api/ansys/scade/apitools/expr/predef/index.html#the-predefpy-module",
        "title": "The predef.py module",
        "section": "The predef.py module",
        "text": "The predef.py module\npredef.py"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/index",
        "href": "api/ansys/scade/apitools/expr/predef/index.html#summary",
        "title": "The predef.py module > Summary",
        "section": "Summary",
        "text": "Eck\nProvides an enum of predefined operators.\nSummary\nEck"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/predef/index",
        "href": "api/ansys/scade/apitools/expr/predef/index.html#description",
        "title": "The predef.py module > Description",
        "section": "Description",
        "text": "Provides numeric values for the predef_opr attribute from the suite.ExprCall.\nFor more information, see the SCADE Suite documentation:\n5 Specific Commands for Python Scripting > Access to Predefined Operators in Python Scripts.\nDescription\npredef_opr\nsuite.ExprCall\n5 Specific Commands for Python Scripting > Access to Predefined Operators in Python Scripts."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/add_enumeration_values",
        "href": "api/ansys/scade/apitools/create/declaration/add_enumeration_values.html#ansysscadeapitoolscreatedeclarationadd_enumeration_values",
        "title": "ansys.scade.apitools.create.declaration.add_enumeration_values",
        "section": "ansys.scade.apitools.create.declaration.add_enumeration_values",
        "text": "Add enumeration values to an enumeration type.\nansys.scade.apitools.create.declaration.add_enumeration_values"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/add_enumeration_values",
        "href": "api/ansys/scade/apitools/create/declaration/add_enumeration_values.html#ansys.scade.apitools.create.declaration.add_enumeration_values",
        "title": "ansys.scade.apitools.create.declaration.add_enumeration_values > ansys.scade.apitools.create.declaration.add_enumeration_values > add_enumeration_values",
        "section": "ansys.scade.apitools.create.declaration.add_enumeration_values > add_enumeration_values",
        "text": "ansys.scade.apitools.create.declaration.add_enumeration_values(type_: scade.model.suite.NamedType, values: List[str], insert_before: str | None)\n\nAdd enumeration values to an enumeration type."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/add_enumeration_values",
        "href": "api/ansys/scade/apitools/create/declaration/add_enumeration_values.html#parameters",
        "title": "ansys.scade.apitools.create.declaration.add_enumeration_values > Parameters",
        "section": "Parameters",
        "text": "Named type defining the enumeration.\nList of the enumeration values to add.\nInsertion point of the values. When this parameter is not None\nand exists, the values are inserted before this value. Otherwise,\nthe values are added at the end.\nParameters\nNone"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/AryOp",
        "href": "api/ansys/scade/apitools/expr/access/AryOp.html#aryop",
        "title": "AryOp",
        "section": "AryOp",
        "text": "Bases: CallExpression\nProvides the abstract class for unary, binary, and nary operators.\nAryOp\nAryOp\nCallExpression"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/AryOp",
        "href": "api/ansys/scade/apitools/expr/access/AryOp.html#ansys.scade.apitools.expr.access.AryOp",
        "title": "AryOp > AryOp > AryOp",
        "section": "AryOp > AryOp",
        "text": "class ansys.scade.apitools.expr.access.AryOp(expression: scade.model.suite.ExprCall)\n\nBases: CallExpression\n\nProvides the abstract class for unary, binary, and nary operators."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/AryOp",
        "href": "api/ansys/scade/apitools/expr/access/AryOp.html#parameters",
        "title": "AryOp > Parameters",
        "section": "Parameters",
        "text": "Call expression to wrap.\nInitialize the instance from the Scade expression.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/AryOp",
        "href": "api/ansys/scade/apitools/expr/access/AryOp.html#import-detail",
        "title": "AryOp > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "_examples/info",
        "href": "_examples/info.html#info",
        "title": "info",
        "section": "info",
        "text": "project: Info.etp\nOutput:\nOutput:\nOutput:\nOutput:\nOutput:\ninfo"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/create_if_action",
        "href": "api/ansys/scade/apitools/create/data_def/create_if_action.html#ansysscadeapitoolscreatedata_defcreate_if_action",
        "title": "ansys.scade.apitools.create.data_def.create_if_action",
        "section": "ansys.scade.apitools.create.data_def.create_if_action",
        "text": "Create a leaf action in the intermediate structure if it is a tree structure.\nThe graphical properties are expressed 1/100th of mm.\nThey are considered if and only if the owning if block\nhas a graphical representation.\nansys.scade.apitools.create.data_def.create_if_action"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/create_if_action",
        "href": "api/ansys/scade/apitools/create/data_def/create_if_action.html#ansys.scade.apitools.create.data_def.create_if_action",
        "title": "ansys.scade.apitools.create.data_def.create_if_action > ansys.scade.apitools.create.data_def.create_if_action > create_if_action",
        "section": "ansys.scade.apitools.create.data_def.create_if_action > create_if_action",
        "text": "ansys.scade.apitools.create.data_def.create_if_action(position: Tuple[float, float] = (0, 0), size: Tuple[float, float] = (0, 0), display: DK = DK.GRAPHICAL) -> IT\n\nCreate a leaf action in the intermediate structure if it is a tree structure.\n\nThe graphical properties are expressed 1/100th of mm.\n\nThey are considered if and only if the owning if block\nhas a graphical representation."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/create_if_action",
        "href": "api/ansys/scade/apitools/create/data_def/create_if_action.html#parameters",
        "title": "ansys.scade.apitools.create.data_def.create_if_action > Parameters",
        "section": "Parameters",
        "text": "Position of the action.\nSize of the action.\nLayout of the action.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/create_if_action",
        "href": "api/ansys/scade/apitools/create/data_def/create_if_action.html#returns",
        "title": "ansys.scade.apitools.create.data_def.create_if_action > Returns",
        "section": "Returns",
        "text": "IT\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_data_def_net_diagram",
        "href": "api/ansys/scade/apitools/create/data_def/add_data_def_net_diagram.html#ansysscadeapitoolscreatedata_defadd_data_def_net_diagram",
        "title": "ansys.scade.apitools.create.data_def.add_data_def_net_diagram",
        "section": "ansys.scade.apitools.create.data_def.add_data_def_net_diagram",
        "text": "Add a graphical diagram to a scope.\nansys.scade.apitools.create.data_def.add_data_def_net_diagram"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_data_def_net_diagram",
        "href": "api/ansys/scade/apitools/create/data_def/add_data_def_net_diagram.html#ansys.scade.apitools.create.data_def.add_data_def_net_diagram",
        "title": "ansys.scade.apitools.create.data_def.add_data_def_net_diagram > ansys.scade.apitools.create.data_def.add_data_def_net_diagram > add_data_def_net_diagram",
        "section": "ansys.scade.apitools.create.data_def.add_data_def_net_diagram > add_data_def_net_diagram",
        "text": "ansys.scade.apitools.create.data_def.add_data_def_net_diagram(data_def: scade.model.suite.DataDef, name: str) -> scade.model.suite.NetDiagram\n\nAdd a graphical diagram to a scope."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_data_def_net_diagram",
        "href": "api/ansys/scade/apitools/create/data_def/add_data_def_net_diagram.html#parameters",
        "title": "ansys.scade.apitools.create.data_def.add_data_def_net_diagram > Parameters",
        "section": "Parameters",
        "text": "Input scope, which is an operator, state, or action.\nName of the diagram.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_data_def_net_diagram",
        "href": "api/ansys/scade/apitools/create/data_def/add_data_def_net_diagram.html#returns",
        "title": "ansys.scade.apitools.create.data_def.add_data_def_net_diagram > Returns",
        "section": "Returns",
        "text": "suite.NetDiagram\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_foldw",
        "href": "api/ansys/scade/apitools/create/expression/create_foldw.html#ansysscadeapitoolscreateexpressioncreate_foldw",
        "title": "ansys.scade.apitools.create.expression.create_foldw",
        "section": "ansys.scade.apitools.create.expression.create_foldw",
        "text": "Return the expression tree for the higher-order construct for foldw creation.\nansys.scade.apitools.create.expression.create_foldw"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_foldw",
        "href": "api/ansys/scade/apitools/create/expression/create_foldw.html#ansys.scade.apitools.create.expression.create_foldw",
        "title": "ansys.scade.apitools.create.expression.create_foldw > ansys.scade.apitools.create.expression.create_foldw > create_foldw",
        "section": "ansys.scade.apitools.create.expression.create_foldw > create_foldw",
        "text": "ansys.scade.apitools.create.expression.create_foldw(size: EX, condition: EX) -> ET\n\nReturn the expression tree for the higher-order construct for foldw creation."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_foldw",
        "href": "api/ansys/scade/apitools/create/expression/create_foldw.html#parameters",
        "title": "ansys.scade.apitools.create.expression.create_foldw > Parameters",
        "section": "Parameters",
        "text": "Number of iterations.\nInitial value of the iteration condition.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_foldw",
        "href": "api/ansys/scade/apitools/create/expression/create_foldw.html#returns",
        "title": "ansys.scade.apitools.create.expression.create_foldw > Returns",
        "section": "Returns",
        "text": "ET\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_restart",
        "href": "api/ansys/scade/apitools/create/expression/create_restart.html#ansysscadeapitoolscreateexpressioncreate_restart",
        "title": "ansys.scade.apitools.create.expression.create_restart",
        "section": "ansys.scade.apitools.create.expression.create_restart",
        "text": "Return the expression tree for the higher-order construct for restarting.\nansys.scade.apitools.create.expression.create_restart"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_restart",
        "href": "api/ansys/scade/apitools/create/expression/create_restart.html#ansys.scade.apitools.create.expression.create_restart",
        "title": "ansys.scade.apitools.create.expression.create_restart > ansys.scade.apitools.create.expression.create_restart > create_restart",
        "section": "ansys.scade.apitools.create.expression.create_restart > create_restart",
        "text": "ansys.scade.apitools.create.expression.create_restart(every: EX) -> ET\n\nReturn the expression tree for the higher-order construct for restarting."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_restart",
        "href": "api/ansys/scade/apitools/create/expression/create_restart.html#parameters",
        "title": "ansys.scade.apitools.create.expression.create_restart > Parameters",
        "section": "Parameters",
        "text": "Input condition.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_restart",
        "href": "api/ansys/scade/apitools/create/expression/create_restart.html#returns",
        "title": "ansys.scade.apitools.create.expression.create_restart > Returns",
        "section": "Returns",
        "text": "ET\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_mapfoldi",
        "href": "api/ansys/scade/apitools/create/expression/create_mapfoldi.html#ansysscadeapitoolscreateexpressioncreate_mapfoldi",
        "title": "ansys.scade.apitools.create.expression.create_mapfoldi",
        "section": "ansys.scade.apitools.create.expression.create_mapfoldi",
        "text": "Return the expression tree for the higher-order construct for mapfoldi creation.\nansys.scade.apitools.create.expression.create_mapfoldi"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_mapfoldi",
        "href": "api/ansys/scade/apitools/create/expression/create_mapfoldi.html#ansys.scade.apitools.create.expression.create_mapfoldi",
        "title": "ansys.scade.apitools.create.expression.create_mapfoldi > ansys.scade.apitools.create.expression.create_mapfoldi > create_mapfoldi",
        "section": "ansys.scade.apitools.create.expression.create_mapfoldi > create_mapfoldi",
        "text": "ansys.scade.apitools.create.expression.create_mapfoldi(size: EX, acc: EX) -> ET\n\nReturn the expression tree for the higher-order construct for mapfoldi creation."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_mapfoldi",
        "href": "api/ansys/scade/apitools/create/expression/create_mapfoldi.html#parameters",
        "title": "ansys.scade.apitools.create.expression.create_mapfoldi > Parameters",
        "section": "Parameters",
        "text": "Number of iterations.\nNumber of accumulators.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_mapfoldi",
        "href": "api/ansys/scade/apitools/create/expression/create_mapfoldi.html#returns",
        "title": "ansys.scade.apitools.create.expression.create_mapfoldi > Returns",
        "section": "Returns",
        "text": "ET\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/prop/index",
        "href": "api/ansys/scade/apitools/prop/index.html#the-prop-package",
        "title": "The prop package",
        "section": "The prop package",
        "text": "The prop package\nprop"
    },
    {
        "objectID": "api/ansys/scade/apitools/prop/index",
        "href": "api/ansys/scade/apitools/prop/index.html#summary",
        "title": "The prop package > Summary",
        "section": "Summary",
        "text": "pragma\nProvides accessors for textual pragmas.\nSummary\npragma"
    },
    {
        "objectID": "api/ansys/scade/apitools/prop/index",
        "href": "api/ansys/scade/apitools/prop/index.html#description",
        "title": "The prop package > Description",
        "section": "Description",
        "text": "Provides a collection of functions for the storage of settings and properties.\nDescription"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/scade/add_element_to_project",
        "href": "api/ansys/scade/apitools/create/scade/add_element_to_project.html#ansysscadeapitoolscreatescadeadd_element_to_project",
        "title": "ansys.scade.apitools.create.scade.add_element_to_project",
        "section": "ansys.scade.apitools.create.scade.add_element_to_project",
        "text": "Add the file defining the storage element to the project.\nThe file is added if and only if it is not already present.\nIf the file is present, the folder and default parameters\nare ignored.\nWhen the folder parameter is not None, the file is added to the\nfolder specified.\nWhen the default parameter is True, the file is added to either the\n“Model Files” or “Separate Files” folder, depending on the nature of the\nstorage unit.\nOtherwise, the file is added to the project as a root element.\nansys.scade.apitools.create.scade.add_element_to_project\nfolder\ndefault\nfolder\nNone\ndefault\nTrue"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/scade/add_element_to_project",
        "href": "api/ansys/scade/apitools/create/scade/add_element_to_project.html#ansys.scade.apitools.create.scade.add_element_to_project",
        "title": "ansys.scade.apitools.create.scade.add_element_to_project > ansys.scade.apitools.create.scade.add_element_to_project > add_element_to_project",
        "section": "ansys.scade.apitools.create.scade.add_element_to_project > add_element_to_project",
        "text": "ansys.scade.apitools.create.scade.add_element_to_project(project: scade.model.project.stdproject.Project, element: scade.model.suite.StorageElement, folder: scade.model.project.stdproject.Folder | None = None, default: bool = True) -> scade.model.project.stdproject.FileRef\n\nAdd the file defining the storage element to the project.\n\nThe file is added if and only if it is not already present.\nIf the file is present, the folder and default parameters\nare ignored.\n\nWhen the folder parameter is not None, the file is added to the\nfolder specified.\n\nWhen the default parameter is True, the file is added to either the\n“Model Files” or “Separate Files” folder, depending on the nature of the\nstorage unit.\n\nOtherwise, the file is added to the project as a root element."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/scade/add_element_to_project",
        "href": "api/ansys/scade/apitools/create/scade/add_element_to_project.html#parameters",
        "title": "ansys.scade.apitools.create.scade.add_element_to_project > Parameters",
        "section": "Parameters",
        "text": "Project to modify.\nElement with storage unit to add to the project.\nIf the storage unit is not a root element, the added file is\ntagged as NONROOT for SCADE.\nParent folder of the file to add to the project.\nWhether to add the file to one of the default folders\nfor SCADE Suite files.\nParameters\nNONROOT"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/scade/add_element_to_project",
        "href": "api/ansys/scade/apitools/create/scade/add_element_to_project.html#returns",
        "title": "ansys.scade.apitools.create.scade.add_element_to_project > Returns",
        "section": "Returns",
        "text": "std.FileRef\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/project/create_folder",
        "href": "api/ansys/scade/apitools/create/project/create_folder.html#ansysscadeapitoolscreateprojectcreate_folder",
        "title": "ansys.scade.apitools.create.project.create_folder",
        "section": "ansys.scade.apitools.create.project.create_folder",
        "text": "Create a folder.\nA folder has a name and must be either a root folder of a project or\na subfolder of another folder.\nansys.scade.apitools.create.project.create_folder"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/project/create_folder",
        "href": "api/ansys/scade/apitools/create/project/create_folder.html#ansys.scade.apitools.create.project.create_folder",
        "title": "ansys.scade.apitools.create.project.create_folder > ansys.scade.apitools.create.project.create_folder > create_folder",
        "section": "ansys.scade.apitools.create.project.create_folder > create_folder",
        "text": "ansys.scade.apitools.create.project.create_folder(owner: scade.model.project.stdproject.Project | scade.model.project.stdproject.Folder, path: str | List[str], extensions: str = '') -> scade.model.project.stdproject.Folder\n\nCreate a folder.\n\nA folder has a name and must be either a root folder of a project or\na subfolder of another folder."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/project/create_folder",
        "href": "api/ansys/scade/apitools/create/project/create_folder.html#parameters",
        "title": "ansys.scade.apitools.create.project.create_folder > Parameters",
        "section": "Parameters",
        "text": "Owner of the folder, which is either the project itself or a folder.\nPath to or name of the folder. When a path is provided, the function\ncreates the intermediate folders that do not exist.\nString defining the extensions associated with the folder.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/project/create_folder",
        "href": "api/ansys/scade/apitools/create/project/create_folder.html#returns",
        "title": "ansys.scade.apitools.create.project.create_folder > Returns",
        "section": "Returns",
        "text": "Folder with the given path or name if this folder exists.\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/Last",
        "href": "api/ansys/scade/apitools/expr/access/Last.html#last",
        "title": "Last",
        "section": "Last",
        "text": "Bases: Expression\nProvides the last of a local variable.\nThe format is last '<variable>.\nSee the last example.\nLast\nLast\nExpression\nlast '<variable>"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/Last",
        "href": "api/ansys/scade/apitools/expr/access/Last.html#ansys.scade.apitools.expr.access.Last",
        "title": "Last > Last > Last",
        "section": "Last > Last",
        "text": "class ansys.scade.apitools.expr.access.Last(expression: scade.model.suite.ExprId)\n\nBases: Expression\n\nProvides the last of a local variable.\n\nThe format is last '<variable>.\n\nSee the last example."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/Last",
        "href": "api/ansys/scade/apitools/expr/access/Last.html#parameters",
        "title": "Last > Parameters",
        "section": "Parameters",
        "text": "Last variable expression to wrap.\nInitialize the instance from the Scade expression.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/Last",
        "href": "api/ansys/scade/apitools/expr/access/Last.html#overview",
        "title": "Last > Overview",
        "section": "Overview",
        "text": "variable\nLocal variable of the expression.\nOverview\nvariable"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/Last",
        "href": "api/ansys/scade/apitools/expr/access/Last.html#import-detail",
        "title": "Last > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/Last",
        "href": "api/ansys/scade/apitools/expr/access/Last.html#property-detail",
        "title": "Last > Property detail",
        "section": "Property detail",
        "text": "Local variable of the expression.\nProperty detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/Last",
        "href": "api/ansys/scade/apitools/expr/access/Last.html#Last.variable",
        "title": "Last > Property detail > variable",
        "section": "Property detail > variable",
        "text": "property Last.variable: scade.model.suite.LocalVariable\n\nLocal variable of the expression."
    },
    {
        "objectID": "api/ansys/scade/apitools/index",
        "href": "api/ansys/scade/apitools/index.html#the-ansysscadeapitools-library",
        "title": "The ansys.scade.apitools library",
        "section": "The ansys.scade.apitools library",
        "text": "The ansys.scade.apitools library\nansys.scade.apitools"
    },
    {
        "objectID": "api/ansys/scade/apitools/index",
        "href": "api/ansys/scade/apitools/index.html#summary",
        "title": "The ansys.scade.apitools library > Summary",
        "section": "Summary",
        "text": "create\nProvides a collection of functions for creating or updating Scade models.\nexpr\nProvides a collection of functions for the accessing the expressions.\ninfo\nProvides information on the current version of SCADE.\nprop\nProvides a collection of functions for the storage of settings and properties.\nquery\nProvides a collection of queries for SCADE Suite models.\nauto_scade_env\nProvides scade_env.load_project, renamed to declare_project.\n__version__\nSummary\ncreate\nexpr\ninfo\nprop\nquery\nauto_scade_env\nscade_env.load_project\ndeclare_project\n__version__"
    },
    {
        "objectID": "api/ansys/scade/apitools/index",
        "href": "api/ansys/scade/apitools/index.html#description",
        "title": "The ansys.scade.apitools library > Description",
        "section": "Description",
        "text": "Provides a library of high-level functions on top of SCADE Python APIs.\nDescription"
    },
    {
        "objectID": "api/ansys/scade/apitools/index",
        "href": "api/ansys/scade/apitools/index.html#module-detail",
        "title": "The ansys.scade.apitools library > Module detail",
        "section": "Module detail",
        "text": "Module detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/index",
        "href": "api/ansys/scade/apitools/index.html#apitools.__version__",
        "title": "The ansys.scade.apitools library > Module detail > __version__",
        "section": "Module detail > __version__",
        "text": "apitools.__version__\n\n"
    },
    {
        "objectID": "user_guide/index",
        "href": "user_guide/index.html#user-guide",
        "title": "User guide",
        "section": "User guide",
        "text": "This section describes SCADE scripting and how to create SCADE models.\nUser guide"
    },
    {
        "objectID": "changelog",
        "href": "changelog.html#release-notes",
        "title": "Release notes",
        "section": "Release notes",
        "text": "This document contains the release notes for the project.\nRelease notes"
    },
    {
        "objectID": "changelog",
        "href": "changelog.html#062---september-02-2025",
        "title": "Release notes > 0.6.2 - September 02, 2025",
        "section": "0.6.2 - September 02, 2025",
        "text": "Fix: Remove debug trace\n#127\nFix: Add a function to create numeric cast expressions\n#131\n0.6.2 - September 02, 2025"
    },
    {
        "objectID": "changelog",
        "href": "changelog.html#060---july-18-2025",
        "title": "Release notes > 0.6.0 - July 18, 2025",
        "section": "0.6.0 - July 18, 2025",
        "text": "build(deps): bump the dependencies group with 3 updates\n#107\nbuild(deps): bump pytest-cov from 6.0.0 to 6.1.1 in the dependencies group\n#109\nCi: bump ansys/actions from 9 to 10 in the actions group\n#113\nBuild(deps): bump the dependencies group with 3 updates\n#114\nFix: do not add _ pattern to case constructs with default.\n#118\nFix: add diagram missing edges fails when there are constants in the diagram\n#121\nchore: update CHANGELOG for v0.5.0\n#106\ndocs: Update CONTRIBUTORS.md with the latest contributors\n#108\nci: bump ansys/actions from 8 to 9 in the actions group\n#110\nFix: update typing annotations and fix linter errors.\n#115\n0.6.0 - July 18, 2025\nCONTRIBUTORS.md"
    },
    {
        "objectID": "changelog",
        "href": "changelog.html#050---march-24-2025",
        "title": "Release notes > 0.5.0 - March 24, 2025",
        "section": "0.5.0 - March 24, 2025",
        "text": "build(deps): bump the dependencies group with 2 updates\n#102, #103\nchore: Upgrade the repository configuration\n#97\nci: Fix release steps\n#105\nchore: Enable Python 3.12 and greater\n#104\n0.5.0 - March 24, 2025"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/OpOp",
        "href": "api/ansys/scade/apitools/expr/access/OpOp.html#opop",
        "title": "OpOp",
        "section": "OpOp",
        "text": "Bases: CallExpression\nProvides the abstract class for higher-order operators.\nOpOp\nOpOp\nCallExpression"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/OpOp",
        "href": "api/ansys/scade/apitools/expr/access/OpOp.html#ansys.scade.apitools.expr.access.OpOp",
        "title": "OpOp > OpOp > OpOp",
        "section": "OpOp > OpOp",
        "text": "class ansys.scade.apitools.expr.access.OpOp(expression: scade.model.suite.ExprCall, operator: CallExpression)\n\nBases: CallExpression\n\nProvides the abstract class for higher-order operators."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/OpOp",
        "href": "api/ansys/scade/apitools/expr/access/OpOp.html#notes",
        "title": "OpOp > Notes",
        "section": "Notes",
        "text": "The design differs slightly from the meta-model. The OpOp class is\nno longer aggregated by the CallExpression class but derives from it.\nThis leads to a simpler design.\nNotes\nOpOp\nCallExpression"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/OpOp",
        "href": "api/ansys/scade/apitools/expr/access/OpOp.html#parameters",
        "title": "OpOp > Parameters",
        "section": "Parameters",
        "text": "Higher-order expression to wrap.\nOperator call expression.\nInitialize the instance from the Scade expression.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/OpOp",
        "href": "api/ansys/scade/apitools/expr/access/OpOp.html#overview",
        "title": "OpOp > Overview",
        "section": "Overview",
        "text": "operator\nUnderlying expression.\nOverview\noperator"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/OpOp",
        "href": "api/ansys/scade/apitools/expr/access/OpOp.html#import-detail",
        "title": "OpOp > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/OpOp",
        "href": "api/ansys/scade/apitools/expr/access/OpOp.html#property-detail",
        "title": "OpOp > Property detail",
        "section": "Property detail",
        "text": "Underlying expression.\nProperty detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/OpOp",
        "href": "api/ansys/scade/apitools/expr/access/OpOp.html#OpOp.operator",
        "title": "OpOp > Property detail > operator",
        "section": "Property detail > operator",
        "text": "property OpOp.operator: CallExpression\n\nUnderlying expression."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/project/index",
        "href": "api/ansys/scade/apitools/create/project/index.html#the-projectpy-module",
        "title": "The project.py module",
        "section": "The project.py module",
        "text": "The project.py module\nproject.py"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/project/index",
        "href": "api/ansys/scade/apitools/create/project/index.html#summary",
        "title": "The project.py module > Summary",
        "section": "Summary",
        "text": "create_configuration\nCreate a configuration.\ncreate_file_ref\nCreate file reference.\ncreate_folder\nCreate a folder.\ncreate_prop\nCreate a property.\nsave_project\nSave the project.\nSummary\ncreate_configuration\ncreate_file_ref\ncreate_folder\ncreate_prop\nsave_project"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/project/index",
        "href": "api/ansys/scade/apitools/create/project/index.html#description",
        "title": "The project.py module > Description",
        "section": "Description",
        "text": "Provides functions for adding elements to a SCADE project (ETP file).\nThese functions do not check for semantic errors, like adding two files with the same path.\nDescription"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_numeric_cast",
        "href": "api/ansys/scade/apitools/create/expression/create_numeric_cast.html#ansysscadeapitoolscreateexpressioncreate_numeric_cast",
        "title": "ansys.scade.apitools.create.expression.create_numeric_cast",
        "section": "ansys.scade.apitools.create.expression.create_numeric_cast",
        "text": "Return the expression tree for casting a numerical value.\nansys.scade.apitools.create.expression.create_numeric_cast"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_numeric_cast",
        "href": "api/ansys/scade/apitools/create/expression/create_numeric_cast.html#ansys.scade.apitools.create.expression.create_numeric_cast",
        "title": "ansys.scade.apitools.create.expression.create_numeric_cast > ansys.scade.apitools.create.expression.create_numeric_cast > create_numeric_cast",
        "section": "ansys.scade.apitools.create.expression.create_numeric_cast > create_numeric_cast",
        "text": "ansys.scade.apitools.create.expression.create_numeric_cast(type_: scade.model.suite.NamedType, arg: EX) -> ET\n\nReturn the expression tree for casting a numerical value."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_numeric_cast",
        "href": "api/ansys/scade/apitools/create/expression/create_numeric_cast.html#parameters",
        "title": "ansys.scade.apitools.create.expression.create_numeric_cast > Parameters",
        "section": "Parameters",
        "text": "Type to cast to.\nValue to cast.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_numeric_cast",
        "href": "api/ansys/scade/apitools/create/expression/create_numeric_cast.html#returns",
        "title": "ansys.scade.apitools.create.expression.create_numeric_cast > Returns",
        "section": "Returns",
        "text": "ET\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/IfTree",
        "href": "api/ansys/scade/apitools/create/data_def/IfTree.html#iftree",
        "title": "IfTree",
        "section": "IfTree",
        "text": "Bases: abc.ABC\nProvides an intermediate structure for describing the structure of an if block.\nStore the attributes.\nIfTree\nIfTree\nabc.ABC"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/IfTree",
        "href": "api/ansys/scade/apitools/create/data_def/IfTree.html#ansys.scade.apitools.create.data_def.IfTree",
        "title": "IfTree > IfTree > IfTree",
        "section": "IfTree > IfTree",
        "text": "class ansys.scade.apitools.create.data_def.IfTree(position: Tuple[float, float] = (0, 0))\n\nBases: abc.ABC\n\nProvides an intermediate structure for describing the structure of an if block.\n\nStore the attributes."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/IfTree",
        "href": "api/ansys/scade/apitools/create/data_def/IfTree.html#overview",
        "title": "IfTree > Overview",
        "section": "Overview",
        "text": "name\nposition\nOverview\nname\nposition"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/IfTree",
        "href": "api/ansys/scade/apitools/create/data_def/IfTree.html#import-detail",
        "title": "IfTree > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/IfTree",
        "href": "api/ansys/scade/apitools/create/data_def/IfTree.html#attribute-detail",
        "title": "IfTree > Attribute detail",
        "section": "Attribute detail",
        "text": "Attribute detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/IfTree",
        "href": "api/ansys/scade/apitools/create/data_def/IfTree.html#IfTree.name",
        "title": "IfTree > Attribute detail > name",
        "section": "Attribute detail > name",
        "text": "IfTree.name = ''\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/IfTree",
        "href": "api/ansys/scade/apitools/create/data_def/IfTree.html#IfTree.position",
        "title": "IfTree > Attribute detail > position",
        "section": "Attribute detail > position",
        "text": "IfTree.position = (0, 0)\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_nary",
        "href": "api/ansys/scade/apitools/create/expression/create_nary.html#ansysscadeapitoolscreateexpressioncreate_nary",
        "title": "ansys.scade.apitools.create.expression.create_nary",
        "section": "ansys.scade.apitools.create.expression.create_nary",
        "text": "Return the expression tree for a nary operator.\nansys.scade.apitools.create.expression.create_nary"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_nary",
        "href": "api/ansys/scade/apitools/create/expression/create_nary.html#ansys.scade.apitools.create.expression.create_nary",
        "title": "ansys.scade.apitools.create.expression.create_nary > ansys.scade.apitools.create.expression.create_nary > create_nary",
        "section": "ansys.scade.apitools.create.expression.create_nary > create_nary",
        "text": "ansys.scade.apitools.create.expression.create_nary(op: str, *args: EX, modifiers: ET | List[ET] | None = None) -> ET\n\nReturn the expression tree for a nary operator."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_nary",
        "href": "api/ansys/scade/apitools/create/expression/create_nary.html#parameters",
        "title": "ansys.scade.apitools.create.expression.create_nary > Parameters",
        "section": "Parameters",
        "text": "Nary operator to call: & | | | ^ | # | + | *\nOperands: expression trees.\nList of higher-order constructs, to be provided as keyword parameter.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_nary",
        "href": "api/ansys/scade/apitools/create/expression/create_nary.html#returns",
        "title": "ansys.scade.apitools.create.expression.create_nary > Returns",
        "section": "Returns",
        "text": "ET\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/index",
        "href": "api/ansys/scade/apitools/expr/index.html#the-expr-package",
        "title": "The expr package",
        "section": "The expr package",
        "text": "The expr package\nexpr"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/index",
        "href": "api/ansys/scade/apitools/expr/index.html#summary",
        "title": "The expr package > Summary",
        "section": "Summary",
        "text": "access\nProvides accessors for expressions.\npredef\nProvides numeric values for the predef_opr attribute from the suite.ExprCall.\nSummary\naccess\npredef\npredef_opr\nsuite.ExprCall"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/index",
        "href": "api/ansys/scade/apitools/expr/index.html#description",
        "title": "The expr package > Description",
        "section": "Description",
        "text": "Provides a collection of functions for the accessing the expressions.\nDescription"
    },
    {
        "objectID": "api/ansys/scade/apitools/query/type/get_leaf_type",
        "href": "api/ansys/scade/apitools/query/type/get_leaf_type.html#ansysscadeapitoolsquerytypeget_leaf_type",
        "title": "ansys.scade.apitools.query.type.get_leaf_type",
        "section": "ansys.scade.apitools.query.type.get_leaf_type",
        "text": "Get the definition of the input type, bypassing the aliases.\nSee the get_leaf_type example.\nansys.scade.apitools.query.type.get_leaf_type"
    },
    {
        "objectID": "api/ansys/scade/apitools/query/type/get_leaf_type",
        "href": "api/ansys/scade/apitools/query/type/get_leaf_type.html#ansys.scade.apitools.query.type.get_leaf_type",
        "title": "ansys.scade.apitools.query.type.get_leaf_type > ansys.scade.apitools.query.type.get_leaf_type > get_leaf_type",
        "section": "ansys.scade.apitools.query.type.get_leaf_type > get_leaf_type",
        "text": "ansys.scade.apitools.query.type.get_leaf_type(type_: scade.model.suite.Type) -> scade.model.suite.Type\n\nGet the definition of the input type, bypassing the aliases.\n\nSee the get_leaf_type example."
    },
    {
        "objectID": "api/ansys/scade/apitools/query/type/get_leaf_type",
        "href": "api/ansys/scade/apitools/query/type/get_leaf_type.html#parameters",
        "title": "ansys.scade.apitools.query.type.get_leaf_type > Parameters",
        "section": "Parameters",
        "text": "Input type.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/query/type/get_leaf_type",
        "href": "api/ansys/scade/apitools/query/type/get_leaf_type.html#returns",
        "title": "ansys.scade.apitools.query.type.get_leaf_type > Returns",
        "section": "Returns",
        "text": "Definition of the input type or the input type itself itself if it\nis not an alias, such as an instance of NamedType or a predefined\ntype. It is not a named type unless it is predefined.\nReturns\nNamedType"
    },
    {
        "objectID": "examples",
        "href": "examples.html#examples",
        "title": "Examples",
        "section": "Examples",
        "text": "This section provides examples organized by Scade models. These models are not\nnecessarily correct. They simply provide some data for the scripts to process.\nThe overall structure of an example script is as follows:\nRetrieve one or more Scade model elements from the project.\nApply a command from ansys.scade.apitools to these elements.\nPrint some feedback.\nThe examples for the create\npackage have a different design, described in the appropriate example sections.\nExamples\nansys.scade.apitools\ncreate"
    },
    {
        "objectID": "examples",
        "href": "examples.html#run-the-examples",
        "title": "Examples > Run the examples",
        "section": "Run the examples",
        "text": "For a reminder on SCADE Python scripts, see SCADE scripting.\nRun the examples"
    },
    {
        "objectID": "examples",
        "href": "examples.html#scade-gui",
        "title": "Examples > SCADE GUI",
        "section": "SCADE GUI",
        "text": "The examples associated with a Scade model are referenced in the project:\nLoad the model with the SCADE Suite.\nFrom the FileView, open any script.\nTo execute the script, select Tools > Execute script.\nIn the Output window, observe the result on the Script tab.\nSCADE GUI"
    },
    {
        "objectID": "examples",
        "href": "examples.html#scade-cli",
        "title": "Examples > SCADE CLI",
        "section": "SCADE CLI",
        "text": "The easiest way to use the SCADE CLI consists of setting the current directory to the\nconsidered example’s directory and running the scade.exe -script command:\nSCADE CLI\nscade.exe -script"
    },
    {
        "objectID": "examples",
        "href": "examples.html#python",
        "title": "Examples > Python",
        "section": "Python",
        "text": "You must declare the model to use to run the example prior to executing the script.\nChange the current directory to the considered example’s directory. For example, examples/query_type.\nRun a Python 3.7 or 3.10 session, depending on the SCADE release installed on your computer.\nDeclare the project.\nCopy/paste the content of a script or run it as follows:\nPython\nexamples/query_type"
    },
    {
        "objectID": "examples",
        "href": "examples.html#examples",
        "title": "Examples",
        "section": "Examples",
        "text": "Examples"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/type/create_sized",
        "href": "api/ansys/scade/apitools/create/type/create_sized.html#ansysscadeapitoolscreatetypecreate_sized",
        "title": "ansys.scade.apitools.create.type.create_sized",
        "section": "ansys.scade.apitools.create.type.create_sized",
        "text": "Get the type tree for a sized type.\nansys.scade.apitools.create.type.create_sized"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/type/create_sized",
        "href": "api/ansys/scade/apitools/create/type/create_sized.html#ansys.scade.apitools.create.type.create_sized",
        "title": "ansys.scade.apitools.create.type.create_sized > ansys.scade.apitools.create.type.create_sized > create_sized",
        "section": "ansys.scade.apitools.create.type.create_sized > create_sized",
        "text": "ansys.scade.apitools.create.type.create_sized(signed: bool, size: ansys.scade.apitools.create.expression.EX) -> TT\n\nGet the type tree for a sized type."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/type/create_sized",
        "href": "api/ansys/scade/apitools/create/type/create_sized.html#parameters",
        "title": "ansys.scade.apitools.create.type.create_sized > Parameters",
        "section": "Parameters",
        "text": "Whether the type is signed.\nSize of the type expressed as an expression tree.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/type/create_sized",
        "href": "api/ansys/scade/apitools/create/type/create_sized.html#returns",
        "title": "ansys.scade.apitools.create.type.create_sized > Returns",
        "section": "Returns",
        "text": "TT\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_data_def_signals",
        "href": "api/ansys/scade/apitools/create/data_def/add_data_def_signals.html#ansysscadeapitoolscreatedata_defadd_data_def_signals",
        "title": "ansys.scade.apitools.create.data_def.add_data_def_signals",
        "section": "ansys.scade.apitools.create.data_def.add_data_def_signals",
        "text": "Add signals to a scope.\nansys.scade.apitools.create.data_def.add_data_def_signals"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_data_def_signals",
        "href": "api/ansys/scade/apitools/create/data_def/add_data_def_signals.html#ansys.scade.apitools.create.data_def.add_data_def_signals",
        "title": "ansys.scade.apitools.create.data_def.add_data_def_signals > ansys.scade.apitools.create.data_def.add_data_def_signals > add_data_def_signals",
        "section": "ansys.scade.apitools.create.data_def.add_data_def_signals > add_data_def_signals",
        "text": "ansys.scade.apitools.create.data_def.add_data_def_signals(data_def: scade.model.suite.DataDef, names: List[str]) -> List[scade.model.suite.LocalVariable]\n\nAdd signals to a scope."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_data_def_signals",
        "href": "api/ansys/scade/apitools/create/data_def/add_data_def_signals.html#parameters",
        "title": "ansys.scade.apitools.create.data_def.add_data_def_signals > Parameters",
        "section": "Parameters",
        "text": "Input scope, which is an operator, state, or action.\nNames of the signals to add.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_data_def_signals",
        "href": "api/ansys/scade/apitools/create/data_def/add_data_def_signals.html#returns",
        "title": "ansys.scade.apitools.create.data_def.add_data_def_signals > Returns",
        "section": "Returns",
        "text": "List of added signals.\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/IllegalIOError",
        "href": "api/ansys/scade/apitools/create/declaration/IllegalIOError.html#illegalioerror",
        "title": "IllegalIOError",
        "section": "IllegalIOError",
        "text": "Bases: Exception\nProvides the exception for the wrong IO specification.\nProvide a customized message.\nIllegalIOError\nIllegalIOError\nException"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/IllegalIOError",
        "href": "api/ansys/scade/apitools/create/declaration/IllegalIOError.html#ansys.scade.apitools.create.declaration.IllegalIOError",
        "title": "IllegalIOError > IllegalIOError > IllegalIOError",
        "section": "IllegalIOError > IllegalIOError",
        "text": "exception ansys.scade.apitools.create.declaration.IllegalIOError(context, io, role)\n\nBases: Exception\n\nProvides the exception for the wrong IO specification.\n\nProvide a customized message."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/IllegalIOError",
        "href": "api/ansys/scade/apitools/create/declaration/IllegalIOError.html#import-detail",
        "title": "IllegalIOError > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/project/create_file_ref",
        "href": "api/ansys/scade/apitools/create/project/create_file_ref.html#ansysscadeapitoolscreateprojectcreate_file_ref",
        "title": "ansys.scade.apitools.create.project.create_file_ref",
        "section": "ansys.scade.apitools.create.project.create_file_ref",
        "text": "Create file reference.\nA file reference has a pathname and must be a file of either a project or a folder.\nansys.scade.apitools.create.project.create_file_ref"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/project/create_file_ref",
        "href": "api/ansys/scade/apitools/create/project/create_file_ref.html#ansys.scade.apitools.create.project.create_file_ref",
        "title": "ansys.scade.apitools.create.project.create_file_ref > ansys.scade.apitools.create.project.create_file_ref > create_file_ref",
        "section": "ansys.scade.apitools.create.project.create_file_ref > create_file_ref",
        "text": "ansys.scade.apitools.create.project.create_file_ref(owner: scade.model.project.stdproject.Project | scade.model.project.stdproject.Folder, persist_as: str) -> scade.model.project.stdproject.FileRef\n\nCreate file reference.\n\nA file reference has a pathname and must be a file of either a project or a folder."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/project/create_file_ref",
        "href": "api/ansys/scade/apitools/create/project/create_file_ref.html#parameters",
        "title": "ansys.scade.apitools.create.project.create_file_ref > Parameters",
        "section": "Parameters",
        "text": "Owner of the file, which is either the project itself or a folder.\nString representation of the reference to the file to store in the project’s file.\nThe string can be either a relative reference to the project or an absolute path.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/project/create_file_ref",
        "href": "api/ansys/scade/apitools/create/project/create_file_ref.html#returns",
        "title": "ansys.scade.apitools.create.project.create_file_ref > Returns",
        "section": "Returns",
        "text": "std.FileRef\nReturns"
    },
    {
        "objectID": "_examples/expr_access",
        "href": "_examples/expr_access.html#expr_access",
        "title": "expr_access",
        "section": "expr_access",
        "text": "project: ExprAccess.etp\nOutput:\nOutput:\nOutput:\nOutput:\nOutput:\nOutput:\nOutput:\nOutput:\nOutput:\nOutput:\nOutput:\nOutput:\nOutput:\nOutput:\nOutput:\nOutput:\nOutput:\nOutput:\nOutput:\nOutput:\nOutput:\nOutput:\nOutput:\nOutput:\nOutput:\nOutput:\nOutput:\nOutput:\nOutput:\nOutput:\nOutput:\nexpr_access"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/InitOp",
        "href": "api/ansys/scade/apitools/expr/access/InitOp.html#initop",
        "title": "InitOp",
        "section": "InitOp",
        "text": "Bases: CallExpression\nProvides for the initialization of flows.\nThe format is <init>, ..., <init> -> <flow>, ..., <flow>.\nSee the init_op example.\nInitOp\nInitOp\nCallExpression\n<init>, ..., <init> -> <flow>, ..., <flow>"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/InitOp",
        "href": "api/ansys/scade/apitools/expr/access/InitOp.html#ansys.scade.apitools.expr.access.InitOp",
        "title": "InitOp > InitOp > InitOp",
        "section": "InitOp > InitOp",
        "text": "class ansys.scade.apitools.expr.access.InitOp(expression: scade.model.suite.ExprCall)\n\nBases: CallExpression\n\nProvides for the initialization of flows.\n\nThe format is <init>, ..., <init> -> <flow>, ..., <flow>.\n\nSee the init_op example."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/InitOp",
        "href": "api/ansys/scade/apitools/expr/access/InitOp.html#notes",
        "title": "InitOp > Notes",
        "section": "Notes",
        "text": "The design differs slightly from the meta-model. Because the inputs\nmust be groups of flows, the InitOp class does not inherit\nfrom the FlowOp class. It exposes directly the lists of flows and initial\nvalues instead of having flows that are instances of the ListExpression\nclass.\nNotes\nInitOp\nFlowOp\nListExpression"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/InitOp",
        "href": "api/ansys/scade/apitools/expr/access/InitOp.html#parameters",
        "title": "InitOp > Parameters",
        "section": "Parameters",
        "text": "Call expression to wrap.\nInitialize the instance from the Scade expression.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/InitOp",
        "href": "api/ansys/scade/apitools/expr/access/InitOp.html#overview",
        "title": "InitOp > Overview",
        "section": "Overview",
        "text": "flows\nFlows after the first cycle.\ninits\nInitial values of the flows.\nOverview\nflows\ninits"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/InitOp",
        "href": "api/ansys/scade/apitools/expr/access/InitOp.html#import-detail",
        "title": "InitOp > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/InitOp",
        "href": "api/ansys/scade/apitools/expr/access/InitOp.html#property-detail",
        "title": "InitOp > Property detail",
        "section": "Property detail",
        "text": "Flows after the first cycle.\nInitial values of the flows.\nProperty detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/InitOp",
        "href": "api/ansys/scade/apitools/expr/access/InitOp.html#InitOp.flows",
        "title": "InitOp > Property detail > flows",
        "section": "Property detail > flows",
        "text": "property InitOp.flows: list[Expression]\n\nFlows after the first cycle."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/InitOp",
        "href": "api/ansys/scade/apitools/expr/access/InitOp.html#InitOp.inits",
        "title": "InitOp > Property detail > inits",
        "section": "Property detail > inits",
        "text": "property InitOp.inits: list[Expression]\n\nInitial values of the flows."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/DataStructOp",
        "href": "api/ansys/scade/apitools/expr/access/DataStructOp.html#datastructop",
        "title": "DataStructOp",
        "section": "DataStructOp",
        "text": "Bases: CallExpression\nProvides for construction of a structure.\nThe format is { <label>: <expression>, ..., <label> : <expression> }.\nSee the data_struct_op example.\nDataStructOp\nDataStructOp\nCallExpression\n{ <label>: <expression>, ..., <label> : <expression> }"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/DataStructOp",
        "href": "api/ansys/scade/apitools/expr/access/DataStructOp.html#ansys.scade.apitools.expr.access.DataStructOp",
        "title": "DataStructOp > DataStructOp > DataStructOp",
        "section": "DataStructOp > DataStructOp",
        "text": "class ansys.scade.apitools.expr.access.DataStructOp(expression: scade.model.suite.ExprCall)\n\nBases: CallExpression\n\nProvides for construction of a structure.\n\nThe format is { <label>: <expression>, ..., <label> : <expression> }.\n\nSee the data_struct_op example."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/DataStructOp",
        "href": "api/ansys/scade/apitools/expr/access/DataStructOp.html#parameters",
        "title": "DataStructOp > Parameters",
        "section": "Parameters",
        "text": "Call expression to wrap.\nInitialize the instance from the Scade expression.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/DataStructOp",
        "href": "api/ansys/scade/apitools/expr/access/DataStructOp.html#overview",
        "title": "DataStructOp > Overview",
        "section": "Overview",
        "text": "data\nPairs (str, Expression) to build the structure.\nOverview\ndata"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/DataStructOp",
        "href": "api/ansys/scade/apitools/expr/access/DataStructOp.html#import-detail",
        "title": "DataStructOp > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/DataStructOp",
        "href": "api/ansys/scade/apitools/expr/access/DataStructOp.html#property-detail",
        "title": "DataStructOp > Property detail",
        "section": "Property detail",
        "text": "Pairs (str, Expression) to build the structure.\nProperty detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/DataStructOp",
        "href": "api/ansys/scade/apitools/expr/access/DataStructOp.html#DataStructOp.data",
        "title": "DataStructOp > Property detail > data",
        "section": "Property detail > data",
        "text": "property DataStructOp.data: list[LabelledExpression]\n\nPairs (str, Expression) to build the structure."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/UnaryOp",
        "href": "api/ansys/scade/apitools/expr/access/UnaryOp.html#unaryop",
        "title": "UnaryOp",
        "section": "UnaryOp",
        "text": "Bases: AryOp\nProvides an expression with one operand.\nThe format is <operator> <operand>, where <operator> is one of\nthese:\nreverse\n-, +\nnot\nlnot\nSee the unary_op example.\nUnaryOp\nUnaryOp\nAryOp\n<operator> <operand>\n<operator>\nreverse\n-\n+\nnot\nlnot"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/UnaryOp",
        "href": "api/ansys/scade/apitools/expr/access/UnaryOp.html#ansys.scade.apitools.expr.access.UnaryOp",
        "title": "UnaryOp > UnaryOp > UnaryOp",
        "section": "UnaryOp > UnaryOp",
        "text": "class ansys.scade.apitools.expr.access.UnaryOp(expression: scade.model.suite.ExprCall)\n\nBases: AryOp\n\nProvides an expression with one operand.\n\nThe format is <operator> <operand>, where <operator> is one of\nthese:\n\nreverse\n\n-, +\n\nnot\n\nlnot\n\nSee the unary_op example."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/UnaryOp",
        "href": "api/ansys/scade/apitools/expr/access/UnaryOp.html#parameters",
        "title": "UnaryOp > Parameters",
        "section": "Parameters",
        "text": "Call expression to wrap.\nInitialize the instance from the Scade expression.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/UnaryOp",
        "href": "api/ansys/scade/apitools/expr/access/UnaryOp.html#overview",
        "title": "UnaryOp > Overview",
        "section": "Overview",
        "text": "operand\nOperand of the operator.\nOverview\noperand"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/UnaryOp",
        "href": "api/ansys/scade/apitools/expr/access/UnaryOp.html#import-detail",
        "title": "UnaryOp > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/UnaryOp",
        "href": "api/ansys/scade/apitools/expr/access/UnaryOp.html#property-detail",
        "title": "UnaryOp > Property detail",
        "section": "Property detail",
        "text": "Operand of the operator.\nProperty detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/UnaryOp",
        "href": "api/ansys/scade/apitools/expr/access/UnaryOp.html#UnaryOp.operand",
        "title": "UnaryOp > Property detail > operand",
        "section": "Property detail > operand",
        "text": "property UnaryOp.operand: Expression\n\nOperand of the operator."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/set_variable_default",
        "href": "api/ansys/scade/apitools/create/data_def/set_variable_default.html#ansysscadeapitoolscreatedata_defset_variable_default",
        "title": "ansys.scade.apitools.create.data_def.set_variable_default",
        "section": "ansys.scade.apitools.create.data_def.set_variable_default",
        "text": "Set the default value of a variable.\nansys.scade.apitools.create.data_def.set_variable_default"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/set_variable_default",
        "href": "api/ansys/scade/apitools/create/data_def/set_variable_default.html#ansys.scade.apitools.create.data_def.set_variable_default",
        "title": "ansys.scade.apitools.create.data_def.set_variable_default > ansys.scade.apitools.create.data_def.set_variable_default > set_variable_default",
        "section": "ansys.scade.apitools.create.data_def.set_variable_default > set_variable_default",
        "text": "ansys.scade.apitools.create.data_def.set_variable_default(variable: scade.model.suite.LocalVariable, tree: ansys.scade.apitools.create.expression.EX) -> scade.model.suite.Expression\n\nSet the default value of a variable."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/set_variable_default",
        "href": "api/ansys/scade/apitools/create/data_def/set_variable_default.html#parameters",
        "title": "ansys.scade.apitools.create.data_def.set_variable_default > Parameters",
        "section": "Parameters",
        "text": "Input variable.\nDefault value expressed as an extended expression tree.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/set_variable_default",
        "href": "api/ansys/scade/apitools/create/data_def/set_variable_default.html#returns",
        "title": "ansys.scade.apitools.create.data_def.set_variable_default > Returns",
        "section": "Returns",
        "text": "suite.Expression\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ChgIthOp",
        "href": "api/ansys/scade/apitools/expr/access/ChgIthOp.html#chgithop",
        "title": "ChgIthOp",
        "section": "ChgIthOp",
        "text": "Bases: ProjectionOp\nProvides the static assignment of a flow.\nSee the chg_ith_op example.\nChgIthOp\nChgIthOp\nProjectionOp"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ChgIthOp",
        "href": "api/ansys/scade/apitools/expr/access/ChgIthOp.html#ansys.scade.apitools.expr.access.ChgIthOp",
        "title": "ChgIthOp > ChgIthOp > ChgIthOp",
        "section": "ChgIthOp > ChgIthOp",
        "text": "class ansys.scade.apitools.expr.access.ChgIthOp(expression: scade.model.suite.ExprCall)\n\nBases: ProjectionOp\n\nProvides the static assignment of a flow.\n\nSee the chg_ith_op example."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ChgIthOp",
        "href": "api/ansys/scade/apitools/expr/access/ChgIthOp.html#parameters",
        "title": "ChgIthOp > Parameters",
        "section": "Parameters",
        "text": "Call expression to wrap.\nInitialize the instance from the Scade expression.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ChgIthOp",
        "href": "api/ansys/scade/apitools/expr/access/ChgIthOp.html#overview",
        "title": "ChgIthOp > Overview",
        "section": "Overview",
        "text": "value\nValue assigned.\nOverview\nvalue"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ChgIthOp",
        "href": "api/ansys/scade/apitools/expr/access/ChgIthOp.html#import-detail",
        "title": "ChgIthOp > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ChgIthOp",
        "href": "api/ansys/scade/apitools/expr/access/ChgIthOp.html#property-detail",
        "title": "ChgIthOp > Property detail",
        "section": "Property detail",
        "text": "Value assigned.\nProperty detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ChgIthOp",
        "href": "api/ansys/scade/apitools/expr/access/ChgIthOp.html#ChgIthOp.value",
        "title": "ChgIthOp > Property detail > value",
        "section": "Property detail > value",
        "text": "property ChgIthOp.value: Expression\n\nValue assigned."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_data_def_when_block",
        "href": "api/ansys/scade/apitools/create/data_def/add_data_def_when_block.html#ansysscadeapitoolscreatedata_defadd_data_def_when_block",
        "title": "ansys.scade.apitools.create.data_def.add_data_def_when_block",
        "section": "ansys.scade.apitools.create.data_def.add_data_def_when_block",
        "text": "Add a new when block in a scope.\nThe graphical properties are expressed 1/100th of mm.\nThey are considered if and only if the owning when block\nhas a graphical representation.\nansys.scade.apitools.create.data_def.add_data_def_when_block"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_data_def_when_block",
        "href": "api/ansys/scade/apitools/create/data_def/add_data_def_when_block.html#ansys.scade.apitools.create.data_def.add_data_def_when_block",
        "title": "ansys.scade.apitools.create.data_def.add_data_def_when_block > ansys.scade.apitools.create.data_def.add_data_def_when_block > add_data_def_when_block",
        "section": "ansys.scade.apitools.create.data_def.add_data_def_when_block > add_data_def_when_block",
        "text": "ansys.scade.apitools.create.data_def.add_data_def_when_block(data_def: scade.model.suite.DataDef, name: str, when: ansys.scade.apitools.create.expression.EX, branches: List[WhenBranch], diagram: scade.model.suite.Diagram | None = None, position: Tuple[float, float] = (0, 0), size: Tuple[float, float] = (0, 0), start_position: Tuple[float, float] = (450, 582), label_width: int = 0) -> scade.model.suite.WhenBlock\n\nAdd a new when block in a scope.\n\nThe graphical properties are expressed 1/100th of mm.\n\nThey are considered if and only if the owning when block\nhas a graphical representation."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_data_def_when_block",
        "href": "api/ansys/scade/apitools/create/data_def/add_data_def_when_block.html#parameters",
        "title": "ansys.scade.apitools.create.data_def.add_data_def_when_block > Parameters",
        "section": "Parameters",
        "text": "Input scope, which is an operator, state, or action.\nName of the block.\nPattern of the block.\nList of intermediate structures describing the branches.\nThere must be at least one branch.\nDiagram containing the equation. The diagram specified can be either graphical\nor textual, or it can be None. However, it cannot be None if the scope\ncontains at least one diagram.\nPosition of the block.\nSize of the block.\nStart position of the branches relative to the block.\nWidth of the label containing the pattern.\nParameters\nNone\nNone"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_data_def_when_block",
        "href": "api/ansys/scade/apitools/create/data_def/add_data_def_when_block.html#returns",
        "title": "ansys.scade.apitools.create.data_def.add_data_def_when_block > Returns",
        "section": "Returns",
        "text": "suite.WhenBlock\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_state_machine_state",
        "href": "api/ansys/scade/apitools/create/data_def/add_state_machine_state.html#ansysscadeapitoolscreatedata_defadd_state_machine_state",
        "title": "ansys.scade.apitools.create.data_def.add_state_machine_state",
        "section": "ansys.scade.apitools.create.data_def.add_state_machine_state",
        "text": "Create a state in a state machine.\nansys.scade.apitools.create.data_def.add_state_machine_state"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_state_machine_state",
        "href": "api/ansys/scade/apitools/create/data_def/add_state_machine_state.html#ansys.scade.apitools.create.data_def.add_state_machine_state",
        "title": "ansys.scade.apitools.create.data_def.add_state_machine_state > ansys.scade.apitools.create.data_def.add_state_machine_state > add_state_machine_state",
        "section": "ansys.scade.apitools.create.data_def.add_state_machine_state > add_state_machine_state",
        "text": "ansys.scade.apitools.create.data_def.add_state_machine_state(sm: scade.model.suite.StateMachine, name: str, position: Tuple[float, float] = (0, 0), size: Tuple[float, float] = (0, 0), kind: SK = SK.NORMAL, display: DK = DK.GRAPHICAL) -> scade.model.suite.State\n\nCreate a state in a state machine."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_state_machine_state",
        "href": "api/ansys/scade/apitools/create/data_def/add_state_machine_state.html#parameters",
        "title": "ansys.scade.apitools.create.data_def.add_state_machine_state > Parameters",
        "section": "Parameters",
        "text": "Input state machine.\nName of the state.\nPosition of the state, expressed in 1/100th of mm.\nThis value is considered if and only if the state machine\nhas a graphical representation.\nSize of the state, expressed in 1/100th of mm.\nThis value is considered if and only if the state machine\nhas a graphical representation.\nKind of the state.\nLayout of the state.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_state_machine_state",
        "href": "api/ansys/scade/apitools/create/data_def/add_state_machine_state.html#returns",
        "title": "ansys.scade.apitools.create.data_def.add_state_machine_state > Returns",
        "section": "Returns",
        "text": "suite.State\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/TransitionTree",
        "href": "api/ansys/scade/apitools/create/data_def/TransitionTree.html#transitiontree",
        "title": "TransitionTree",
        "section": "TransitionTree",
        "text": "Provides the intermediate class for transitions.\nStore the attributes.\nTransitionTree\nTransitionTree"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/TransitionTree",
        "href": "api/ansys/scade/apitools/create/data_def/TransitionTree.html#ansys.scade.apitools.create.data_def.TransitionTree",
        "title": "TransitionTree > TransitionTree > TransitionTree",
        "section": "TransitionTree > TransitionTree",
        "text": "class ansys.scade.apitools.create.data_def.TransitionTree(trigger: ansys.scade.apitools.create.expression.EX | None, target: TD, priority: int, points: List[Tuple[float, float]] | None = None, label_position: Tuple[float, float] = (0, 0), label_size: Tuple[float, float] = (0, 0), slash_position: Tuple[float, float] = (0, 0), polyline: bool = True)\n\nProvides the intermediate class for transitions.\n\nStore the attributes."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/TransitionTree",
        "href": "api/ansys/scade/apitools/create/data_def/TransitionTree.html#overview",
        "title": "TransitionTree > Overview",
        "section": "Overview",
        "text": "label_position\nlabel_size\npoints\npolyline\npriority\nslash_position\ntarget\ntrigger\nOverview\nlabel_position\nlabel_size\npoints\npolyline\npriority\nslash_position\ntarget\ntrigger"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/TransitionTree",
        "href": "api/ansys/scade/apitools/create/data_def/TransitionTree.html#import-detail",
        "title": "TransitionTree > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/TransitionTree",
        "href": "api/ansys/scade/apitools/create/data_def/TransitionTree.html#attribute-detail",
        "title": "TransitionTree > Attribute detail",
        "section": "Attribute detail",
        "text": "Attribute detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/TransitionTree",
        "href": "api/ansys/scade/apitools/create/data_def/TransitionTree.html#TransitionTree.label_position",
        "title": "TransitionTree > Attribute detail > label_position",
        "section": "Attribute detail > label_position",
        "text": "TransitionTree.label_position = (0, 0)\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/TransitionTree",
        "href": "api/ansys/scade/apitools/create/data_def/TransitionTree.html#TransitionTree.label_size",
        "title": "TransitionTree > Attribute detail > label_size",
        "section": "Attribute detail > label_size",
        "text": "TransitionTree.label_size = (0, 0)\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/TransitionTree",
        "href": "api/ansys/scade/apitools/create/data_def/TransitionTree.html#TransitionTree.points",
        "title": "TransitionTree > Attribute detail > points",
        "section": "Attribute detail > points",
        "text": "TransitionTree.points = []\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/TransitionTree",
        "href": "api/ansys/scade/apitools/create/data_def/TransitionTree.html#TransitionTree.polyline",
        "title": "TransitionTree > Attribute detail > polyline",
        "section": "Attribute detail > polyline",
        "text": "TransitionTree.polyline = True\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/TransitionTree",
        "href": "api/ansys/scade/apitools/create/data_def/TransitionTree.html#TransitionTree.priority",
        "title": "TransitionTree > Attribute detail > priority",
        "section": "Attribute detail > priority",
        "text": "TransitionTree.priority\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/TransitionTree",
        "href": "api/ansys/scade/apitools/create/data_def/TransitionTree.html#TransitionTree.slash_position",
        "title": "TransitionTree > Attribute detail > slash_position",
        "section": "Attribute detail > slash_position",
        "text": "TransitionTree.slash_position = (0, 0)\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/TransitionTree",
        "href": "api/ansys/scade/apitools/create/data_def/TransitionTree.html#TransitionTree.target",
        "title": "TransitionTree > Attribute detail > target",
        "section": "Attribute detail > target",
        "text": "TransitionTree.target\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/TransitionTree",
        "href": "api/ansys/scade/apitools/create/data_def/TransitionTree.html#TransitionTree.trigger",
        "title": "TransitionTree > Attribute detail > trigger",
        "section": "Attribute detail > trigger",
        "text": "TransitionTree.trigger\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/Label",
        "href": "api/ansys/scade/apitools/expr/access/Label.html#label",
        "title": "Label",
        "section": "Label",
        "text": "Bases: Expression\nProvides the label of a projection.\nLabel\nLabel\nExpression"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/Label",
        "href": "api/ansys/scade/apitools/expr/access/Label.html#ansys.scade.apitools.expr.access.Label",
        "title": "Label > Label > Label",
        "section": "Label > Label",
        "text": "class ansys.scade.apitools.expr.access.Label(expression: scade.model.suite.ConstValue)\n\nBases: Expression\n\nProvides the label of a projection."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/Label",
        "href": "api/ansys/scade/apitools/expr/access/Label.html#parameters",
        "title": "Label > Parameters",
        "section": "Parameters",
        "text": "Call expression to wrap.\nInitialize the instance from the Scade expression.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/Label",
        "href": "api/ansys/scade/apitools/expr/access/Label.html#overview",
        "title": "Label > Overview",
        "section": "Overview",
        "text": "name\nName of the label.\nOverview\nname"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/Label",
        "href": "api/ansys/scade/apitools/expr/access/Label.html#import-detail",
        "title": "Label > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/Label",
        "href": "api/ansys/scade/apitools/expr/access/Label.html#property-detail",
        "title": "Label > Property detail",
        "section": "Property detail",
        "text": "Name of the label.\nProperty detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/Label",
        "href": "api/ansys/scade/apitools/expr/access/Label.html#Label.name",
        "title": "Label > Property detail > name",
        "section": "Property detail > name",
        "text": "property Label.name: str\n\nName of the label."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/TK",
        "href": "api/ansys/scade/apitools/create/data_def/TK.html#tk",
        "title": "TK",
        "section": "TK",
        "text": "Bases: enum.Enum\nProvides an enum of transition kinds.\nTK\nTK\nenum.Enum"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/TK",
        "href": "api/ansys/scade/apitools/create/data_def/TK.html#ansys.scade.apitools.create.data_def.TK",
        "title": "TK > TK > TK",
        "section": "TK > TK",
        "text": "class ansys.scade.apitools.create.data_def.TK\n\nBases: enum.Enum\n\nProvides an enum of transition kinds."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/TK",
        "href": "api/ansys/scade/apitools/create/data_def/TK.html#overview",
        "title": "TK > Overview",
        "section": "Overview",
        "text": "STRONG\nSYNCHRO\nWEAK\nOverview\nSTRONG\nSYNCHRO\nWEAK"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/TK",
        "href": "api/ansys/scade/apitools/create/data_def/TK.html#import-detail",
        "title": "TK > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/TK",
        "href": "api/ansys/scade/apitools/create/data_def/TK.html#attribute-detail",
        "title": "TK > Attribute detail",
        "section": "Attribute detail",
        "text": "Attribute detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/TK",
        "href": "api/ansys/scade/apitools/create/data_def/TK.html#TK.STRONG",
        "title": "TK > Attribute detail > STRONG",
        "section": "Attribute detail > STRONG",
        "text": "TK.STRONG = 'Strong'\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/TK",
        "href": "api/ansys/scade/apitools/create/data_def/TK.html#TK.SYNCHRO",
        "title": "TK > Attribute detail > SYNCHRO",
        "section": "Attribute detail > SYNCHRO",
        "text": "TK.SYNCHRO = 'Synchro'\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/TK",
        "href": "api/ansys/scade/apitools/create/data_def/TK.html#TK.WEAK",
        "title": "TK > Attribute detail > WEAK",
        "section": "Attribute detail > WEAK",
        "text": "TK.WEAK = 'Weak'\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/scade/save_all",
        "href": "api/ansys/scade/apitools/create/scade/save_all.html#ansysscadeapitoolscreatescadesave_all",
        "title": "ansys.scade.apitools.create.scade.save_all",
        "section": "ansys.scade.apitools.create.scade.save_all",
        "text": "Save all modified files of Scade models.\nansys.scade.apitools.create.scade.save_all"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/scade/save_all",
        "href": "api/ansys/scade/apitools/create/scade/save_all.html#ansys.scade.apitools.create.scade.save_all",
        "title": "ansys.scade.apitools.create.scade.save_all > ansys.scade.apitools.create.scade.save_all > save_all",
        "section": "ansys.scade.apitools.create.scade.save_all > save_all",
        "text": "ansys.scade.apitools.create.scade.save_all()\n\nSave all modified files of Scade models."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ArrayOp",
        "href": "api/ansys/scade/apitools/expr/access/ArrayOp.html#arrayop",
        "title": "ArrayOp",
        "section": "ArrayOp",
        "text": "Bases: CallExpression\nProvides the abstract class for array expressions.\nArrayOp\nArrayOp\nCallExpression"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ArrayOp",
        "href": "api/ansys/scade/apitools/expr/access/ArrayOp.html#ansys.scade.apitools.expr.access.ArrayOp",
        "title": "ArrayOp > ArrayOp > ArrayOp",
        "section": "ArrayOp > ArrayOp",
        "text": "class ansys.scade.apitools.expr.access.ArrayOp(expression: scade.model.suite.ExprCall)\n\nBases: CallExpression\n\nProvides the abstract class for array expressions."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ArrayOp",
        "href": "api/ansys/scade/apitools/expr/access/ArrayOp.html#parameters",
        "title": "ArrayOp > Parameters",
        "section": "Parameters",
        "text": "Call expression to wrap.\nInitialize the instance from the Scade expression.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ArrayOp",
        "href": "api/ansys/scade/apitools/expr/access/ArrayOp.html#overview",
        "title": "ArrayOp > Overview",
        "section": "Overview",
        "text": "array\nArray operand of the expression.\nOverview\narray"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ArrayOp",
        "href": "api/ansys/scade/apitools/expr/access/ArrayOp.html#import-detail",
        "title": "ArrayOp > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ArrayOp",
        "href": "api/ansys/scade/apitools/expr/access/ArrayOp.html#property-detail",
        "title": "ArrayOp > Property detail",
        "section": "Property detail",
        "text": "Array operand of the expression.\nProperty detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ArrayOp",
        "href": "api/ansys/scade/apitools/expr/access/ArrayOp.html#ArrayOp.array",
        "title": "ArrayOp > Property detail > array",
        "section": "Property detail > array",
        "text": "property ArrayOp.array: Expression\n\nArray operand of the expression."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/PartialIteratorOp",
        "href": "api/ansys/scade/apitools/expr/access/PartialIteratorOp.html#partialiteratorop",
        "title": "PartialIteratorOp",
        "section": "PartialIteratorOp",
        "text": "Bases: IteratorOp\nProvides partial iteration of an operator.\nSee the partial_iterator_op example.\nPartialIteratorOp\nPartialIteratorOp\nIteratorOp"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/PartialIteratorOp",
        "href": "api/ansys/scade/apitools/expr/access/PartialIteratorOp.html#ansys.scade.apitools.expr.access.PartialIteratorOp",
        "title": "PartialIteratorOp > PartialIteratorOp > PartialIteratorOp",
        "section": "PartialIteratorOp > PartialIteratorOp",
        "text": "class ansys.scade.apitools.expr.access.PartialIteratorOp(expression: scade.model.suite.ExprCall, operator: CallExpression)\n\nBases: IteratorOp\n\nProvides partial iteration of an operator.\n\nSee the partial_iterator_op example."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/PartialIteratorOp",
        "href": "api/ansys/scade/apitools/expr/access/PartialIteratorOp.html#parameters",
        "title": "PartialIteratorOp > Parameters",
        "section": "Parameters",
        "text": "Higher-order expression to wrap.\nOperator call expression.\nInitialize the instance from the Scade expression.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/PartialIteratorOp",
        "href": "api/ansys/scade/apitools/expr/access/PartialIteratorOp.html#overview",
        "title": "PartialIteratorOp > Overview",
        "section": "Overview",
        "text": "defaults\nDefault values when suitable, otherwise None.\nif_\nCondition of the iterator.\nOverview\ndefaults\nNone\nif_"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/PartialIteratorOp",
        "href": "api/ansys/scade/apitools/expr/access/PartialIteratorOp.html#import-detail",
        "title": "PartialIteratorOp > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/PartialIteratorOp",
        "href": "api/ansys/scade/apitools/expr/access/PartialIteratorOp.html#property-detail",
        "title": "PartialIteratorOp > Property detail",
        "section": "Property detail",
        "text": "Default values when suitable, otherwise None.\nCondition of the iterator.\nProperty detail\nNone"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/PartialIteratorOp",
        "href": "api/ansys/scade/apitools/expr/access/PartialIteratorOp.html#PartialIteratorOp.defaults",
        "title": "PartialIteratorOp > Property detail > defaults",
        "section": "Property detail > defaults",
        "text": "property PartialIteratorOp.defaults: list[Expression] | None\n\nDefault values when suitable, otherwise None."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/PartialIteratorOp",
        "href": "api/ansys/scade/apitools/expr/access/PartialIteratorOp.html#PartialIteratorOp.if_",
        "title": "PartialIteratorOp > Property detail > if_",
        "section": "Property detail > if_",
        "text": "property PartialIteratorOp.if_: Expression\n\nCondition of the iterator."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/index",
        "href": "api/ansys/scade/apitools/expr/access/index.html#the-accesspy-module",
        "title": "The access.py module",
        "section": "The access.py module",
        "text": "The access.py module\naccess.py"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/index",
        "href": "api/ansys/scade/apitools/expr/access/index.html#summary",
        "title": "The access.py module > Summary",
        "section": "Summary",
        "text": "ActivateNoInitOp\nProvides activation of an operator with default values.\nActivateOp\nActivation of an operator with initial values.\nArrayOp\nProvides the abstract class for array expressions.\nAryOp\nProvides the abstract class for unary, binary, and nary operators.\nBinaryOp\nProvides an expression with two operands.\nCallExpression\nProvides the abstract class for expression calls.\nCaseOp\nProvides the case expression.\nChgIthOp\nProvides the static assignment of a flow.\nCondactOp\nProvides the abstract class for activate operators.\nConditionalOp\nProvides the abstract class for restart and activate operators.\nConstValue\nProvides the literal value.\nDataArrayOp\nProvides for construction of an array.\nDataStructOp\nProvides for construction of a structure.\nExpression\nProvides the top-level abstract class for the expression accessors.\nFbyOp\nProvides the delay of flows.\nFlattenOp\nProvides flattening of a structure.\nFlowOp\nProvides an abstract class for flow expressions.\nIdExpression\nProvides the constant, sensor, or local variable.\nIfThenElseOp\nProvides a vector from a flow and a size.\nInitOp\nProvides for the initialization of flows.\nIteratorOp\nProvides the base class for iteration operators.\nLabel\nProvides the label of a projection.\nLabelledExpression\nLast\nProvides the last of a local variable.\nListExpression\nProvides a group of expressions.\nMakeOp\nProvides the make of a structure.\nNAryOp\nProvides an expression with two or more operands.\nNumericCastOp\nProvides the numeric cast of a flow.\nOpCall\nCalls a user-defined operator.\nOpOp\nProvides the abstract class for higher-order operators.\nPartialIteratorOp\nProvides partial iteration of an operator.\nPreOp\nProvides the previous value of flows.\nPresent\nProvides the presence of a signal.\nPrjDynOp\nProvides the dynamic projection of an array.\nPrjOp\nProvides the static projection of a flow.\nProjectionOp\nProvides the abstract class for static projection/assignment of a flow.\nRestartOp\nProvides for restart of an operator.\nScalarToVectorOp\nProvides the vector from a flow and a size.\nSharpOp\nProvides a sharp expression with two or more flows.\nSliceOp\nProvides the slice of an array.\nTextExpression\nProvides an expression with a syntax error.\nTransposeOp\nProvides for the transposition of an array.\nUnaryOp\nProvides an expression with one operand.\naccessor\nBuild the accessor for a SCADE Suite expression.\nmap_operators\nBINARY_OPS\nMAP_HIGHER_ORDER\nMAP_OPERATORS\nNARY_OPS\nUNARY_OPS\nSummary\nActivateNoInitOp\nActivateOp\nArrayOp\nAryOp\nBinaryOp\nCallExpression\nCaseOp\nChgIthOp\nCondactOp\nConditionalOp\nConstValue\nDataArrayOp\nDataStructOp\nExpression\nFbyOp\nFlattenOp\nFlowOp\nIdExpression\nIfThenElseOp\nInitOp\nIteratorOp\nLabel\nLabelledExpression\nLast\nListExpression\nMakeOp\nNAryOp\nNumericCastOp\nOpCall\nOpOp\nPartialIteratorOp\nPreOp\nPresent\nPrjDynOp\nPrjOp\nProjectionOp\nRestartOp\nScalarToVectorOp\nSharpOp\nSliceOp\nTextExpression\nTransposeOp\nUnaryOp\naccessor\nmap_operators\nBINARY_OPS\nMAP_HIGHER_ORDER\nMAP_OPERATORS\nNARY_OPS\nUNARY_OPS"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/index",
        "href": "api/ansys/scade/apitools/expr/access/index.html#description",
        "title": "The access.py module > Description",
        "section": "Description",
        "text": "Provides accessors for expressions.\nThis module wraps the expressions derived from suite.Expression using the classes\ncorresponding to the XSCADE serialization, as exposed in the SCADE documentation:\nSCADE Suite Metamodels for Java API > 12. Scade Language Metamodels > Expressions.\nThese classes allow accessing precisely each member of an expression.\nUse the accessor() function to create\nan accessor from any SCADE Suite expression.\nDescription\nsuite.Expression\nSCADE Suite Metamodels for Java API > 12. Scade Language Metamodels > Expressions\naccessor()"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/index",
        "href": "api/ansys/scade/apitools/expr/access/index.html#module-detail",
        "title": "The access.py module > Module detail",
        "section": "Module detail",
        "text": "Module detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/index",
        "href": "api/ansys/scade/apitools/expr/access/index.html#access.BINARY_OPS",
        "title": "The access.py module > Module detail > BINARY_OPS",
        "section": "Module detail > BINARY_OPS",
        "text": "access.BINARY_OPS\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/index",
        "href": "api/ansys/scade/apitools/expr/access/index.html#access.MAP_HIGHER_ORDER",
        "title": "The access.py module > Module detail > MAP_HIGHER_ORDER",
        "section": "Module detail > MAP_HIGHER_ORDER",
        "text": "access.MAP_HIGHER_ORDER\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/index",
        "href": "api/ansys/scade/apitools/expr/access/index.html#access.MAP_OPERATORS",
        "title": "The access.py module > Module detail > MAP_OPERATORS",
        "section": "Module detail > MAP_OPERATORS",
        "text": "access.MAP_OPERATORS\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/index",
        "href": "api/ansys/scade/apitools/expr/access/index.html#access.NARY_OPS",
        "title": "The access.py module > Module detail > NARY_OPS",
        "section": "Module detail > NARY_OPS",
        "text": "access.NARY_OPS\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/index",
        "href": "api/ansys/scade/apitools/expr/access/index.html#access.UNARY_OPS",
        "title": "The access.py module > Module detail > UNARY_OPS",
        "section": "Module detail > UNARY_OPS",
        "text": "access.UNARY_OPS\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/index",
        "href": "api/ansys/scade/apitools/expr/access/index.html#access.map_operators",
        "title": "The access.py module > Module detail > map_operators",
        "section": "Module detail > map_operators",
        "text": "access.map_operators\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/SK",
        "href": "api/ansys/scade/apitools/create/data_def/SK.html#sk",
        "title": "SK",
        "section": "SK",
        "text": "Bases: enum.Enum\nProvides an enum of state kinds.\nSK\nSK\nenum.Enum"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/SK",
        "href": "api/ansys/scade/apitools/create/data_def/SK.html#ansys.scade.apitools.create.data_def.SK",
        "title": "SK > SK > SK",
        "section": "SK > SK",
        "text": "class ansys.scade.apitools.create.data_def.SK\n\nBases: enum.Enum\n\nProvides an enum of state kinds."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/SK",
        "href": "api/ansys/scade/apitools/create/data_def/SK.html#overview",
        "title": "SK > Overview",
        "section": "Overview",
        "text": "FINAL\nINITIAL\nNORMAL\nOverview\nFINAL\nINITIAL\nNORMAL"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/SK",
        "href": "api/ansys/scade/apitools/create/data_def/SK.html#import-detail",
        "title": "SK > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/SK",
        "href": "api/ansys/scade/apitools/create/data_def/SK.html#attribute-detail",
        "title": "SK > Attribute detail",
        "section": "Attribute detail",
        "text": "Attribute detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/SK",
        "href": "api/ansys/scade/apitools/create/data_def/SK.html#SK.FINAL",
        "title": "SK > Attribute detail > FINAL",
        "section": "Attribute detail > FINAL",
        "text": "SK.FINAL = 'Final'\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/SK",
        "href": "api/ansys/scade/apitools/create/data_def/SK.html#SK.INITIAL",
        "title": "SK > Attribute detail > INITIAL",
        "section": "Attribute detail > INITIAL",
        "text": "SK.INITIAL = 'Initial'\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/SK",
        "href": "api/ansys/scade/apitools/create/data_def/SK.html#SK.NORMAL",
        "title": "SK > Attribute detail > NORMAL",
        "section": "Attribute detail > NORMAL",
        "text": "SK.NORMAL = 'Normal'\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_transpose",
        "href": "api/ansys/scade/apitools/create/expression/create_transpose.html#ansysscadeapitoolscreateexpressioncreate_transpose",
        "title": "ansys.scade.apitools.create.expression.create_transpose",
        "section": "ansys.scade.apitools.create.expression.create_transpose",
        "text": "Return the expression tree for the transpose operator.\nansys.scade.apitools.create.expression.create_transpose"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_transpose",
        "href": "api/ansys/scade/apitools/create/expression/create_transpose.html#ansys.scade.apitools.create.expression.create_transpose",
        "title": "ansys.scade.apitools.create.expression.create_transpose > ansys.scade.apitools.create.expression.create_transpose > create_transpose",
        "section": "ansys.scade.apitools.create.expression.create_transpose > create_transpose",
        "text": "ansys.scade.apitools.create.expression.create_transpose(array: EX, dim1: EX, dim2: EX) -> ET\n\nReturn the expression tree for the transpose operator."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_transpose",
        "href": "api/ansys/scade/apitools/create/expression/create_transpose.html#parameters",
        "title": "ansys.scade.apitools.create.expression.create_transpose > Parameters",
        "section": "Parameters",
        "text": "Input array.\nFirst dimension.\nSecond dimension.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_transpose",
        "href": "api/ansys/scade/apitools/create/expression/create_transpose.html#returns",
        "title": "ansys.scade.apitools.create.expression.create_transpose > Returns",
        "section": "Returns",
        "text": "ET\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ScalarToVectorOp",
        "href": "api/ansys/scade/apitools/expr/access/ScalarToVectorOp.html#scalartovectorop",
        "title": "ScalarToVectorOp",
        "section": "ScalarToVectorOp",
        "text": "Bases: CallExpression\nProvides the vector from a flow and a size.\nThe format is <flow> ^ <size>.\nSee the scalar_to_vector_op example.\nScalarToVectorOp\nScalarToVectorOp\nCallExpression\n<flow> ^ <size>"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ScalarToVectorOp",
        "href": "api/ansys/scade/apitools/expr/access/ScalarToVectorOp.html#ansys.scade.apitools.expr.access.ScalarToVectorOp",
        "title": "ScalarToVectorOp > ScalarToVectorOp > ScalarToVectorOp",
        "section": "ScalarToVectorOp > ScalarToVectorOp",
        "text": "class ansys.scade.apitools.expr.access.ScalarToVectorOp(expression: scade.model.suite.ExprCall)\n\nBases: CallExpression\n\nProvides the vector from a flow and a size.\n\nThe format is <flow> ^ <size>.\n\nSee the scalar_to_vector_op example."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ScalarToVectorOp",
        "href": "api/ansys/scade/apitools/expr/access/ScalarToVectorOp.html#notes",
        "title": "ScalarToVectorOp > Notes",
        "section": "Notes",
        "text": "The design differs slightly from the meta-model. Because the input\nmust be a group of flows, the ScalarToVectorOp class does not inherit\nfrom the FlowOp class. It exposes directly the list of input flows instead of\nhaving a flow that is a ListExpression class.\nNotes\nScalarToVectorOp\nFlowOp\nListExpression"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ScalarToVectorOp",
        "href": "api/ansys/scade/apitools/expr/access/ScalarToVectorOp.html#parameters",
        "title": "ScalarToVectorOp > Parameters",
        "section": "Parameters",
        "text": "Call expression to wrap.\nInitialize the instance from the Scade expression.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ScalarToVectorOp",
        "href": "api/ansys/scade/apitools/expr/access/ScalarToVectorOp.html#overview",
        "title": "ScalarToVectorOp > Overview",
        "section": "Overview",
        "text": "flows\nInput flows.\nsize\nSize of the vector.\nOverview\nflows\nsize"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ScalarToVectorOp",
        "href": "api/ansys/scade/apitools/expr/access/ScalarToVectorOp.html#import-detail",
        "title": "ScalarToVectorOp > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ScalarToVectorOp",
        "href": "api/ansys/scade/apitools/expr/access/ScalarToVectorOp.html#property-detail",
        "title": "ScalarToVectorOp > Property detail",
        "section": "Property detail",
        "text": "Input flows.\nSize of the vector.\nProperty detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ScalarToVectorOp",
        "href": "api/ansys/scade/apitools/expr/access/ScalarToVectorOp.html#ScalarToVectorOp.flows",
        "title": "ScalarToVectorOp > Property detail > flows",
        "section": "Property detail > flows",
        "text": "property ScalarToVectorOp.flows: list[Expression]\n\nInput flows."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ScalarToVectorOp",
        "href": "api/ansys/scade/apitools/expr/access/ScalarToVectorOp.html#ScalarToVectorOp.size",
        "title": "ScalarToVectorOp > Property detail > size",
        "section": "Property detail > size",
        "text": "property ScalarToVectorOp.size: Expression\n\nSize of the vector."
    },
    {
        "objectID": "user_guide/scripting",
        "href": "user_guide/scripting.html#scade-scripting",
        "title": "SCADE scripting",
        "section": "SCADE scripting",
        "text": "SCADE scripting"
    },
    {
        "objectID": "user_guide/scripting",
        "href": "user_guide/scripting.html#reminder",
        "title": "SCADE scripting > Reminder",
        "section": "Reminder",
        "text": "Most of the SCADE Python APIs available in the SCADE IDE are proxies to internal C++ or Java kernels.\nThese are the most popular ones:\nSCADE Suite\nSCADE Test\nSCADE Architect\nFor more information, see API Capabilities by SCADE Products in the SCADE documentation.\nThis provides advantages that won’t be discussed here. However, it also has a few constraints:\nThe scripts can’t be run outside of the context of a SCADE release on Windows.\nThe version of the Python interpreter must be the one delivered with the SCADE Suite:\nPython 3.7 for releases prior to 2023 R2 (The directory is SCADE/contrib/Python37.)\nPython 3.10 starting from 2023 R2 (The directory is SCADE/contrib/Python310.)\nReminder\nSCADE/contrib/Python37\nSCADE/contrib/Python310"
    },
    {
        "objectID": "user_guide/scripting",
        "href": "user_guide/scripting.html#scade-environment",
        "title": "SCADE scripting > SCADE environment",
        "section": "SCADE environment",
        "text": "The SCADE Python scripts, and formerly TCL scripts, are intended to be run from a SCADE\nenvironment, either in the SCADE IDE or from the command line using the scade.exe -script\ncommand.\nThe operating mode when running a script is identical in both environments.\nThe projects are already loaded, either in the workspace in the IDE or from a list\non the command line. There is no command to dynamically load a project and its related\nsemantic data, such as SCADE Suite models or SCADE Test procedures.\nSCADE creates an instance of a Python interpreter and dynamically adds commands to address\nthe loaded data through the scade module. As mentioned in the preceding bullet, it is\nnot possible to use an interpreter other than the one delivered in the SCADE/contrib\ndirectory or to specify a virtual environment based on it.\nThe IDE provides additional features for queries and reporting,\nincluding the scade.selection and scade.report functions.\nThe interpreter is deleted once the execution of the scripts ends.\nSCADE custom extensions are another advanced kind of scripts in the IDE. These scripts\nare run at startup or when a workspace is loaded. They live until the app ends or\nthe project is closed. Python interpreters have more functions to extend the user interface\nwith GUI artifacts such as toolbars, menus, and property pages.\nSCADE environment\nscade.exe -script\nscade\nSCADE/contrib\nscade.selection\nscade.report"
    },
    {
        "objectID": "user_guide/scripting",
        "href": "user_guide/scripting.html#python-environment",
        "title": "SCADE scripting > Python environment",
        "section": "Python environment",
        "text": "The behaviors described in the previous section have been used for a couple of decades\nfor TCL scripts, and more recently, Python scripts. Python allows developing much more\ncomplex components and benefits from powerful IDEs such as PyCharm, Visual Studio Code,\nand PTVS (Python Tools for Visual Studio). Although it is not possible to develop GUI\nscripts in Python IDEs, SCADE provides some workarounds to the preceding constraints\nfor command line scripts to allow for using these IDEs.\nIn addition to the directories to be added to the PYTHONPATH environment variable,\nthere is a scade_env module that must be imported before accessing any SCADE Python\nmodule. The scade_env module emulates the context of the scade.exe -script command.\nIt allows you to declare all the projects to load before using the SCADE APIs.\nThe import of the scade_env module and the declaration of projects are ignored when\nthe script is run in a SCADE environment.\nFor more information, see Executing Scripts in Python Environment in the SCADE documentation.\nPython environment\nPYTHONPATH\nscade_env\nscade_env\nscade.exe -script\nscade_env"
    },
    {
        "objectID": "user_guide/scripting",
        "href": "user_guide/scripting.html#advanced-usage-with-api-tools",
        "title": "SCADE scripting > Advanced usage with API tools",
        "section": "Advanced usage with API tools",
        "text": "Once the constraints of the SCADE Python APIs and their usage in a Python environment are understood,\nit is possible to simplify and extend the domain of script usage in batch mode.\nThe ansys.scade.apitools module imports the scade_env module and exposes its load_project\nfunction, which it renames to declare_project to avoid ambiguities.\nSetting the PYTHONPATH environment variable as specified in the documentation becomes optional.\nWhen the PYTHONPATH environment variable does not refer to a SCADE environment, the ansys.scade.apitools\nmodule has several strategies to find and dynamically add the required SCADE directories to sys.path,\ndepending on sys.executable:\nInterpreter delivered in the SCADE/contrib/PythonXxx directory: The directories are relative to\nthe interpreter’s location.\nInterpreter of a virtual environment on top of an interpreter delivered with SCADE: The virtual\nenvironment is resolved. The behavior is then the same as described previously.\nIndependent interpreter: The ansys.scade.apitools module selects the most recent version of SCADE installed on the\ncomputer that is compatible with the current interpreter:\nPython 3.7: from 2021 R1 to 2023 R1.\nPython 3.10: from 2023 R2.\nThe behavior is then the same as described previously.\nIf none of these use cases applies, the script cannot be executed.\nThis example starts an interactive session with a standard installation of Python:\nStart an interactive session:\nPreamble to activate a SCADE environment on a given project.\nRun a regular script that loads the declared projects and accesses their pathnames.\nAdvanced usage with API tools\nansys.scade.apitools\nscade_env\nload_project\ndeclare_project\nPYTHONPATH\nPYTHONPATH\nansys.scade.apitools\nsys.path\nsys.executable\nSCADE/contrib/PythonXxx\nansys.scade.apitools"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ListExpression",
        "href": "api/ansys/scade/apitools/expr/access/ListExpression.html#listexpression",
        "title": "ListExpression",
        "section": "ListExpression",
        "text": "Bases: Expression\nProvides a group of expressions.\nListExpression\nListExpression\nExpression"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ListExpression",
        "href": "api/ansys/scade/apitools/expr/access/ListExpression.html#ansys.scade.apitools.expr.access.ListExpression",
        "title": "ListExpression > ListExpression > ListExpression",
        "section": "ListExpression > ListExpression",
        "text": "class ansys.scade.apitools.expr.access.ListExpression(expression: scade.model.suite.Expression)\n\nBases: Expression\n\nProvides a group of expressions."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ListExpression",
        "href": "api/ansys/scade/apitools/expr/access/ListExpression.html#parameters",
        "title": "ListExpression > Parameters",
        "section": "Parameters",
        "text": "Call expression to wrap.\nInitialize the instance from the Scade expression.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ListExpression",
        "href": "api/ansys/scade/apitools/expr/access/ListExpression.html#overview",
        "title": "ListExpression > Overview",
        "section": "Overview",
        "text": "items\nExpressions of the group.\nOverview\nitems"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ListExpression",
        "href": "api/ansys/scade/apitools/expr/access/ListExpression.html#import-detail",
        "title": "ListExpression > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ListExpression",
        "href": "api/ansys/scade/apitools/expr/access/ListExpression.html#property-detail",
        "title": "ListExpression > Property detail",
        "section": "Property detail",
        "text": "Expressions of the group.\nProperty detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/ListExpression",
        "href": "api/ansys/scade/apitools/expr/access/ListExpression.html#ListExpression.items",
        "title": "ListExpression > Property detail > items",
        "section": "Property detail > items",
        "text": "property ListExpression.items: list[Expression]\n\nExpressions of the group."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/PreOp",
        "href": "api/ansys/scade/apitools/expr/access/PreOp.html#preop",
        "title": "PreOp",
        "section": "PreOp",
        "text": "Bases: CallExpression\nProvides the previous value of flows.\nThe format is pre <flow>, ..., <flow>.\nSee the pre_op example.\nPreOp\nPreOp\nCallExpression\npre <flow>, ..., <flow>"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/PreOp",
        "href": "api/ansys/scade/apitools/expr/access/PreOp.html#ansys.scade.apitools.expr.access.PreOp",
        "title": "PreOp > PreOp > PreOp",
        "section": "PreOp > PreOp",
        "text": "class ansys.scade.apitools.expr.access.PreOp(expression: scade.model.suite.ExprCall)\n\nBases: CallExpression\n\nProvides the previous value of flows.\n\nThe format is pre <flow>, ..., <flow>.\n\nSee the pre_op example."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/PreOp",
        "href": "api/ansys/scade/apitools/expr/access/PreOp.html#notes",
        "title": "PreOp > Notes",
        "section": "Notes",
        "text": "The design differs slightly from the meta-model. Because the input\nmust be a group of flows, the PreOp class does not inherit\nfrom the FlowOp class. It exposes directly the lists of flows instead of\nhaving a flow that is an instance of a ListExpression class.\nNotes\nPreOp\nFlowOp\nListExpression"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/PreOp",
        "href": "api/ansys/scade/apitools/expr/access/PreOp.html#parameters",
        "title": "PreOp > Parameters",
        "section": "Parameters",
        "text": "Call expression to wrap.\nInitialize the instance from the Scade expression.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/PreOp",
        "href": "api/ansys/scade/apitools/expr/access/PreOp.html#overview",
        "title": "PreOp > Overview",
        "section": "Overview",
        "text": "flows\nFlows after the first cycle.\nOverview\nflows"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/PreOp",
        "href": "api/ansys/scade/apitools/expr/access/PreOp.html#import-detail",
        "title": "PreOp > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/PreOp",
        "href": "api/ansys/scade/apitools/expr/access/PreOp.html#property-detail",
        "title": "PreOp > Property detail",
        "section": "Property detail",
        "text": "Flows after the first cycle.\nProperty detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/PreOp",
        "href": "api/ansys/scade/apitools/expr/access/PreOp.html#PreOp.flows",
        "title": "PreOp > Property detail > flows",
        "section": "Property detail > flows",
        "text": "property PreOp.flows: list[Expression]\n\nFlows after the first cycle."
    },
    {
        "objectID": "api/ansys/scade/apitools/info/runtime/ide_print",
        "href": "api/ansys/scade/apitools/info/runtime/ide_print.html#ansysscadeapitoolsinforuntimeide_print",
        "title": "ansys.scade.apitools.info.runtime.ide_print",
        "section": "ansys.scade.apitools.info.runtime.ide_print",
        "text": "Print based on scade.output.\nansys.scade.apitools.info.runtime.ide_print"
    },
    {
        "objectID": "api/ansys/scade/apitools/info/runtime/ide_print",
        "href": "api/ansys/scade/apitools/info/runtime/ide_print.html#ansys.scade.apitools.info.runtime.ide_print",
        "title": "ansys.scade.apitools.info.runtime.ide_print > ansys.scade.apitools.info.runtime.ide_print > ide_print",
        "section": "ansys.scade.apitools.info.runtime.ide_print > ide_print",
        "text": "ansys.scade.apitools.info.runtime.ide_print(*args, sep=' ', end='\\n', file=sys.stdout, flush=False)\n\nPrint based on scade.output."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_mapfoldwi",
        "href": "api/ansys/scade/apitools/create/expression/create_mapfoldwi.html#ansysscadeapitoolscreateexpressioncreate_mapfoldwi",
        "title": "ansys.scade.apitools.create.expression.create_mapfoldwi",
        "section": "ansys.scade.apitools.create.expression.create_mapfoldwi",
        "text": "Return the expression tree for the higher-order construct for mapfoldwi creation.\nansys.scade.apitools.create.expression.create_mapfoldwi"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_mapfoldwi",
        "href": "api/ansys/scade/apitools/create/expression/create_mapfoldwi.html#ansys.scade.apitools.create.expression.create_mapfoldwi",
        "title": "ansys.scade.apitools.create.expression.create_mapfoldwi > ansys.scade.apitools.create.expression.create_mapfoldwi > create_mapfoldwi",
        "section": "ansys.scade.apitools.create.expression.create_mapfoldwi > create_mapfoldwi",
        "text": "ansys.scade.apitools.create.expression.create_mapfoldwi(size: EX, acc: EX, condition: EX, default: EX) -> ET\n\nReturn the expression tree for the higher-order construct for mapfoldwi creation."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_mapfoldwi",
        "href": "api/ansys/scade/apitools/create/expression/create_mapfoldwi.html#parameters",
        "title": "ansys.scade.apitools.create.expression.create_mapfoldwi > Parameters",
        "section": "Parameters",
        "text": "Number of iterations.\nNumber of accumulators.\nInitial value of the iteration condition.\nDefault value of the iteration.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_mapfoldwi",
        "href": "api/ansys/scade/apitools/create/expression/create_mapfoldwi.html#returns",
        "title": "ansys.scade.apitools.create.expression.create_mapfoldwi > Returns",
        "section": "Returns",
        "text": "ET\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/EmptyTreeError",
        "href": "api/ansys/scade/apitools/create/expression/EmptyTreeError.html#emptytreeerror",
        "title": "EmptyTreeError",
        "section": "EmptyTreeError",
        "text": "Bases: Exception\nProvides the exception for empty expression trees.\nProvide a customized message.\nEmptyTreeError\nEmptyTreeError\nException"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/EmptyTreeError",
        "href": "api/ansys/scade/apitools/create/expression/EmptyTreeError.html#ansys.scade.apitools.create.expression.EmptyTreeError",
        "title": "EmptyTreeError > EmptyTreeError > EmptyTreeError",
        "section": "EmptyTreeError > EmptyTreeError",
        "text": "exception ansys.scade.apitools.create.expression.EmptyTreeError\n\nBases: Exception\n\nProvides the exception for empty expression trees.\n\nProvide a customized message."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/EmptyTreeError",
        "href": "api/ansys/scade/apitools/create/expression/EmptyTreeError.html#import-detail",
        "title": "EmptyTreeError > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_flatten",
        "href": "api/ansys/scade/apitools/create/expression/create_flatten.html#ansysscadeapitoolscreateexpressioncreate_flatten",
        "title": "ansys.scade.apitools.create.expression.create_flatten",
        "section": "ansys.scade.apitools.create.expression.create_flatten",
        "text": "Return the expression tree for flattening a structured value.\nansys.scade.apitools.create.expression.create_flatten"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_flatten",
        "href": "api/ansys/scade/apitools/create/expression/create_flatten.html#ansys.scade.apitools.create.expression.create_flatten",
        "title": "ansys.scade.apitools.create.expression.create_flatten > ansys.scade.apitools.create.expression.create_flatten > create_flatten",
        "section": "ansys.scade.apitools.create.expression.create_flatten > create_flatten",
        "text": "ansys.scade.apitools.create.expression.create_flatten(type_: scade.model.suite.NamedType, arg: EX, modifiers: ET | List[ET] | None = None) -> ET\n\nReturn the expression tree for flattening a structured value."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_flatten",
        "href": "api/ansys/scade/apitools/create/expression/create_flatten.html#parameters",
        "title": "ansys.scade.apitools.create.expression.create_flatten > Parameters",
        "section": "Parameters",
        "text": "Type to instantiate.\nValue to flatten.\nList of higher-order constructs.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_flatten",
        "href": "api/ansys/scade/apitools/create/expression/create_flatten.html#returns",
        "title": "ansys.scade.apitools.create.expression.create_flatten > Returns",
        "section": "Returns",
        "text": "ET\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/DK",
        "href": "api/ansys/scade/apitools/create/data_def/DK.html#dk",
        "title": "DK",
        "section": "DK",
        "text": "Bases: enum.Enum\nProvides an enum of display kinds.\nDK\nDK\nenum.Enum"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/DK",
        "href": "api/ansys/scade/apitools/create/data_def/DK.html#ansys.scade.apitools.create.data_def.DK",
        "title": "DK > DK > DK",
        "section": "DK > DK",
        "text": "class ansys.scade.apitools.create.data_def.DK\n\nBases: enum.Enum\n\nProvides an enum of display kinds."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/DK",
        "href": "api/ansys/scade/apitools/create/data_def/DK.html#overview",
        "title": "DK > Overview",
        "section": "Overview",
        "text": "GRAPHICAL\nSPLIT\nTEXTUAL\nOverview\nGRAPHICAL\nSPLIT\nTEXTUAL"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/DK",
        "href": "api/ansys/scade/apitools/create/data_def/DK.html#import-detail",
        "title": "DK > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/DK",
        "href": "api/ansys/scade/apitools/create/data_def/DK.html#attribute-detail",
        "title": "DK > Attribute detail",
        "section": "Attribute detail",
        "text": "Attribute detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/DK",
        "href": "api/ansys/scade/apitools/create/data_def/DK.html#DK.GRAPHICAL",
        "title": "DK > Attribute detail > GRAPHICAL",
        "section": "Attribute detail > GRAPHICAL",
        "text": "DK.GRAPHICAL = 'EmbeddedGraphical'\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/DK",
        "href": "api/ansys/scade/apitools/create/data_def/DK.html#DK.SPLIT",
        "title": "DK > Attribute detail > SPLIT",
        "section": "Attribute detail > SPLIT",
        "text": "DK.SPLIT = 'Split'\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/DK",
        "href": "api/ansys/scade/apitools/create/data_def/DK.html#DK.TEXTUAL",
        "title": "DK > Attribute detail > TEXTUAL",
        "section": "Attribute detail > TEXTUAL",
        "text": "DK.TEXTUAL = 'EmbeddedTextual'\n\n"
    },
    {
        "objectID": "api/ansys/scade/apitools/prop/pragma/remove_pragma",
        "href": "api/ansys/scade/apitools/prop/pragma/remove_pragma.html#ansysscadeapitoolsproppragmaremove_pragma",
        "title": "ansys.scade.apitools.prop.pragma.remove_pragma",
        "section": "ansys.scade.apitools.prop.pragma.remove_pragma",
        "text": "Remove the pragma ID from an object.\nSee the pragma example.\nansys.scade.apitools.prop.pragma.remove_pragma"
    },
    {
        "objectID": "api/ansys/scade/apitools/prop/pragma/remove_pragma",
        "href": "api/ansys/scade/apitools/prop/pragma/remove_pragma.html#ansys.scade.apitools.prop.pragma.remove_pragma",
        "title": "ansys.scade.apitools.prop.pragma.remove_pragma > ansys.scade.apitools.prop.pragma.remove_pragma > remove_pragma",
        "section": "ansys.scade.apitools.prop.pragma.remove_pragma > remove_pragma",
        "text": "ansys.scade.apitools.prop.pragma.remove_pragma(object_: scade.model.suite.Object, id: str) -> bool\n\nRemove the pragma ID from an object.\n\nSee the pragma example."
    },
    {
        "objectID": "api/ansys/scade/apitools/prop/pragma/remove_pragma",
        "href": "api/ansys/scade/apitools/prop/pragma/remove_pragma.html#parameters",
        "title": "ansys.scade.apitools.prop.pragma.remove_pragma > Parameters",
        "section": "Parameters",
        "text": "Element to search for the pragma.\nID of the pragma.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/prop/pragma/remove_pragma",
        "href": "api/ansys/scade/apitools/prop/pragma/remove_pragma.html#returns",
        "title": "ansys.scade.apitools.prop.pragma.remove_pragma > Returns",
        "section": "Returns",
        "text": "True when the pragma is found, False otherwise.\nReturns\nTrue\nFalse"
    },
    {
        "objectID": "getting_started/index",
        "href": "getting_started/index.html#getting-started",
        "title": "Getting started",
        "section": "Getting started",
        "text": "To use Ansys SCADE API Tools, you must have a valid license for Ansys SCADE.\nFor information on getting a licensed copy, see the\nAnsys SCADE Suite\npage on the Ansys website.\nGetting started"
    },
    {
        "objectID": "getting_started/index",
        "href": "getting_started/index.html#requirements",
        "title": "Getting started > Requirements",
        "section": "Requirements",
        "text": "The ansys-scade-apitools package supports only the versions of Python delivered with\nAnsys SCADE, starting from 2021 R2:\n2021 R2 through 2023 R1: Python 3.7\n2023 R2 and later: Python 3.10\nRequirements\nansys-scade-apitools"
    },
    {
        "objectID": "getting_started/index",
        "href": "getting_started/index.html#install-in-user-mode",
        "title": "Getting started > Install in user mode",
        "section": "Install in user mode",
        "text": "The following steps are for installing Ansys SCADE API Tools in user mode. If you want to\ncontribute to Ansys SCADE API Tools, see contribute_SCADE_API_tools for the steps\nfor installing in developer mode.\nBefore installing Ansys SCADE API Tools in user mode, run this command to ensure that\nyou have the latest version of pip:\nInstall Ansys SCADE API Tools with this command:\nInstall in user mode"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_data_def_state_machine",
        "href": "api/ansys/scade/apitools/create/data_def/add_data_def_state_machine.html#ansysscadeapitoolscreatedata_defadd_data_def_state_machine",
        "title": "ansys.scade.apitools.create.data_def.add_data_def_state_machine",
        "section": "ansys.scade.apitools.create.data_def.add_data_def_state_machine",
        "text": "Create a state machine in a scope.\nansys.scade.apitools.create.data_def.add_data_def_state_machine"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_data_def_state_machine",
        "href": "api/ansys/scade/apitools/create/data_def/add_data_def_state_machine.html#ansys.scade.apitools.create.data_def.add_data_def_state_machine",
        "title": "ansys.scade.apitools.create.data_def.add_data_def_state_machine > ansys.scade.apitools.create.data_def.add_data_def_state_machine > add_data_def_state_machine",
        "section": "ansys.scade.apitools.create.data_def.add_data_def_state_machine > add_data_def_state_machine",
        "text": "ansys.scade.apitools.create.data_def.add_data_def_state_machine(data_def: scade.model.suite.DataDef, name: str, diagram: scade.model.suite.Diagram, position: Tuple[float, float] = (0, 0), size: Tuple[float, float] = (0, 0)) -> scade.model.suite.StateMachine\n\nCreate a state machine in a scope."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_data_def_state_machine",
        "href": "api/ansys/scade/apitools/create/data_def/add_data_def_state_machine.html#parameters",
        "title": "ansys.scade.apitools.create.data_def.add_data_def_state_machine > Parameters",
        "section": "Parameters",
        "text": "Input scope, which is an operator, state, or action.\nName of the state machine.\nDiagram containing the equation. The diagram specified can be either graphical\nor textual, or it can be None. However, it cannot be None if the scope\ncontains at least one diagram.\nPosition of the state machine, expressed in 1/100th of mm.\nThis value is ignored if the diagram is not a graphical diagram.\nOtherwise, it must be specified.\nSize of the state machine, expressed in 1/100th of mm.\nThis value is ignored if your diagram is not a graphical diagram.\nOtherwise, it must be specified.\nParameters\nNone\nNone"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_data_def_state_machine",
        "href": "api/ansys/scade/apitools/create/data_def/add_data_def_state_machine.html#returns",
        "title": "ansys.scade.apitools.create.data_def.add_data_def_state_machine > Returns",
        "section": "Returns",
        "text": "suite.StateMachine\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/CaseOp",
        "href": "api/ansys/scade/apitools/expr/access/CaseOp.html#caseop",
        "title": "CaseOp",
        "section": "CaseOp",
        "text": "Bases: CallExpression\nProvides the case expression.\nHere is the format:\nSee the case_op example.\nCaseOp\nCaseOp\nCallExpression"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/CaseOp",
        "href": "api/ansys/scade/apitools/expr/access/CaseOp.html#ansys.scade.apitools.expr.access.CaseOp",
        "title": "CaseOp > CaseOp > CaseOp",
        "section": "CaseOp > CaseOp",
        "text": "class ansys.scade.apitools.expr.access.CaseOp(expression: scade.model.suite.ExprCall)\n\nBases: CallExpression\n\nProvides the case expression.\n\nHere is the format:\n\n( case <switch> of ``\n  | <pattern> :   <flow>\n  | ...\n  | <pattern> :   <flow>\n  | _ :   <default>)\n\nSee the case_op example."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/CaseOp",
        "href": "api/ansys/scade/apitools/expr/access/CaseOp.html#notes",
        "title": "CaseOp > Notes",
        "section": "Notes",
        "text": "The design differs slightly from the meta-model. The Case case used to\nimplement the case collection is replaced by a tuple (pattern, flow).\nA new property, default, provides the optional default value.\nNotes\nCase\ncase\npattern\nflow\ndefault"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/CaseOp",
        "href": "api/ansys/scade/apitools/expr/access/CaseOp.html#parameters",
        "title": "CaseOp > Parameters",
        "section": "Parameters",
        "text": "Call expression to wrap.\nInitialize the instance from the Scade expression.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/CaseOp",
        "href": "api/ansys/scade/apitools/expr/access/CaseOp.html#overview",
        "title": "CaseOp > Overview",
        "section": "Overview",
        "text": "cases\nPairs (Expression, Expression) to build the case.\ndefault\nValue to use as default when not None.\nswitch\nSelector of the case expression.\nOverview\ncases\nExpression\nExpression\ndefault\nNone\nswitch"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/CaseOp",
        "href": "api/ansys/scade/apitools/expr/access/CaseOp.html#import-detail",
        "title": "CaseOp > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/CaseOp",
        "href": "api/ansys/scade/apitools/expr/access/CaseOp.html#property-detail",
        "title": "CaseOp > Property detail",
        "section": "Property detail",
        "text": "Pairs (Expression, Expression) to build the case.\nValue to use as default when not None.\nSelector of the case expression.\nProperty detail\nExpression\nExpression\nNone"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/CaseOp",
        "href": "api/ansys/scade/apitools/expr/access/CaseOp.html#CaseOp.cases",
        "title": "CaseOp > Property detail > cases",
        "section": "Property detail > cases",
        "text": "property CaseOp.cases: list[tuple[Expression, Expression]]\n\nPairs (Expression, Expression) to build the case."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/CaseOp",
        "href": "api/ansys/scade/apitools/expr/access/CaseOp.html#CaseOp.default",
        "title": "CaseOp > Property detail > default",
        "section": "Property detail > default",
        "text": "property CaseOp.default: Expression | None\n\nValue to use as default when not None."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/CaseOp",
        "href": "api/ansys/scade/apitools/expr/access/CaseOp.html#CaseOp.switch",
        "title": "CaseOp > Property detail > switch",
        "section": "Property detail > switch",
        "text": "property CaseOp.switch: Expression\n\nSelector of the case expression."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_diagram_missing_edges",
        "href": "api/ansys/scade/apitools/create/data_def/add_diagram_missing_edges.html#ansysscadeapitoolscreatedata_defadd_diagram_missing_edges",
        "title": "ansys.scade.apitools.create.data_def.add_diagram_missing_edges",
        "section": "ansys.scade.apitools.create.data_def.add_diagram_missing_edges",
        "text": "Add the missing edges in a graphical diagram with default positions.\nansys.scade.apitools.create.data_def.add_diagram_missing_edges"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_diagram_missing_edges",
        "href": "api/ansys/scade/apitools/create/data_def/add_diagram_missing_edges.html#ansys.scade.apitools.create.data_def.add_diagram_missing_edges",
        "title": "ansys.scade.apitools.create.data_def.add_diagram_missing_edges > ansys.scade.apitools.create.data_def.add_diagram_missing_edges > add_diagram_missing_edges",
        "section": "ansys.scade.apitools.create.data_def.add_diagram_missing_edges > add_diagram_missing_edges",
        "text": "ansys.scade.apitools.create.data_def.add_diagram_missing_edges(diagram: scade.model.suite.NetDiagram) -> List[scade.model.suite.Edge]\n\nAdd the missing edges in a graphical diagram with default positions."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_diagram_missing_edges",
        "href": "api/ansys/scade/apitools/create/data_def/add_diagram_missing_edges.html#parameters",
        "title": "ansys.scade.apitools.create.data_def.add_diagram_missing_edges > Parameters",
        "section": "Parameters",
        "text": "Input diagram.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/data_def/add_diagram_missing_edges",
        "href": "api/ansys/scade/apitools/create/data_def/add_diagram_missing_edges.html#returns",
        "title": "ansys.scade.apitools.create.data_def.add_diagram_missing_edges > Returns",
        "section": "Returns",
        "text": "List[suite.Edge]\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/add_operator_hidden",
        "href": "api/ansys/scade/apitools/create/declaration/add_operator_hidden.html#ansysscadeapitoolscreatedeclarationadd_operator_hidden",
        "title": "ansys.scade.apitools.create.declaration.add_operator_hidden",
        "section": "ansys.scade.apitools.create.declaration.add_operator_hidden",
        "text": "Add hidden inputs to an operator.\nansys.scade.apitools.create.declaration.add_operator_hidden"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/add_operator_hidden",
        "href": "api/ansys/scade/apitools/create/declaration/add_operator_hidden.html#ansys.scade.apitools.create.declaration.add_operator_hidden",
        "title": "ansys.scade.apitools.create.declaration.add_operator_hidden > ansys.scade.apitools.create.declaration.add_operator_hidden > add_operator_hidden",
        "section": "ansys.scade.apitools.create.declaration.add_operator_hidden > add_operator_hidden",
        "text": "ansys.scade.apitools.create.declaration.add_operator_hidden(operator: scade.model.suite.Operator, vars: List[Tuple[str, ansys.scade.apitools.create.type.TX]], insert_before: scade.model.suite.LocalVariable | None = None) -> List[scade.model.suite.LocalVariable]\n\nAdd hidden inputs to an operator."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/add_operator_hidden",
        "href": "api/ansys/scade/apitools/create/declaration/add_operator_hidden.html#notes",
        "title": "ansys.scade.apitools.create.declaration.add_operator_hidden > Notes",
        "section": "Notes",
        "text": "This is an interface change with respect to the SCADE Creation Library.\nThe pairs “name”/”type” tree are now embedded in a list of tuples.\nNotes"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/add_operator_hidden",
        "href": "api/ansys/scade/apitools/create/declaration/add_operator_hidden.html#parameters",
        "title": "ansys.scade.apitools.create.declaration.add_operator_hidden > Parameters",
        "section": "Parameters",
        "text": "Input operator.\nName/type expression trees.\nInsertion point of the inputs. When this parameter is not None, it is\nan existing hidden input of the operator. The hidden inputs are inserted\nbefore this input. Otherwise, the hidden inputs are added at the end.\nParameters\nNone"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/add_operator_hidden",
        "href": "api/ansys/scade/apitools/create/declaration/add_operator_hidden.html#returns",
        "title": "ansys.scade.apitools.create.declaration.add_operator_hidden > Returns",
        "section": "Returns",
        "text": "List of the added hidden inputs.\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/type/index",
        "href": "api/ansys/scade/apitools/create/type/index.html#the-typepy-module",
        "title": "The type.py module",
        "section": "The type.py module",
        "text": "The type.py module\ntype.py"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/type/index",
        "href": "api/ansys/scade/apitools/create/type/index.html#summary",
        "title": "The type.py module > Summary",
        "section": "Summary",
        "text": "TypeTree\nProvides the top-level abstract class for type trees.\ncreate_sized\nGet the type tree for a sized type.\ncreate_structure\nGet the type tree for a structure.\ncreate_table\nGet the type tree for a structure.\nTT\nShort name for a TypeTree instance to simplify the declarations.\nTX\nExtended type tree to simply the use of the create functions.\nSummary\nTypeTree\ncreate_sized\ncreate_structure\ncreate_table\nTT\nTypeTree\nTX"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/type/index",
        "href": "api/ansys/scade/apitools/create/type/index.html#description",
        "title": "The type.py module > Description",
        "section": "Description",
        "text": "Provide helpers for creating type trees.\nExpression trees are intermediate structures to declare any arbitrary complex\ntypes. They create the corresponding SCADE Suite type in the context of a\nmodel element, such as the type of a constant.\nThis module provides functions to create a type tree for any type of the Scade\nlanguage. Thus, the intermediate structures or classes defining the type trees\ncan be opaque.\nNotes: The typing is relaxed in this module to ease the constructs.\nTT is an alias for TypeTree to shorten the declarations.\nTX, which stands for extended type tree, is defined as follows:\nThis enhances the usability of these functions by accepting some values,\nsuch as existing types or name of predefined types, as valid type trees.\nDescription\nTT\nTypeTree\nTX"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/type/index",
        "href": "api/ansys/scade/apitools/create/type/index.html#module-detail",
        "title": "The type.py module > Module detail",
        "section": "Module detail",
        "text": "Short name for a TypeTree instance to simplify the declarations.\nExtended type tree to simply the use of the create functions.\nModule detail\nTypeTree"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/type/index",
        "href": "api/ansys/scade/apitools/create/type/index.html#type.TT",
        "title": "The type.py module > Module detail > TT",
        "section": "Module detail > TT",
        "text": "type.TT\n\nShort name for a TypeTree instance to simplify the declarations."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/type/index",
        "href": "api/ansys/scade/apitools/create/type/index.html#type.TX",
        "title": "The type.py module > Module detail > TX",
        "section": "Module detail > TX",
        "text": "type.TX\n\nExtended type tree to simply the use of the create functions."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/FbyOp",
        "href": "api/ansys/scade/apitools/expr/access/FbyOp.html#fbyop",
        "title": "FbyOp",
        "section": "FbyOp",
        "text": "Bases: CallExpression\nProvides the delay of flows.\nThe format is fby(<flow>, ..., <flow>; <delay>; <init>, ..., <init>).\nSee the fby_op example.\nFbyOp\nFbyOp\nCallExpression\nfby(<flow>, ..., <flow>; <delay>; <init>, ..., <init>)"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/FbyOp",
        "href": "api/ansys/scade/apitools/expr/access/FbyOp.html#ansys.scade.apitools.expr.access.FbyOp",
        "title": "FbyOp > FbyOp > FbyOp",
        "section": "FbyOp > FbyOp",
        "text": "class ansys.scade.apitools.expr.access.FbyOp(expression: scade.model.suite.ExprCall)\n\nBases: CallExpression\n\nProvides the delay of flows.\n\nThe format is fby(<flow>, ..., <flow>; <delay>; <init>, ..., <init>).\n\nSee the fby_op example."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/FbyOp",
        "href": "api/ansys/scade/apitools/expr/access/FbyOp.html#parameters",
        "title": "FbyOp > Parameters",
        "section": "Parameters",
        "text": "Call expression to wrap.\nInitialize the instance from the Scade expression.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/FbyOp",
        "href": "api/ansys/scade/apitools/expr/access/FbyOp.html#overview",
        "title": "FbyOp > Overview",
        "section": "Overview",
        "text": "delay\nDelay of the expression.\nflows\nFlows after the first cycle.\ninits\nInitialization values of the flows.\nOverview\ndelay\nflows\ninits"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/FbyOp",
        "href": "api/ansys/scade/apitools/expr/access/FbyOp.html#import-detail",
        "title": "FbyOp > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/FbyOp",
        "href": "api/ansys/scade/apitools/expr/access/FbyOp.html#property-detail",
        "title": "FbyOp > Property detail",
        "section": "Property detail",
        "text": "Delay of the expression.\nFlows after the first cycle.\nInitialization values of the flows.\nProperty detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/FbyOp",
        "href": "api/ansys/scade/apitools/expr/access/FbyOp.html#FbyOp.delay",
        "title": "FbyOp > Property detail > delay",
        "section": "Property detail > delay",
        "text": "property FbyOp.delay: Expression\n\nDelay of the expression."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/FbyOp",
        "href": "api/ansys/scade/apitools/expr/access/FbyOp.html#FbyOp.flows",
        "title": "FbyOp > Property detail > flows",
        "section": "Property detail > flows",
        "text": "property FbyOp.flows: list[Expression]\n\nFlows after the first cycle."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/FbyOp",
        "href": "api/ansys/scade/apitools/expr/access/FbyOp.html#FbyOp.inits",
        "title": "FbyOp > Property detail > inits",
        "section": "Property detail > inits",
        "text": "property FbyOp.inits: list[Expression]\n\nInitialization values of the flows."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/Present",
        "href": "api/ansys/scade/apitools/expr/access/Present.html#present",
        "title": "Present",
        "section": "Present",
        "text": "Bases: Expression\nProvides the presence of a signal.\nThe format is '<signal>.\nSee the present example.\nPresent\nPresent\nExpression\n'<signal>"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/Present",
        "href": "api/ansys/scade/apitools/expr/access/Present.html#ansys.scade.apitools.expr.access.Present",
        "title": "Present > Present > Present",
        "section": "Present > Present",
        "text": "class ansys.scade.apitools.expr.access.Present(expression: scade.model.suite.ExprId)\n\nBases: Expression\n\nProvides the presence of a signal.\n\nThe format is '<signal>.\n\nSee the present example."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/Present",
        "href": "api/ansys/scade/apitools/expr/access/Present.html#parameters",
        "title": "Present > Parameters",
        "section": "Parameters",
        "text": "Signal expression to wrap.\nInitialize the instance from the Scade expression.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/Present",
        "href": "api/ansys/scade/apitools/expr/access/Present.html#overview",
        "title": "Present > Overview",
        "section": "Overview",
        "text": "signal\nSignal of the expression.\nOverview\nsignal"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/Present",
        "href": "api/ansys/scade/apitools/expr/access/Present.html#import-detail",
        "title": "Present > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/Present",
        "href": "api/ansys/scade/apitools/expr/access/Present.html#property-detail",
        "title": "Present > Property detail",
        "section": "Property detail",
        "text": "Signal of the expression.\nProperty detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/Present",
        "href": "api/ansys/scade/apitools/expr/access/Present.html#Present.signal",
        "title": "Present > Property detail > signal",
        "section": "Property detail > signal",
        "text": "property Present.signal: scade.model.suite.LocalVariable\n\nSignal of the expression."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/create_imported_operator",
        "href": "api/ansys/scade/apitools/create/declaration/create_imported_operator.html#ansysscadeapitoolscreatedeclarationcreate_imported_operator",
        "title": "ansys.scade.apitools.create.declaration.create_imported_operator",
        "section": "ansys.scade.apitools.create.declaration.create_imported_operator",
        "text": "Create an imported operator.\nThe operator has a name.\nansys.scade.apitools.create.declaration.create_imported_operator"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/create_imported_operator",
        "href": "api/ansys/scade/apitools/create/declaration/create_imported_operator.html#ansys.scade.apitools.create.declaration.create_imported_operator",
        "title": "ansys.scade.apitools.create.declaration.create_imported_operator > ansys.scade.apitools.create.declaration.create_imported_operator > create_imported_operator",
        "section": "ansys.scade.apitools.create.declaration.create_imported_operator > create_imported_operator",
        "text": "ansys.scade.apitools.create.declaration.create_imported_operator(owner: scade.model.suite.Package, name: str, path: pathlib.Path | None, visibility: VK = VK.PUBLIC, symbol_file: pathlib.Path | None = None, state: bool = False) -> scade.model.suite.Operator\n\nCreate an imported operator.\n\nThe operator has a name."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/create_imported_operator",
        "href": "api/ansys/scade/apitools/create/declaration/create_imported_operator.html#parameters",
        "title": "ansys.scade.apitools.create.declaration.create_imported_operator > Parameters",
        "section": "Parameters",
        "text": "Owner of the operator, which is either the model itself or a package.\nName of the operator.\nFile defining the imported operator.\nPath of the file to store the operator. This parameter is optional if\nthe package’s owner is a package. When the path is None and owner\nis the model, the operator isstored in the model’s default file.\nAccessibility of the operator.\nPath of the file defining the symbol of the operator.\nWhether the operator is a node.\nParameters\nNone"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/declaration/create_imported_operator",
        "href": "api/ansys/scade/apitools/create/declaration/create_imported_operator.html#returns",
        "title": "ansys.scade.apitools.create.declaration.create_imported_operator > Returns",
        "section": "Returns",
        "text": "suite.Operator\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_mapfold",
        "href": "api/ansys/scade/apitools/create/expression/create_mapfold.html#ansysscadeapitoolscreateexpressioncreate_mapfold",
        "title": "ansys.scade.apitools.create.expression.create_mapfold",
        "section": "ansys.scade.apitools.create.expression.create_mapfold",
        "text": "Return the expression tree for the higher-order construct for mapfold creation.\nansys.scade.apitools.create.expression.create_mapfold"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_mapfold",
        "href": "api/ansys/scade/apitools/create/expression/create_mapfold.html#ansys.scade.apitools.create.expression.create_mapfold",
        "title": "ansys.scade.apitools.create.expression.create_mapfold > ansys.scade.apitools.create.expression.create_mapfold > create_mapfold",
        "section": "ansys.scade.apitools.create.expression.create_mapfold > create_mapfold",
        "text": "ansys.scade.apitools.create.expression.create_mapfold(size: EX, acc: EX) -> ET\n\nReturn the expression tree for the higher-order construct for mapfold creation."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_mapfold",
        "href": "api/ansys/scade/apitools/create/expression/create_mapfold.html#parameters",
        "title": "ansys.scade.apitools.create.expression.create_mapfold > Parameters",
        "section": "Parameters",
        "text": "Number of iterations.\nNumber of accumulators.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_mapfold",
        "href": "api/ansys/scade/apitools/create/expression/create_mapfold.html#returns",
        "title": "ansys.scade.apitools.create.expression.create_mapfold > Returns",
        "section": "Returns",
        "text": "ET\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_higher_order_call",
        "href": "api/ansys/scade/apitools/create/expression/create_higher_order_call.html#ansysscadeapitoolscreateexpressioncreate_higher_order_call",
        "title": "ansys.scade.apitools.create.expression.create_higher_order_call",
        "section": "ansys.scade.apitools.create.expression.create_higher_order_call",
        "text": "Return the expression tree for a call to an operator.\nansys.scade.apitools.create.expression.create_higher_order_call"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_higher_order_call",
        "href": "api/ansys/scade/apitools/create/expression/create_higher_order_call.html#ansys.scade.apitools.create.expression.create_higher_order_call",
        "title": "ansys.scade.apitools.create.expression.create_higher_order_call > ansys.scade.apitools.create.expression.create_higher_order_call > create_higher_order_call",
        "section": "ansys.scade.apitools.create.expression.create_higher_order_call > create_higher_order_call",
        "text": "ansys.scade.apitools.create.expression.create_higher_order_call(operator: scade.model.suite.Operator, args: LX, modifiers: ET | List[ET], inst_args: LX | None = None) -> ET\n\nReturn the expression tree for a call to an operator."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_higher_order_call",
        "href": "api/ansys/scade/apitools/create/expression/create_higher_order_call.html#parameters",
        "title": "ansys.scade.apitools.create.expression.create_higher_order_call > Parameters",
        "section": "Parameters",
        "text": "Operator to call.\nParameters: expression trees.\nHigher-order constructs: expression trees.\nInstance parameters: expression trees.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_higher_order_call",
        "href": "api/ansys/scade/apitools/create/expression/create_higher_order_call.html#returns",
        "title": "ansys.scade.apitools.create.expression.create_higher_order_call > Returns",
        "section": "Returns",
        "text": "ET\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_change_ith",
        "href": "api/ansys/scade/apitools/create/expression/create_change_ith.html#ansysscadeapitoolscreateexpressioncreate_change_ith",
        "title": "ansys.scade.apitools.create.expression.create_change_ith",
        "section": "ansys.scade.apitools.create.expression.create_change_ith",
        "text": "Return the expression tree for the with operator.\nansys.scade.apitools.create.expression.create_change_ith"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_change_ith",
        "href": "api/ansys/scade/apitools/create/expression/create_change_ith.html#ansys.scade.apitools.create.expression.create_change_ith",
        "title": "ansys.scade.apitools.create.expression.create_change_ith > ansys.scade.apitools.create.expression.create_change_ith > create_change_ith",
        "section": "ansys.scade.apitools.create.expression.create_change_ith > create_change_ith",
        "text": "ansys.scade.apitools.create.expression.create_change_ith(flow: EX, path: LX, value: EX) -> ET\n\nReturn the expression tree for the with operator."
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_change_ith",
        "href": "api/ansys/scade/apitools/create/expression/create_change_ith.html#parameters",
        "title": "ansys.scade.apitools.create.expression.create_change_ith > Parameters",
        "section": "Parameters",
        "text": "Input flow of the projection.\nElements of the path, which is a label, index, or variable.\nValue to assign.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/create/expression/create_change_ith",
        "href": "api/ansys/scade/apitools/create/expression/create_change_ith.html#returns",
        "title": "ansys.scade.apitools.create.expression.create_change_ith > Returns",
        "section": "Returns",
        "text": "ET\nReturns"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/IfThenElseOp",
        "href": "api/ansys/scade/apitools/expr/access/IfThenElseOp.html#ifthenelseop",
        "title": "IfThenElseOp",
        "section": "IfThenElseOp",
        "text": "Bases: CallExpression\nProvides a vector from a flow and a size.\nThe format is if <if> then <then>, ..., <then> else <else>, ..., <else>.\nSee the if_then_else_op example.\nIfThenElseOp\nIfThenElseOp\nCallExpression\nif <if> then <then>, ..., <then> else <else>, ..., <else>"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/IfThenElseOp",
        "href": "api/ansys/scade/apitools/expr/access/IfThenElseOp.html#ansys.scade.apitools.expr.access.IfThenElseOp",
        "title": "IfThenElseOp > IfThenElseOp > IfThenElseOp",
        "section": "IfThenElseOp > IfThenElseOp",
        "text": "class ansys.scade.apitools.expr.access.IfThenElseOp(expression: scade.model.suite.ExprCall)\n\nBases: CallExpression\n\nProvides a vector from a flow and a size.\n\nThe format is if <if> then <then>, ..., <then> else <else>, ..., <else>.\n\nSee the if_then_else_op example."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/IfThenElseOp",
        "href": "api/ansys/scade/apitools/expr/access/IfThenElseOp.html#notes",
        "title": "IfThenElseOp > Notes",
        "section": "Notes",
        "text": "The design differs slightly from the meta-model. Because the then/else\nparts must be groups of flows, the IfThenElseOp class exposes directly\nthe list of then/else flows instead of a flow that is an instance of the\nListExpression class.\nNotes\nIfThenElseOp\nListExpression"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/IfThenElseOp",
        "href": "api/ansys/scade/apitools/expr/access/IfThenElseOp.html#parameters",
        "title": "IfThenElseOp > Parameters",
        "section": "Parameters",
        "text": "Call expression to wrap.\nInitialize the instance from the Scade expression.\nParameters"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/IfThenElseOp",
        "href": "api/ansys/scade/apitools/expr/access/IfThenElseOp.html#overview",
        "title": "IfThenElseOp > Overview",
        "section": "Overview",
        "text": "else_\nFlows when the condition is false.\nif_\nCondition of the expression.\nthen\nFlows when the condition is true.\nOverview\nelse_\nif_\nthen"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/IfThenElseOp",
        "href": "api/ansys/scade/apitools/expr/access/IfThenElseOp.html#import-detail",
        "title": "IfThenElseOp > Import detail",
        "section": "Import detail",
        "text": "Import detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/IfThenElseOp",
        "href": "api/ansys/scade/apitools/expr/access/IfThenElseOp.html#property-detail",
        "title": "IfThenElseOp > Property detail",
        "section": "Property detail",
        "text": "Flows when the condition is false.\nCondition of the expression.\nFlows when the condition is true.\nProperty detail"
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/IfThenElseOp",
        "href": "api/ansys/scade/apitools/expr/access/IfThenElseOp.html#IfThenElseOp.else_",
        "title": "IfThenElseOp > Property detail > else_",
        "section": "Property detail > else_",
        "text": "property IfThenElseOp.else_: list[Expression]\n\nFlows when the condition is false."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/IfThenElseOp",
        "href": "api/ansys/scade/apitools/expr/access/IfThenElseOp.html#IfThenElseOp.if_",
        "title": "IfThenElseOp > Property detail > if_",
        "section": "Property detail > if_",
        "text": "property IfThenElseOp.if_: Expression\n\nCondition of the expression."
    },
    {
        "objectID": "api/ansys/scade/apitools/expr/access/IfThenElseOp",
        "href": "api/ansys/scade/apitools/expr/access/IfThenElseOp.html#IfThenElseOp.then",
        "title": "IfThenElseOp > Property detail > then",
        "section": "Property detail > then",
        "text": "property IfThenElseOp.then: list[Expression]\n\nFlows when the condition is true."
    },
    {
        "objectID": "api/ansys/scade/apitools/info/install/get_scade_version",
        "href": "api/ansys/scade/apitools/info/install/get_scade_version.html#ansysscadeapitoolsinfoinstallget_scade_version",
        "title": "ansys.scade.apitools.info.install.get_scade_version",
        "section": "ansys.scade.apitools.info.install.get_scade_version",
        "text": "Get the version of SCADE.\nFor example, 232 for SCADE 2023 R2.\nansys.scade.apitools.info.install.get_scade_version\n232"
    },
    {
        "objectID": "api/ansys/scade/apitools/info/install/get_scade_version",
        "href": "api/ansys/scade/apitools/info/install/get_scade_version.html#ansys.scade.apitools.info.install.get_scade_version",
        "title": "ansys.scade.apitools.info.install.get_scade_version > ansys.scade.apitools.info.install.get_scade_version > get_scade_version",
        "section": "ansys.scade.apitools.info.install.get_scade_version > get_scade_version",
        "text": "ansys.scade.apitools.info.install.get_scade_version() -> int\n\nGet the version of SCADE.\n\nFor example, 232 for SCADE 2023 R2."
    }
]