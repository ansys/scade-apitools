Search.setIndex({"docnames": ["_autosummary/ansys.scade.apitools.expr", "_autosummary/ansys.scade.apitools.expr.access", "_autosummary/ansys.scade.apitools.expr.access.ActivateNoInitOp", "_autosummary/ansys.scade.apitools.expr.access.ActivateOp", "_autosummary/ansys.scade.apitools.expr.access.ArrayOp", "_autosummary/ansys.scade.apitools.expr.access.AryOp", "_autosummary/ansys.scade.apitools.expr.access.BinaryOp", "_autosummary/ansys.scade.apitools.expr.access.CallExpression", "_autosummary/ansys.scade.apitools.expr.access.CaseOp", "_autosummary/ansys.scade.apitools.expr.access.ChgIthOp", "_autosummary/ansys.scade.apitools.expr.access.CondactOp", "_autosummary/ansys.scade.apitools.expr.access.ConditionalOp", "_autosummary/ansys.scade.apitools.expr.access.ConstValue", "_autosummary/ansys.scade.apitools.expr.access.DataArrayOp", "_autosummary/ansys.scade.apitools.expr.access.DataStructOp", "_autosummary/ansys.scade.apitools.expr.access.Expression", "_autosummary/ansys.scade.apitools.expr.access.FbyOp", "_autosummary/ansys.scade.apitools.expr.access.FlattenOp", "_autosummary/ansys.scade.apitools.expr.access.FlowOp", "_autosummary/ansys.scade.apitools.expr.access.IdExpression", "_autosummary/ansys.scade.apitools.expr.access.IfThenElseOp", "_autosummary/ansys.scade.apitools.expr.access.InitOp", "_autosummary/ansys.scade.apitools.expr.access.IteratorOp", "_autosummary/ansys.scade.apitools.expr.access.Label", "_autosummary/ansys.scade.apitools.expr.access.LabelledExpression", "_autosummary/ansys.scade.apitools.expr.access.Last", "_autosummary/ansys.scade.apitools.expr.access.ListExpression", "_autosummary/ansys.scade.apitools.expr.access.MakeOp", "_autosummary/ansys.scade.apitools.expr.access.NAryOp", "_autosummary/ansys.scade.apitools.expr.access.NumericCastOp", "_autosummary/ansys.scade.apitools.expr.access.OpCall", "_autosummary/ansys.scade.apitools.expr.access.OpOp", "_autosummary/ansys.scade.apitools.expr.access.PartialIteratorOp", "_autosummary/ansys.scade.apitools.expr.access.PreOp", "_autosummary/ansys.scade.apitools.expr.access.Present", "_autosummary/ansys.scade.apitools.expr.access.PrjDynOp", "_autosummary/ansys.scade.apitools.expr.access.PrjOp", "_autosummary/ansys.scade.apitools.expr.access.ProjectionOp", "_autosummary/ansys.scade.apitools.expr.access.RestartOp", "_autosummary/ansys.scade.apitools.expr.access.ScalarToVectorOp", "_autosummary/ansys.scade.apitools.expr.access.SharpOp", "_autosummary/ansys.scade.apitools.expr.access.SliceOp", "_autosummary/ansys.scade.apitools.expr.access.TextExpression", "_autosummary/ansys.scade.apitools.expr.access.TransposeOp", "_autosummary/ansys.scade.apitools.expr.access.UnaryOp", "_autosummary/ansys.scade.apitools.expr.access.accessor", "_autosummary/ansys.scade.apitools.expr.predef", "_autosummary/ansys.scade.apitools.expr.predef.Eck", "_autosummary/ansys.scade.apitools.prop", "_autosummary/ansys.scade.apitools.prop.pragma", "_autosummary/ansys.scade.apitools.prop.pragma.find_pragma", "_autosummary/ansys.scade.apitools.prop.pragma.find_pragma_tool", "_autosummary/ansys.scade.apitools.prop.pragma.get_pragma_json", "_autosummary/ansys.scade.apitools.prop.pragma.get_pragma_text", "_autosummary/ansys.scade.apitools.prop.pragma.get_pragma_tool_text", "_autosummary/ansys.scade.apitools.prop.pragma.remove_pragma", "_autosummary/ansys.scade.apitools.prop.pragma.remove_pragma_tool", "_autosummary/ansys.scade.apitools.prop.pragma.set_pragma_json", "_autosummary/ansys.scade.apitools.prop.pragma.set_pragma_text", "_autosummary/ansys.scade.apitools.prop.pragma.set_pragma_tool_text", "_autosummary/ansys.scade.apitools.query", "_autosummary/ansys.scade.apitools.query.type", "_autosummary/ansys.scade.apitools.query.type.get_cell_type", "_autosummary/ansys.scade.apitools.query.type.get_leaf_alias", "_autosummary/ansys.scade.apitools.query.type.get_leaf_type", "_autosummary/ansys.scade.apitools.query.type.get_type_name", "_autosummary/ansys.scade.apitools.query.type.is_array", "_autosummary/ansys.scade.apitools.query.type.is_enum", "_autosummary/ansys.scade.apitools.query.type.is_imported", "_autosummary/ansys.scade.apitools.query.type.is_predefined", "_autosummary/ansys.scade.apitools.query.type.is_scalar", "_autosummary/ansys.scade.apitools.query.type.is_structure", "index", "modules"], "filenames": ["_autosummary/ansys.scade.apitools.expr.rst", "_autosummary/ansys.scade.apitools.expr.access.rst", "_autosummary/ansys.scade.apitools.expr.access.ActivateNoInitOp.rst", "_autosummary/ansys.scade.apitools.expr.access.ActivateOp.rst", "_autosummary/ansys.scade.apitools.expr.access.ArrayOp.rst", "_autosummary/ansys.scade.apitools.expr.access.AryOp.rst", "_autosummary/ansys.scade.apitools.expr.access.BinaryOp.rst", "_autosummary/ansys.scade.apitools.expr.access.CallExpression.rst", "_autosummary/ansys.scade.apitools.expr.access.CaseOp.rst", "_autosummary/ansys.scade.apitools.expr.access.ChgIthOp.rst", "_autosummary/ansys.scade.apitools.expr.access.CondactOp.rst", "_autosummary/ansys.scade.apitools.expr.access.ConditionalOp.rst", "_autosummary/ansys.scade.apitools.expr.access.ConstValue.rst", "_autosummary/ansys.scade.apitools.expr.access.DataArrayOp.rst", "_autosummary/ansys.scade.apitools.expr.access.DataStructOp.rst", "_autosummary/ansys.scade.apitools.expr.access.Expression.rst", "_autosummary/ansys.scade.apitools.expr.access.FbyOp.rst", "_autosummary/ansys.scade.apitools.expr.access.FlattenOp.rst", "_autosummary/ansys.scade.apitools.expr.access.FlowOp.rst", "_autosummary/ansys.scade.apitools.expr.access.IdExpression.rst", "_autosummary/ansys.scade.apitools.expr.access.IfThenElseOp.rst", "_autosummary/ansys.scade.apitools.expr.access.InitOp.rst", "_autosummary/ansys.scade.apitools.expr.access.IteratorOp.rst", "_autosummary/ansys.scade.apitools.expr.access.Label.rst", "_autosummary/ansys.scade.apitools.expr.access.LabelledExpression.rst", "_autosummary/ansys.scade.apitools.expr.access.Last.rst", "_autosummary/ansys.scade.apitools.expr.access.ListExpression.rst", "_autosummary/ansys.scade.apitools.expr.access.MakeOp.rst", "_autosummary/ansys.scade.apitools.expr.access.NAryOp.rst", "_autosummary/ansys.scade.apitools.expr.access.NumericCastOp.rst", "_autosummary/ansys.scade.apitools.expr.access.OpCall.rst", "_autosummary/ansys.scade.apitools.expr.access.OpOp.rst", "_autosummary/ansys.scade.apitools.expr.access.PartialIteratorOp.rst", "_autosummary/ansys.scade.apitools.expr.access.PreOp.rst", "_autosummary/ansys.scade.apitools.expr.access.Present.rst", "_autosummary/ansys.scade.apitools.expr.access.PrjDynOp.rst", "_autosummary/ansys.scade.apitools.expr.access.PrjOp.rst", "_autosummary/ansys.scade.apitools.expr.access.ProjectionOp.rst", "_autosummary/ansys.scade.apitools.expr.access.RestartOp.rst", "_autosummary/ansys.scade.apitools.expr.access.ScalarToVectorOp.rst", "_autosummary/ansys.scade.apitools.expr.access.SharpOp.rst", "_autosummary/ansys.scade.apitools.expr.access.SliceOp.rst", "_autosummary/ansys.scade.apitools.expr.access.TextExpression.rst", "_autosummary/ansys.scade.apitools.expr.access.TransposeOp.rst", "_autosummary/ansys.scade.apitools.expr.access.UnaryOp.rst", "_autosummary/ansys.scade.apitools.expr.access.accessor.rst", "_autosummary/ansys.scade.apitools.expr.predef.rst", "_autosummary/ansys.scade.apitools.expr.predef.Eck.rst", "_autosummary/ansys.scade.apitools.prop.rst", "_autosummary/ansys.scade.apitools.prop.pragma.rst", "_autosummary/ansys.scade.apitools.prop.pragma.find_pragma.rst", "_autosummary/ansys.scade.apitools.prop.pragma.find_pragma_tool.rst", "_autosummary/ansys.scade.apitools.prop.pragma.get_pragma_json.rst", "_autosummary/ansys.scade.apitools.prop.pragma.get_pragma_text.rst", "_autosummary/ansys.scade.apitools.prop.pragma.get_pragma_tool_text.rst", "_autosummary/ansys.scade.apitools.prop.pragma.remove_pragma.rst", "_autosummary/ansys.scade.apitools.prop.pragma.remove_pragma_tool.rst", "_autosummary/ansys.scade.apitools.prop.pragma.set_pragma_json.rst", "_autosummary/ansys.scade.apitools.prop.pragma.set_pragma_text.rst", "_autosummary/ansys.scade.apitools.prop.pragma.set_pragma_tool_text.rst", "_autosummary/ansys.scade.apitools.query.rst", "_autosummary/ansys.scade.apitools.query.type.rst", "_autosummary/ansys.scade.apitools.query.type.get_cell_type.rst", "_autosummary/ansys.scade.apitools.query.type.get_leaf_alias.rst", "_autosummary/ansys.scade.apitools.query.type.get_leaf_type.rst", "_autosummary/ansys.scade.apitools.query.type.get_type_name.rst", "_autosummary/ansys.scade.apitools.query.type.is_array.rst", "_autosummary/ansys.scade.apitools.query.type.is_enum.rst", "_autosummary/ansys.scade.apitools.query.type.is_imported.rst", "_autosummary/ansys.scade.apitools.query.type.is_predefined.rst", "_autosummary/ansys.scade.apitools.query.type.is_scalar.rst", "_autosummary/ansys.scade.apitools.query.type.is_structure.rst", "index.rst", "modules.rst"], "titles": ["ansys.scade.apitools.expr", "ansys.scade.apitools.expr.access", "ActivateNoInitOp", "ActivateOp", "ArrayOp", "AryOp", "BinaryOp", "CallExpression", "CaseOp", "ChgIthOp", "CondactOp", "ConditionalOp", "ConstValue", "DataArrayOp", "DataStructOp", "Expression", "FbyOp", "FlattenOp", "FlowOp", "IdExpression", "IfThenElseOp", "InitOp", "IteratorOp", "Label", "LabelledExpression", "Last", "ListExpression", "MakeOp", "NAryOp", "NumericCastOp", "OpCall", "OpOp", "PartialIteratorOp", "PreOp", "Present", "PrjDynOp", "PrjOp", "ProjectionOp", "RestartOp", "ScalarToVectorOp", "SharpOp", "SliceOp", "TextExpression", "TransposeOp", "UnaryOp", "ansys.scade.apitools.expr.access.accessor", "ansys.scade.apitools.expr.predef", "Eck", "ansys.scade.apitools.prop", "ansys.scade.apitools.prop.pragma", "ansys.scade.apitools.prop.pragma.find_pragma", "ansys.scade.apitools.prop.pragma.find_pragma_tool", "ansys.scade.apitools.prop.pragma.get_pragma_json", "ansys.scade.apitools.prop.pragma.get_pragma_text", "ansys.scade.apitools.prop.pragma.get_pragma_tool_text", "ansys.scade.apitools.prop.pragma.remove_pragma", "ansys.scade.apitools.prop.pragma.remove_pragma_tool", "ansys.scade.apitools.prop.pragma.set_pragma_json", "ansys.scade.apitools.prop.pragma.set_pragma_text", "ansys.scade.apitools.prop.pragma.set_pragma_tool_text", "ansys.scade.apitools.query", "ansys.scade.apitools.query.type", "ansys.scade.apitools.query.type.get_cell_type", "ansys.scade.apitools.query.type.get_leaf_alias", "ansys.scade.apitools.query.type.get_leaf_type", "ansys.scade.apitools.query.type.get_type_name", "ansys.scade.apitools.query.type.is_array", "ansys.scade.apitools.query.type.is_enum", "ansys.scade.apitools.query.type.is_imported", "ansys.scade.apitools.query.type.is_predefined", "ansys.scade.apitools.query.type.is_scalar", "ansys.scade.apitools.query.type.is_structure", "API Tools", "Reference"], "terms": {"collect": [0, 8, 48, 60], "function": [0, 1, 48, 49, 61], "access": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46], "express": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 60, 72], "accessor": [1, 15, 49], "thi": [1, 17, 27, 30, 31, 49, 53], "wrap": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49], "deriv": [1, 17, 27, 30, 31], "from": [1, 8, 10, 17, 20, 21, 27, 30, 31, 33, 39, 46, 51, 52, 55, 56], "suit": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "us": [1, 8], "class": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47], "correspond": [1, 52], "xscade": [1, 28], "serial": [1, 57], "expos": [1, 10, 20, 21, 33, 39], "document": [1, 46, 49, 52, 57], "metamodel": 1, "java": 1, "api": [1, 49], "12": 1, "languag": [1, 70], "These": [1, 49], "allow": 1, "precis": 1, "each": [1, 49], "member": 1, "an": [1, 2, 3, 10, 13, 32, 35, 38, 41, 43, 49, 53, 57, 61, 62, 63, 64, 66, 67], "creat": [1, 58, 59], "ani": [1, 42, 49], "attribut": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47], "ansi": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 72], "scade": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 72], "apitool": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 72], "expr": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 72], "oper": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 20, 21, 22, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47], "base": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47], "condactop": [2, 3], "activ": [2, 3, 10, 11], "default": [2, 3, 8, 10, 32, 35, 53], "valu": [2, 3, 8, 9, 10, 12, 13, 16, 21, 24, 32, 33, 35, 46, 47, 49, 53, 58, 59], "paramet": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "exprcal": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 20, 21, 22, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46], "higher": [2, 3, 7, 10, 11, 22, 31, 32, 38], "order": [2, 3, 7, 10, 11, 22, 31, 32, 38], "callexpress": [2, 3, 4, 5, 8, 10, 11, 13, 14, 16, 17, 18, 20, 21, 22, 27, 30, 31, 32, 33, 38, 39, 40], "call": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44], "properti": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48], "code": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 20, 21, 22, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 47], "eck": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 20, 21, 22, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44], "predefin": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 20, 21, 22, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 64, 69], "list": [2, 3, 6, 8, 9, 10, 13, 14, 16, 20, 21, 28, 30, 32, 33, 35, 36, 37, 39, 40, 49], "init": [2, 3, 10, 16, 21], "everi": [2, 3, 10, 11, 38], "condit": [2, 3, 10, 11, 20, 32, 38], "name": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 20, 21, 22, 23, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 64, 65], "str": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 70], "instanc": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 20, 21, 22, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 63, 64], "underli": [2, 3, 10, 11, 22, 31, 32, 38], "initi": [3, 21], "abstract": [4, 5, 7, 10, 11, 15, 18, 31, 37], "arrai": [4, 13, 35, 41, 43, 62, 66], "operand": [4, 6, 9, 18, 28, 29, 35, 36, 37, 40, 41, 43, 44], "unari": 5, "binari": [5, 28], "nari": [5, 28], "naryop": 6, "two": [6, 28, 40], "where": [6, 28, 44], "one": [6, 28, 44], "mod": 6, "lxor": 6, "lsl": 6, "lsr": 6, "time": 6, "There": 7, "ar": [7, 9, 21, 36, 37, 49, 62], "three": 7, "kind": [7, 49], "user": [7, 30], "case": 8, "switch": 8, "pattern": 8, "flow": [8, 9, 10, 16, 17, 18, 20, 21, 24, 27, 29, 33, 36, 37, 39, 40], "_": 8, "note": [8, 10, 17, 20, 21, 27, 28, 30, 31, 33, 39, 49], "The": [8, 9, 10, 17, 20, 21, 27, 30, 31, 33, 36, 37, 39, 49, 55, 56, 57, 58, 59, 61], "design": [8, 10, 17, 20, 21, 27, 30, 31, 33, 39], "differ": [8, 10, 17, 20, 21, 27, 30, 31, 33, 39], "slightli": [8, 10, 17, 20, 21, 27, 30, 31, 33, 39], "meta": [8, 10, 17, 20, 21, 27, 30, 31, 33, 39], "model": [8, 10, 17, 19, 20, 21, 25, 27, 29, 30, 31, 33, 34, 39, 49, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "implement": 8, "replac": 8, "tupl": [8, 24, 43], "A": [8, 49], "new": [8, 49, 58, 59], "provid": [8, 49], "option": [8, 62], "pair": [8, 14], "build": [8, 13, 14, 17, 27, 45], "structur": [8, 14, 17, 24, 27, 71], "when": [8, 20, 22, 32, 49, 50, 51, 53, 54, 58, 59, 62], "none": [8, 22, 32, 50, 51, 52, 54, 57, 61], "selector": 8, "projectionop": [9, 36], "static": [9, 36, 37], "assign": [9, 37], "with_": [9, 36, 37], "path": [9, 19, 35, 36, 37], "element": [9, 24, 36, 37, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62], "either": [9, 36, 37, 70], "label": [9, 14, 24, 36, 37], "index": [9, 24, 35, 36, 37, 41, 72], "conditionalop": [10, 38], "sinc": [10, 20, 21, 33, 39], "must": [10, 20, 21, 33, 39, 62, 70], "group": [10, 20, 21, 26, 33, 39], "directli": [10, 20, 21, 33, 39], "instead": [10, 20, 21, 33, 39, 49], "listexpress": [10, 20, 21, 33, 39], "opop": [11, 22], "restart": [11, 38], "liter": 12, "construct": [13, 14], "data": [13, 14, 49, 57], "labelledexpress": 14, "object": [15, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "top": 15, "level": 15, "delai": 16, "fby": 16, "after": [16, 21, 33], "first": [16, 21, 24, 33, 51, 54, 56, 59], "cycl": [16, 21, 33], "flatten": 17, "type": [17, 27, 29, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "input": [17, 21, 33, 39, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "type_": [17, 27, 29, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "constant": 19, "sensor": 19, "local": [19, 25], "variabl": [19, 25], "exprid": [19, 25, 34], "refer": [19, 72], "constvar": 19, "vector": [20, 39, 62], "size": [20, 22, 32, 39], "els": [20, 32], "part": 20, "which": [20, 21, 33, 39, 42, 49, 59, 62], "else_": 20, "fals": [20, 62], "if_": [20, 32], "true": [20, 62], "doe": [21, 33, 39, 52, 53, 54], "inherit": [21, 33, 39], "flowop": [21, 29, 33, 37, 39], "It": [21, 33, 39, 64], "have": [21, 33, 39], "iter": [22, 32], "accumulator_count": [22, 32], "number": [22, 24, 32], "accumul": [22, 32], "suitabl": [22, 32], "otherwis": [22, 32, 62], "project": [23, 35, 36, 37], "constvalu": 23, "method": 24, "count": 24, "return": [24, 45, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "occurr": 24, "alia": [24, 63, 64], "field": 24, "1": 24, "start": [24, 41, 59], "0": 24, "stop": 24, "9223372036854775807": 24, "rais": [24, 49, 53, 54, 61], "valueerror": 24, "present": [24, 49], "localvari": [25, 34], "item": 26, "make": 27, "compon": 27, "aryop": [28, 44], "more": [28, 30, 31, 40], "xor": 28, "land": 28, "lor": 28, "shall": [28, 52, 57], "store": [28, 52], "file": 28, "numer": [29, 46], "cast": 29, "convers": 29, "defin": 30, "aggreat": [30, 31], "lead": [30, 31], "simpler": [30, 31], "call_paramet": 30, "instance_paramet": 30, "iteratorop": 32, "partial": 32, "previou": 33, "pre": 33, "presenc": 34, "signal": 34, "arrayop": [35, 41, 43], "dynam": 35, "s": [35, 49, 63], "with_express": 37, "sharp": 40, "slice": 41, "fromindex": 41, "toindex": 41, "end": 41, "syntax": [42, 49], "error": 42, "text": [42, 49, 52, 53, 54, 57, 58, 59], "can": 42, "t": 42, "compil": 42, "exprtext": 42, "erron": 42, "transposit": 43, "dimens": [43, 62], "transpos": 43, "revers": 44, "lnot": 44, "predef_opr": 46, "cf": 46, "5": 46, "specif": [46, 49], "command": 46, "python": [46, 49, 52, 57], "script": [46, 49], "predef": 47, "enum": 47, "storag": 48, "set": [48, 49], "textual": [49, 53, 54, 57], "made": 49, "identifi": [49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "usual": 49, "relat": 49, "tool": 49, "semant": 49, "librari": 49, "sever": 49, "gener": 49, "core": 49, "ha": 49, "form": 49, "kei": [49, 51, 54, 56, 59], "exampl": [49, 62], "kcg": 49, "mc": 49, "json": [49, 52, 57], "abribrari": 49, "format": 49, "dictionari": 49, "assum": [49, 53], "uniqu": 49, "per": 49, "id": [49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "empti": [49, 53, 57, 58], "except": [49, 53, 54, 61], "thu": 49, "remov": [49, 55, 56], "automat": 49, "its": [49, 61], "some": 49, "exist": [49, 53, 54, 57, 58, 59], "wizard": 49, "tabl": 49, "edit": 49, "whether": [49, 55, 56, 58, 59, 66, 67, 68, 69, 70, 71], "modifi": [49, 57, 58, 59], "object_": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "found": [50, 51, 53, 54, 55, 56], "search": [50, 51, 53, 54, 55, 56, 58, 59, 72], "token": [51, 54, 56, 59], "textpragma": 51, "deseri": 52, "contain": 52, "retriev": 52, "valid": 52, "string": [53, 65], "typeerror": [53, 54], "bool": [55, 56, 57, 58, 59, 62, 66, 67, 68, 69, 70, 71], "same": 57, "updat": [57, 58, 59], "delet": [57, 58], "attach": 57, "yet": [58, 59], "main": 61, "purpos": 61, "get": 61, "natur": 61, "regardless": 61, "alias": [61, 62, 64], "skip_alia": 62, "multi": 62, "dimension": 62, "consid": [62, 70], "real": 62, "float32": 62, "2": 62, "matrix": 62, "3": 62, "appli": 62, "closest": 63, "definit": [63, 64], "itself": [63, 64], "e": [63, 64], "g": [63, 64], "namedtyp": [63, 64], "bypass": 64, "unless": 64, "represent": 65, "enumer": 67, "import": [68, 70], "target": 70, "c": 70, "scalar": 70, "ada": 70, "prop": 72, "queri": 72, "page": 72}, "objects": {"ansys.scade.apitools": [[0, 0, 0, "-", "expr"], [48, 0, 0, "-", "prop"], [60, 0, 0, "-", "query"]], "ansys.scade.apitools.expr": [[1, 0, 0, "-", "access"], [46, 0, 0, "-", "predef"]], "ansys.scade.apitools.expr.access": [[2, 1, 1, "", "ActivateNoInitOp"], [3, 1, 1, "", "ActivateOp"], [4, 1, 1, "", "ArrayOp"], [5, 1, 1, "", "AryOp"], [6, 1, 1, "", "BinaryOp"], [7, 1, 1, "", "CallExpression"], [8, 1, 1, "", "CaseOp"], [9, 1, 1, "", "ChgIthOp"], [10, 1, 1, "", "CondactOp"], [11, 1, 1, "", "ConditionalOp"], [12, 1, 1, "", "ConstValue"], [13, 1, 1, "", "DataArrayOp"], [14, 1, 1, "", "DataStructOp"], [15, 1, 1, "", "Expression"], [16, 1, 1, "", "FbyOp"], [17, 1, 1, "", "FlattenOp"], [18, 1, 1, "", "FlowOp"], [19, 1, 1, "", "IdExpression"], [20, 1, 1, "", "IfThenElseOp"], [21, 1, 1, "", "InitOp"], [22, 1, 1, "", "IteratorOp"], [23, 1, 1, "", "Label"], [24, 1, 1, "", "LabelledExpression"], [25, 1, 1, "", "Last"], [26, 1, 1, "", "ListExpression"], [27, 1, 1, "", "MakeOp"], [28, 1, 1, "", "NAryOp"], [29, 1, 1, "", "NumericCastOp"], [30, 1, 1, "", "OpCall"], [31, 1, 1, "", "OpOp"], [32, 1, 1, "", "PartialIteratorOp"], [33, 1, 1, "", "PreOp"], [34, 1, 1, "", "Present"], [35, 1, 1, "", "PrjDynOp"], [36, 1, 1, "", "PrjOp"], [37, 1, 1, "", "ProjectionOp"], [38, 1, 1, "", "RestartOp"], [39, 1, 1, "", "ScalarToVectorOp"], [40, 1, 1, "", "SharpOp"], [41, 1, 1, "", "SliceOp"], [42, 1, 1, "", "TextExpression"], [43, 1, 1, "", "TransposeOp"], [44, 1, 1, "", "UnaryOp"], [45, 5, 1, "", "accessor"]], "ansys.scade.apitools.expr.access.ActivateNoInitOp": [[2, 2, 1, "", "code"], [2, 2, 1, "", "defaults"], [2, 2, 1, "", "every"], [2, 2, 1, "", "name"], [2, 2, 1, "", "operator"]], "ansys.scade.apitools.expr.access.ActivateOp": [[3, 2, 1, "", "code"], [3, 2, 1, "", "defaults"], [3, 2, 1, "", "every"], [3, 2, 1, "", "name"], [3, 2, 1, "", "operator"]], "ansys.scade.apitools.expr.access.ArrayOp": [[4, 2, 1, "", "array"], [4, 2, 1, "", "code"], [4, 2, 1, "", "name"]], "ansys.scade.apitools.expr.access.AryOp": [[5, 2, 1, "", "code"], [5, 2, 1, "", "name"]], "ansys.scade.apitools.expr.access.BinaryOp": [[6, 2, 1, "", "code"], [6, 2, 1, "", "name"], [6, 2, 1, "", "operands"]], "ansys.scade.apitools.expr.access.CallExpression": [[7, 2, 1, "", "code"], [7, 2, 1, "", "name"]], "ansys.scade.apitools.expr.access.CaseOp": [[8, 2, 1, "", "cases"], [8, 2, 1, "", "code"], [8, 2, 1, "", "default"], [8, 2, 1, "", "name"], [8, 2, 1, "", "switch"]], "ansys.scade.apitools.expr.access.ChgIthOp": [[9, 2, 1, "", "code"], [9, 2, 1, "", "flow"], [9, 2, 1, "", "name"], [9, 2, 1, "", "value"], [9, 2, 1, "", "with_"]], "ansys.scade.apitools.expr.access.CondactOp": [[10, 2, 1, "", "code"], [10, 2, 1, "", "defaults"], [10, 2, 1, "", "every"], [10, 2, 1, "", "name"], [10, 2, 1, "", "operator"]], "ansys.scade.apitools.expr.access.ConditionalOp": [[11, 2, 1, "", "code"], [11, 2, 1, "", "every"], [11, 2, 1, "", "name"], [11, 2, 1, "", "operator"]], "ansys.scade.apitools.expr.access.ConstValue": [[12, 2, 1, "", "value"]], "ansys.scade.apitools.expr.access.DataArrayOp": [[13, 2, 1, "", "code"], [13, 2, 1, "", "data"], [13, 2, 1, "", "name"]], "ansys.scade.apitools.expr.access.DataStructOp": [[14, 2, 1, "", "code"], [14, 2, 1, "", "data"], [14, 2, 1, "", "name"]], "ansys.scade.apitools.expr.access.FbyOp": [[16, 2, 1, "", "code"], [16, 2, 1, "", "delay"], [16, 2, 1, "", "flows"], [16, 2, 1, "", "inits"], [16, 2, 1, "", "name"]], "ansys.scade.apitools.expr.access.FlattenOp": [[17, 2, 1, "", "code"], [17, 2, 1, "", "flow"], [17, 2, 1, "", "name"], [17, 2, 1, "", "type_"]], "ansys.scade.apitools.expr.access.FlowOp": [[18, 2, 1, "", "code"], [18, 2, 1, "", "flow"], [18, 2, 1, "", "name"]], "ansys.scade.apitools.expr.access.IdExpression": [[19, 2, 1, "", "path"]], "ansys.scade.apitools.expr.access.IfThenElseOp": [[20, 2, 1, "", "code"], [20, 2, 1, "", "else_"], [20, 2, 1, "", "if_"], [20, 2, 1, "", "name"], [20, 2, 1, "", "then"]], "ansys.scade.apitools.expr.access.InitOp": [[21, 2, 1, "", "code"], [21, 2, 1, "", "flows"], [21, 2, 1, "", "inits"], [21, 2, 1, "", "name"]], "ansys.scade.apitools.expr.access.IteratorOp": [[22, 2, 1, "", "accumulator_count"], [22, 2, 1, "", "code"], [22, 2, 1, "", "name"], [22, 2, 1, "", "operator"], [22, 2, 1, "", "size"]], "ansys.scade.apitools.expr.access.Label": [[23, 2, 1, "", "name"]], "ansys.scade.apitools.expr.access.LabelledExpression": [[24, 3, 1, "", "count"], [24, 4, 1, "", "flow"], [24, 3, 1, "", "index"], [24, 4, 1, "", "label"]], "ansys.scade.apitools.expr.access.Last": [[25, 2, 1, "", "variable"]], "ansys.scade.apitools.expr.access.ListExpression": [[26, 2, 1, "", "items"]], "ansys.scade.apitools.expr.access.MakeOp": [[27, 2, 1, "", "code"], [27, 2, 1, "", "flows"], [27, 2, 1, "", "name"], [27, 2, 1, "", "type_"]], "ansys.scade.apitools.expr.access.NAryOp": [[28, 2, 1, "", "code"], [28, 2, 1, "", "name"], [28, 2, 1, "", "operands"]], "ansys.scade.apitools.expr.access.NumericCastOp": [[29, 2, 1, "", "code"], [29, 2, 1, "", "flow"], [29, 2, 1, "", "name"], [29, 2, 1, "", "type_"]], "ansys.scade.apitools.expr.access.OpCall": [[30, 2, 1, "", "call_parameters"], [30, 2, 1, "", "code"], [30, 2, 1, "", "instance_parameters"], [30, 2, 1, "", "name"], [30, 2, 1, "", "operator"]], "ansys.scade.apitools.expr.access.OpOp": [[31, 2, 1, "", "code"], [31, 2, 1, "", "name"], [31, 2, 1, "", "operator"]], "ansys.scade.apitools.expr.access.PartialIteratorOp": [[32, 2, 1, "", "accumulator_count"], [32, 2, 1, "", "code"], [32, 2, 1, "", "defaults"], [32, 2, 1, "", "if_"], [32, 2, 1, "", "name"], [32, 2, 1, "", "operator"], [32, 2, 1, "", "size"]], "ansys.scade.apitools.expr.access.PreOp": [[33, 2, 1, "", "code"], [33, 2, 1, "", "flows"], [33, 2, 1, "", "name"]], "ansys.scade.apitools.expr.access.Present": [[34, 2, 1, "", "signal"]], "ansys.scade.apitools.expr.access.PrjDynOp": [[35, 2, 1, "", "array"], [35, 2, 1, "", "code"], [35, 2, 1, "", "default"], [35, 2, 1, "", "indexes"], [35, 2, 1, "", "name"]], "ansys.scade.apitools.expr.access.PrjOp": [[36, 2, 1, "", "code"], [36, 2, 1, "", "flow"], [36, 2, 1, "", "name"], [36, 2, 1, "", "with_"]], "ansys.scade.apitools.expr.access.ProjectionOp": [[37, 2, 1, "", "code"], [37, 2, 1, "", "flow"], [37, 2, 1, "", "name"], [37, 2, 1, "", "with_"]], "ansys.scade.apitools.expr.access.RestartOp": [[38, 2, 1, "", "code"], [38, 2, 1, "", "every"], [38, 2, 1, "", "name"], [38, 2, 1, "", "operator"]], "ansys.scade.apitools.expr.access.ScalarToVectorOp": [[39, 2, 1, "", "code"], [39, 2, 1, "", "flows"], [39, 2, 1, "", "name"], [39, 2, 1, "", "size"]], "ansys.scade.apitools.expr.access.SharpOp": [[40, 2, 1, "", "code"], [40, 2, 1, "", "flows"], [40, 2, 1, "", "name"]], "ansys.scade.apitools.expr.access.SliceOp": [[41, 2, 1, "", "array"], [41, 2, 1, "", "code"], [41, 2, 1, "", "fromIndex"], [41, 2, 1, "", "name"], [41, 2, 1, "", "toIndex"]], "ansys.scade.apitools.expr.access.TextExpression": [[42, 2, 1, "", "text"]], "ansys.scade.apitools.expr.access.TransposeOp": [[43, 2, 1, "", "array"], [43, 2, 1, "", "code"], [43, 2, 1, "", "dimensions"], [43, 2, 1, "", "name"]], "ansys.scade.apitools.expr.access.UnaryOp": [[44, 2, 1, "", "code"], [44, 2, 1, "", "name"], [44, 2, 1, "", "operand"]], "ansys.scade.apitools.expr.predef": [[47, 1, 1, "", "Eck"]], "ansys.scade.apitools.prop": [[49, 0, 0, "-", "pragma"]], "ansys.scade.apitools.prop.pragma": [[50, 5, 1, "", "find_pragma"], [51, 5, 1, "", "find_pragma_tool"], [52, 5, 1, "", "get_pragma_json"], [53, 5, 1, "", "get_pragma_text"], [54, 5, 1, "", "get_pragma_tool_text"], [55, 5, 1, "", "remove_pragma"], [56, 5, 1, "", "remove_pragma_tool"], [57, 5, 1, "", "set_pragma_json"], [58, 5, 1, "", "set_pragma_text"], [59, 5, 1, "", "set_pragma_tool_text"]], "ansys.scade.apitools.query": [[61, 0, 0, "-", "type"]], "ansys.scade.apitools.query.type": [[62, 5, 1, "", "get_cell_type"], [63, 5, 1, "", "get_leaf_alias"], [64, 5, 1, "", "get_leaf_type"], [65, 5, 1, "", "get_type_name"], [66, 5, 1, "", "is_array"], [67, 5, 1, "", "is_enum"], [68, 5, 1, "", "is_imported"], [69, 5, 1, "", "is_predefined"], [70, 5, 1, "", "is_scalar"], [71, 5, 1, "", "is_structure"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:property", "3": "py:method", "4": "py:attribute", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"]}, "titleterms": {"ansi": [0, 1, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "scade": [0, 1, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "apitool": [0, 1, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "expr": [0, 1, 45, 46], "access": [1, 45], "activatenoinitop": 2, "activateop": 3, "arrayop": 4, "aryop": 5, "binaryop": 6, "callexpress": 7, "caseop": 8, "chgithop": 9, "condactop": 10, "conditionalop": 11, "constvalu": 12, "dataarrayop": 13, "datastructop": 14, "express": 15, "fbyop": 16, "flattenop": 17, "flowop": 18, "idexpress": 19, "ifthenelseop": 20, "initop": 21, "iteratorop": 22, "label": 23, "labelledexpress": 24, "last": 25, "listexpress": 26, "makeop": 27, "naryop": 28, "numericcastop": 29, "opcal": 30, "opop": 31, "partialiteratorop": 32, "preop": 33, "present": 34, "prjdynop": 35, "prjop": 36, "projectionop": 37, "restartop": 38, "scalartovectorop": 39, "sharpop": 40, "sliceop": 41, "textexpress": 42, "transposeop": 43, "unaryop": 44, "accessor": 45, "predef": 46, "eck": 47, "prop": [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "pragma": [49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "find_pragma": 50, "find_pragma_tool": 51, "get_pragma_json": 52, "get_pragma_text": 53, "get_pragma_tool_text": 54, "remove_pragma": 55, "remove_pragma_tool": 56, "set_pragma_json": 57, "set_pragma_text": 58, "set_pragma_tool_text": 59, "queri": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "type": [61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "get_cell_typ": 62, "get_leaf_alia": 63, "get_leaf_typ": 64, "get_type_nam": 65, "is_arrai": 66, "is_enum": 67, "is_import": 68, "is_predefin": 69, "is_scalar": 70, "is_structur": 71, "api": 72, "tool": 72, "content": 72, "indic": 72, "tabl": 72, "refer": 73}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 56}})