name: GitHub CI
on:
  pull_request:
  push:
    tags:
      - "*"
    branches:
      - main
  workflow_dispatch:

env:
  MAIN_PYTHON_VERSION: '3.10'
  DOCUMENTATION_CNAME: 'apitools.scade.docs.pyansys.com'
  LIBRARY_NAME: 'ansys-scade-apitools'
  LIBRARY_NAMESPACE: 'ansys.scade.apitools'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  code-style:
    name: "Code style"
    runs-on: ubuntu-latest
    steps:
      - uses: ansys/actions/code-style@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

  doc-style:
    name: "Documentation style"
    runs-on: ubuntu-latest
    steps:
      - uses: ansys/actions/doc-style@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  smoke-tests:
    name: "Build and Smoke tests"
    runs-on: ${{ matrix.os }}
    needs: [code-style]
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.7']
    steps:
      - uses: ansys/actions/build-wheelhouse@v4
        with:
          library-name: ${{ env.LIBRARY_NAME }}
          # library-namespace: ${{ env.LIBRARY_NAMESPACE }}
          operating-system: ${{ matrix.os }}
          python-version: ${{ matrix.python-version }}

  tests:
    name: "Tests"
    # runs-on: ${{ matrix.os }}
    runs-on: [self-hosted, 'SCADE']
    needs: [smoke-tests]
    strategy:
      matrix:
        os: [windows-latest]
        scade-version: ['23.1']
      fail-fast: false
    steps:
      - name: "Install Git and clone project"
        uses: actions/checkout@v3
    
      # - uses: ansys/actions/tests-pytest@v4
      - uses: ./tests-pytest
        with:
          pytest-extra-args: "--cov=ansys --cov-report=term --cov-branch --cov-report=html:.cov/html"
          scade-version: ${{ matrix.scade-version }}

  doc-build:
    name: "Build documentation"
    runs-on: ubuntu-latest
    needs: [doc-style]
    steps:
      - uses: ansys/actions/doc-build@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

      - name: "Zipping the examples directory"
        run: |
          sudo apt-get install zip
          zip -r examples.zip ./examples
      
      - name: "Upload zip to artifacts"
        uses: actions/upload-artifact@v3
        with:
          path: ./examples.zip
          retention-days: 7
          if-no-files-found: error

  build-library:
    name: "Build library basic example"
    runs-on: ubuntu-latest
    needs: [tests, doc-build]
    steps:
      - uses: ansys/actions/build-library@v4
        with:
          library-name: ${{ env.LIBRARY_NAME }}
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

  doc-deploy-dev:
    name: "Deploy development documentation"
    # Deploy development only when merging or pushing to the 'main' branch
    runs-on: ubuntu-latest
    needs: [build-library]
    if: github.event_name == 'push' && !contains(github.ref, 'refs/tags')
    steps:
      - uses: ansys/actions/doc-deploy-dev@v4
        with:
          doc-artifact-name: 'documentation-html'
          cname: ${{ env.DOCUMENTATION_CNAME }}
          token: ${{ secrets.GITHUB_TOKEN }}
  
  release-github:
    name: "Release to GitHub"
    runs-on: ubuntu-latest
    needs: [build-library]
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    steps:
      - uses: ansys/actions/release-github@v4
        with:
          library-name: ${{ env.LIBRARY_NAME }}
          additional-artifacts: 'examples.zip'

  doc-deploy-stable:
    name: "Deploy stable documentation"
    # Deploy release documentation when creating a new tag
    runs-on: ubuntu-latest
    needs: [release-github]
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    steps:
      - uses: ansys/actions/doc-deploy-stable@v4
        with:
          doc-artifact-name: 'documentation-html'
          cname: ${{ env.DOCUMENTATION_CNAME }}
          token: ${{ secrets.GITHUB_TOKEN }}

  release-pypi-private:
    name: "Release to private PyPI"
    runs-on: ubuntu-latest
    needs: [release-github]
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    steps:
      - uses: ansys/actions/release-pypi-private@v4
        with:
          library-name: ${{ env.LIBRARY_NAME }}
          twine-username: "__token__"
          twine-token: ${{ secrets.PYANSYS_PYPI_PRIVATE_PAT }}
